
[{"content":"The views expressed on this blog are my own and do not reflect those of my employer.\n","date":"24 June 2024","externalUrl":null,"permalink":"/","section":"","summary":"The views expressed on this blog are my own and do not reflect those of my employer.","title":"","type":"page"},{"content":"","date":"24 June 2024","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":" Enjoy your life. ","date":"24 June 2024","externalUrl":null,"permalink":"/blog/","section":"Blog","summary":"Enjoy your life.","title":"Blog","type":"blog"},{"content":"","date":"24 June 2024","externalUrl":null,"permalink":"/authors/chenhu/","section":"Authors","summary":"","title":"Chenhu","type":"authors"},{"content":"Provision a new branch with VMware SD-WAN Orchestrator.\nLog in to VMware SD-WAN Orchestrator. Disregard this step if you are already logged in.\nSelect Configure \u0026gt; Edges in the navigation pane on the left. On the Edges page, select ADD Edge. The Provision ADD Edge configuration page appears.\nEnter LAB-VCE-01 in the Name text box.\nIn the Model drop-down menu, select Virtual Edge.\nIn the Profile drop-down menu, select Branch Internet Only Profile.\nIn the Authentication drop-down menu, select Certificate Disabled.\nIn the Edge License drop-down menu, select POC | 10 Gbps | North America.\nScroll down and click add edge. The This Edge has been provisioned message appears.\nIt is not necessary to click Save Changes. In our productive environment, need to set Location as well. ","date":"24 June 2024","externalUrl":null,"permalink":"/blog/ztp-provision-new-branch/","section":"Blog","summary":"Provision a new branch with VMware SD-WAN Orchestrator.","title":"Provision New Branch - VMware SDWAN","type":"blog"},{"content":"","date":"24 June 2024","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"24 June 2024","externalUrl":null,"permalink":"/tags/velo/","section":"Tags","summary":"","title":"Velo","type":"tags"},{"content":"","date":"24 June 2024","externalUrl":null,"permalink":"/tags/velo-cloud/","section":"Tags","summary":"","title":"Velo Cloud","type":"tags"},{"content":"","date":"24 June 2024","externalUrl":null,"permalink":"/tags/vmware-sdwan/","section":"Tags","summary":"","title":"VMware SDWAN","type":"tags"},{"content":" Background # 在配置 NCS55 Egress Qos 的时候出现如下的报错:\ninterface GigabitEthernet0/0/0/111.123 service-policy output test-001-out !!% \u0026#39;DPA\u0026#39; detected the \u0026#39;warning\u0026#39; condition \u0026#39;SDK - No resources for operation\u0026#39; ! end 我尝试去理解是哪一种资源不够用的时候，发现了一个 NCS55 中比较少见的资源 rate-profiles, 研究了下它是如何被消耗掉.\nRate-Profiles 定义 # 关于官方的解释如下:\nA maximum value of up to 64 unique queues is supported. Each unique queue-limit consumes one rate profile in the Traffic manager. Out of 64 unique queues, few are reserved for default configs and the remaining are usable.\nModular QoS Configuration Guide for Cisco NCS 5500 Series Routers\n64/per NPU 5 or 6 profiles been reserved. unique queue-limit will consume 1 rate-profile. 如何去理解 unique queue-limit， 这里就要引入 GSR（Guaranteed service rate）.\nThe bandwidth or a shaper configuration is creating a GSR (Guaranteed service rate). Per default 10% of GSR will be taken as a queue-limit.\n所以字面意思，我们可以将具有相同值的 queue buffer size 认为消耗 1 个 rate-profile （并不是相同的 GSR 会被算做消耗一个 rate-profile）。\n记录一下一个 Buffer size 的计算方式：\nGuaranteed service rate = (100Gbps – shape rate) * remaining bandwidth = 50 000 000 kbps * 1% = 500 000 kbps. Buffer size = ( 500 000 kbps / 8 ) * 10ms / 1000 = 625 KB policy-map MC_out class TC_6 priority level 1 shape average percent 50 ! \u0026lt;snip\u0026gt; ! class TC_1 bandwidth remaining percent 1 ! class class-default bandwidth remaining percent 1 ! end-policy-map RP/0/RP0/CPU0:CORE1-NCS5516-A#show qos interface hundredGigE 0/1/0/34 output Level1 Class = class-default Egressq Queue ID = 1744 (Default LP queue) Queue Max. BW. = 101803495 kbps (default) Queue Min. BW. = 0 kbps (default) Inverse Weight / Weight = 60 / (1%) Guaranteed service rate = 549450 kbps TailDrop Threshold = 688128 bytes / 10 ms (10 ms) Rate-Profiles 的计算 # 默认情况 queue limit 为 10ms.\n用 test-001-child-out 为例子:\n默认 queue-limit 为 10ms， 但是因为带宽不一样， 会导致 GSR 不一样，这样算出来的 queue-limit 的 buffer 就会不一样，在以下事例中消耗的 rate-profile 为 5 个.\nCfg Command output policy-map test-child-out\nclass test-out-cos5\nshape average percent 10\npriority level 1\n!\nclass test-out-cos4\nbandwidth percent 20\n!\nclass test-out-cos3\nbandwidth percent 20\n!\nclass test-out-cos2\nbandwidth percent 10\n!\nclass test-out-cos1\nbandwidth percent 5\n!\nclass class-default\nbandwidth percent 25\n!\nend-policy-map RP/0/RP0/CPU0:NCS-57C3-C#show qos interface twentyFiveGigE 0/0/0/0 output Mon May 13 06:20:20.259 UTC\nNOTE:- Configured values are displayed within parentheses\nInterface TwentyFiveGigE0/0/0/0 ifh 0x328 \u0026ndash; output policy\nNPU Id: 0\nTotal number of classes: 7\nInterface Bandwidth: 25000000 kbps\nPolicy Name: test-out\nSPI Id: 0x0\nVOQ Base: 1024\nPFC enabled: 0\nAccounting Type: Layer1 (Include Layer 1 encapsulation and above)\n\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\nLevel1 Class = class-default\nQueue Max. BW. = 2999936 kbps (150000000 bits/sec)\nQueue Min. BW. = 2999936 kbps (default)\nInverse Weight / Weight = 1 / (BWR not configured)\nLevel2 Class (HP1) = test-out-cos5\nEgressq Queue ID = 1029 (HP1 queue)\nQueue Max. BW. = 15625 kbps (10 %)\nGuaranteed service rate = 15000 kbps\nPeak burst = 36864 bytes (default)\nTailDrop Threshold = 18688 bytes / 10 ms (default) \u0026lt; \u0026lt; \u0026lt; \u0026lt; \u0026lt; \u0026lt; \u0026lt; \u0026lt; WRED not configured for this class\nLevel2 Class = test-out-cos4\nEgressq Queue ID = 1028 (LP queue)\nQueue Max. BW. = no max (default)\nQueue Min. BW. = 46875 kbps (30 %)\nInverse Weight / Weight = 1 / (BWR not configured)\nGuaranteed service rate = 45000 kbps\nPeak burst = 36864 bytes (default)\nTailDrop Threshold = 56064 bytes / 10 ms (default) \u0026lt; \u0026lt; \u0026lt; \u0026lt; \u0026lt; \u0026lt; \u0026lt; \u0026lt; WRED not configured for this class\nLevel2 Class = test-out-cos3\nEgressq Queue ID = 1027 (LP queue)\nQueue Max. BW. = no max (default)\nQueue Min. BW. = 31250 kbps (20 %)\nInverse Weight / Weight = 1 / (BWR not configured)\nGuaranteed service rate = 30000 kbps\nPeak burst = 36864 bytes (default)\nTailDrop Threshold = 37376 bytes / 10 ms (default)\u0026lt; \u0026lt; \u0026lt; \u0026lt; \u0026lt; \u0026lt; \u0026lt; \u0026lt; WRED not configured for this class\nLevel2 Class = test-out-cos2\nEgressq Queue ID = 1026 (LP queue)\nQueue Max. BW. = no max (default)\nQueue Min. BW. = 15625 kbps (10 %)\nInverse Weight / Weight = 1 / (BWR not configured)\nGuaranteed service rate = 15000 kbps\nPeak burst = 36864 bytes (default)\nTailDrop Threshold = 18688 bytes / 10 ms (default) \u0026lt; \u0026lt; \u0026lt; \u0026lt; \u0026lt; \u0026lt; \u0026lt; \u0026lt; WRED not configured for this class\nLevel2 Class = test-out-cos1\nEgressq Queue ID = 1025 (LP queue)\nQueue Max. BW. = no max (default)\nQueue Min. BW. = 7812 kbps (5 %)\nInverse Weight / Weight = 1 / (BWR not configured)\nGuaranteed service rate = 7500 kbps\nPeak burst = 36864 bytes (default)\nTailDrop Threshold = 9216 bytes / 10 ms (default) \u0026lt; \u0026lt; \u0026lt; \u0026lt; \u0026lt; \u0026lt; \u0026lt; \u0026lt; WRED not configured for this class\nLevel2 Class = class-default\nEgressq Queue ID = 1024 (Default LP queue)\nQueue Max. BW. = no max (default)\nQueue Min. BW. = 39062 kbps (25 %)\nInverse Weight / Weight = 1 / (BWR not configured)\nGuaranteed service rate = 37500 kbps\nPeak burst = 36864 bytes (default)\nTailDrop Threshold = 46848 bytes / 10 ms (default) \u0026lt; \u0026lt; \u0026lt; \u0026lt; \u0026lt; \u0026lt; \u0026lt; \u0026lt; WRED not configured for this class 使用下面命令输出芯片 programming 信息， 过滤“uint32_t rate_profile_id” 可以查看目前我们的 proflile 数量。\nRP/0/RP0/CPU0:NCS#attach location 0/0/cPU0 Mon May 13 06:42:49.674 UTC Last login: Sat Jan 27 22:10:32 2024 from 172.0.17.1 export PS1=\u0026#39;#\u0026#39; [xr-vm_node0_0_CPU0:~]$export PS1=\u0026#39;#\u0026#39; #dpa_tmrateprofile_show_client -D 上述命令等同于 show dpa objects tmrateprofile location 0/0/CPU0 另外从 7.11.2 开始新增加命令查看该 profile 的实用情况:\nshow controllers npu resources qos rate-class-profile instance all location all ======================================================================== QoS TM Rate Profile Information: Note: - This is a global resource and shared across all LCs Used( %) Free Total Reserved Highest Used 59(100%) 0 59 5 59 如何减少 Rate-Profiles 的数量 # You can avoid exhausting rate profiles by configuring queue limits in absolute units (such as bytes, kilobytes, or megabytes) for class maps and sharing these limits with the policy maps.\n根据官方的 Guide 提示，我们可以配置固定大小的 buffer size，如下这种配置情况，只会使用一个 rate-profile。\npolicy-map test-child-out class test-out-cos5 priority level 1 shape average percent 20 queue-limit 18688 bytes ! class test-out-cos4 bandwidth percent 20 queue-limit 18688 bytes ! class test-out-cos3 bandwidth percent 20 queue-limit 18688 bytes ! class test-out-cos2 bandwidth percent 20 queue-limit 18688 bytes ! class test-out-cos1 bandwidth percent 5 queue-limit 18688 bytes ! class class-default bandwidth percent 15 queue-limit 18688 bytes ! end-policy-map ! ","date":"20 May 2024","externalUrl":null,"permalink":"/blog/qos-rate-profiles/","section":"Blog","summary":"Background # 在配置 NCS55 Egress Qos 的时候出现如下的报错:","title":"NCS55 - Qos Rate Profiles","type":"blog"},{"content":"","date":"20 May 2024","externalUrl":null,"permalink":"/tags/qos/","section":"Tags","summary":"","title":"Qos","type":"tags"},{"content":"","date":"16 May 2024","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"","date":"16 May 2024","externalUrl":null,"permalink":"/tags/telemetry/","section":"Tags","summary":"","title":"Telemetry","type":"tags"},{"content":"","date":"16 May 2024","externalUrl":null,"permalink":"/series/telemetry/","section":"Series","summary":"","title":"Telemetry","type":"series"},{"content":" TIG # xuxing3/tig Python 0 0 This project is based on the following version.\nIf you have problems using other versions, please try to modify the docker images version in the docker-compose file.\nGrafana v10.2.2 Influxdb v2.7.4 telegraf v1.29.0 Pre-Installation Requirements # Docker Engine, Docker Compose Git Usage # Clone to Your server\ngit clone https://github.com/xuxing3/tig.git\nPay attention to modify the address in telegraf.conf to your own server address\n[[outputs.influxdb_v2]] urls = [\u0026#34;http://x.x.x.x:8086\u0026#34;] token = \u0026#34;my-super-secret-auth-token\u0026#34; organization = \u0026#34;organization\u0026#34; bucket = \u0026#34;xuxing\u0026#34; # [[outputs.file]] # files = [\u0026#34;stdout\u0026#34;] # data_format = \u0026#34;influx\u0026#34; [[inputs.cisco_telemetry_mdt]] ## Telemetry transport can be \u0026#34;tcp\u0026#34; or \u0026#34;grpc\u0026#34;. TLS is only supported when ## using the grpc transport. transport = \u0026#34;tcp\u0026#34; ## Address and port to host telemetry listener service_address = \u0026#34;:57000\u0026#34; ## Grpc Maximum Message Size, default is 4MB, increase the size. max_msg_size = 4000000 Bring up docker container by docker-compose\ndocker-compose build; docker-compose up -d\nAccess to Grafana and configure database\nAccess to Grafana GUI\nhttp://(your-server-ip):3000\nInitial username/password = admin/admin\nAdd your first data source \u0026gt; Add data source \u0026gt; Choose \u0026ldquo;InfluxDB\u0026rdquo;\nURL: http://(your-server-ip):8086\nBasic auth:\nUser: admin Password: cisco!123 Custom HTTP Headers:\nHeader:Authorization\nValue:\u0026ldquo;Token my-super-secret-auth-token\u0026rdquo; (无引号，注意有空格)\nDatabase:xuxing\nUser:admin\nPassword:cisco!123\nHTTP Method:GET\n(The configuration is filled in according to the Docker compose file, you can change it to your own settings)\n\u0026ldquo;Save \u0026amp; Test\u0026rdquo;\nConfigure your router (e.g. XR)\nThe protocol is set to tcp, and grpc is not easy to use after testing.\ntelemetry model-driven destination-group xuxing address-family ipv4 x.x.x.x port 57000 encoding self-describing-gpb protocol tcp ! ! sensor-group SYSTEM-CPU-MEMORY-COUNTERS sensor-path Cisco-IOS-XR-wdsysmon-fd-oper:system-monitoring/cpu-utilization ! subscription TIG sensor-group-id SYSTEM-CPU-MEMORY-COUNTERS sample-interval 10000 destination-id xuxing ! ! Reference # InfluxDB2.0+Grafana+Telegraf の構築\ninfluxDB + Grafana に入門する\nInfluxDB+Grafana 構築 on docker\nInfluxdb + Python Write and Query # Add two example file to help you Write and Query the data from Influxdb.\n","date":"16 May 2024","externalUrl":null,"permalink":"/blog/tig/","section":"Blog","summary":"TIG # xuxing3/tig Python 0 0 This project is based on the following version.","title":"Telemetry-tig","type":"blog"},{"content":" Background # In 64-bit XR system, we have a easy way to monitor syslog and trigger a collection action. (EDCD + PAM EEM agent)\nIn 32-bit XR system, we may only can use the EEM script.\nBut the EEM script is hard for us to write. there are cups of articles that show some examples, we can reference and do some modify.\nReference: ASR9000 EEM Script repository\nEEM Script # The EEM script can run in the background when a Syslog like “%ROUTING-BGP-3-NPL_TIMEOUT” appears, then it begins to collect two show tech files:\n::cisco::eem::event_register_syslog pattern \u0026#34;%ROUTING-BGP-3-NPL_TIMEOUT\u0026#34; maxrun_sec 600 # # errorInfo gets set by namespace if any of the auto_path directories do not # contain a valid tclIndex file. It is not an error just left over stuff. # So we set the errorInfo value to null so that we don\u0026#39;t have left # over errors in it. # set errorInfo \u0026#34;\u0026#34; namespace import ::cisco::eem::* namespace import ::cisco::lib::* # # errorInf gets set by namespace if any of the auto_path directories do not # contain a valid tclIndex file. It is not an error just left over stuff. # So we set the errorInfo value to null so that we don\u0026#39;t have left # over errors in it. # set errorInfo \u0026#34;\u0026#34; #Notify users that we\u0026#39;re collecting set output_msg \u0026#34;Collecting commands\u0026#34; action_syslog priority info msg $output_msg #query the event info array set arr_einfo [event_reqinfo] if {$_cerrno != 0} { set result [format \u0026#34;component=%s; subsys err=%s; posix err=%s;\\n%s\u0026#34; \\ $_cerr_sub_num $_cerr_sub_err $_cerr_posix_err $_cerr_str] error $result } #Extract the message from the event info and append it to the email body set syslog_msg $arr_einfo(msg) #open a cli connection if [catch {cli_open} result] { error $result $errorInfo } else { array set cli1 $result } if [catch {cli_exec $cli1(fd) \u0026#34;term len 0\u0026#34;} _cli_result] { error $_cli_result $errorInfo } if [catch {cli_exec $cli1(fd) \u0026#34;show tech routing bgp \u0026#34;} _cli_result] { error $_cli_result $errorInfo } if [catch {cli_exec $cli1(fd) \u0026#34;show tech-support tcp nsr\u0026#34;} _cli_result] { error $_cli_result $errorInfo } # Close open cli before exit. if [catch {cli_close $cli1(fd) $cli1(tty_id)} result] { error $result $errorInfo } IOX Router Config # event manager directory user policy harddisk:/scripts/ event manager policy bgpnpl.tcl username event_manager_user persist-time 3600 username event_manager_user group root-system group cisco-support ! aaa authorization commands eem-method none aaa authorization eventmanager default local line template eem-template authorization commands eem-method ! vty-pool eem 100 105 line-template eem-template Copy your script to harddisk:/scripts/\nVerify the output from the Router # RP/0/RP0/CPU0:Lab#show cli history detail 963 - vty100 exec Thu Feb 1 15:36:32.105 2024 UTC terminal length 0 964 - vty100 exec Thu Feb 1 15:36:32.513 2024 UTC terminal length 0 965 - vty100 exec Thu Feb 1 15:36:32.935 2024 UTC show tech-support routing bgp 994 - vty100 exec Thu Feb 1 15:40:58.091 2024 UTC show tech-support tcp nsr 1000 - vty100 exec Thu Feb 1 15:43:09.972 2024 UTC exit RP/0/RP0/CPU0:TAC-Lab#dir harddisk:/showtech Thu Feb 1 15:42:05.904 UTC Directory of harddisk:/showtech 24166 -rw- 17359650 Thu Feb 1 15:40:57 2024 showtech-bgp-2024-Feb-01.153633.UTC.tgz 24167 drwx 4096 Thu Feb 1 15:41:42 2024 showtech-tcp_nsr-2024-Feb-01.154058.UTC 6302136320 bytes total (3869633024 bytes free) Notes # Be careful to use it to collect showtech file or some heavy output, as it may increase router loaded and cause some other issue.\n","date":"2 May 2024","externalUrl":null,"permalink":"/blog/eem-to-collect-info/","section":"Blog","summary":"Background # In 64-bit XR system, we have a easy way to monitor syslog and trigger a collection action.","title":"A Simple EEM to Collect log Trigger by Syslog in IOX","type":"blog"},{"content":"","date":"2 May 2024","externalUrl":null,"permalink":"/tags/iosxr/","section":"Tags","summary":"","title":"IOSXR","type":"tags"},{"content":"","date":"2 May 2024","externalUrl":null,"permalink":"/tags/ts/","section":"Tags","summary":"","title":"TS","type":"tags"},{"content":" MPLS Ping # 虽然是 Ping 的一种， 但是采用的不是 ICMP 探针检测中间路径，使用的是 IPv4 或者 IPv6 UDP 数据包。 有两种报文，MPLS Echo Request/MPLS Echo Reply。\nMPLS Echo Request/MPLS Echo Reply UDP 的源目端口号为 3503 MPLS Echo Request 的目的 IP 地址为127.0.0.1 MPLS Echo Request 内层 IP TTL 为 1，MPLS TTL 正常 MPLS Echo Request 中携带 FEC 相关信息。 MPLS Echo Request # MPLS Echo Reply # MPLS Echo Request 在 XR 设备中的处理 # 源设备 # 在 MPLS Echo Request send 的源设备上， 数据包会有 RP 的 UDP -\u0026gt; RP SPP -\u0026gt; RP NETIO -\u0026gt; LC SPP -\u0026gt; LC NetIO -\u0026gt; 出接口送出。\n从 LC LPTS 中，我们可以检查出从 RP 产生的数据包 counter：\nRP/0/RSP0/CPU0:ASR9901-1# show lpts pifib hardware static-police location 0/0/CPU0 | in PUNT_NETIO Fri Sep 1 05:50:28.611 UTC PUNT_NETIO_RP_TO_LC_CPU NETIO_HI 5000 1000 12119 0 Local 目的设备 # RP/0/RSP0/CPU0:ASR9901-2#show packet-trace results Sun Sep 3 03:02:50.970 UTC T: D - Drop counter; P - Pass counter Location | Source | Counter | T | Last-Attribute | Count ------------ ------------ ------------------------- - ---------------------------------------- --------------- 0/0/CPU0 NP0 PACKET_MARKED P TenGigE0_0_0_12 100 0/0/CPU0 NP0 PACKET_FROM_INJECT P 100 0/0/CPU0 NP0 PACKET_TO_PUNT P 300 0/0/CPU0 NP0 PACKET_INGR_TOP_LOOPBACK P 100 0/0/CPU0 NP0 PACKET_INGR_TM_LOOPBACK P 100 0/0/CPU0 SPP-PI CLIENT_PUNT_SUCCESS P stage1 100 0/0/CPU0 NETIO-PI PUNT_DROP D packet_input 100 0/0/CPU0 NETIO-PI BYPASS_IN_COUNT P netio_send_pulse_punt 100 0/0/CPU0 spp-LIB ENTRY_COUNT P SPP PD Punt: stage1 200 0/0/CPU0 netio-LIB ENTRY_COUNT P lpts_pifib_remote_delivers 400 0/0/CPU0 spp-LIB EXIT_COUNT P SPP PD Inject: injectfun 100 0/0/CPU0 netio-LIB EXIT_COUNT P NETIO PD Inject: transmit_pak 100 0/RSP0/CPU0 SPP-PI CLIENT_PUNT_SUCCESS P stage1 100 0/RSP0/CPU0 NETIO-PI BYPASS_MUT_QFULL_DROP D packet_input_bypass 100 0/RSP0/CPU0 NETIO-PI IP_COUNT P netio_send_pulse_input 100 0/RSP0/CPU0 spp-LIB ENTRY_COUNT P SPP PD Punt: stage1 100 0/RSP0/CPU0 netio-LIB ENTRY_COUNT P lpts_npmb_ipv4_delivers 300 0/RSP0/CPU0 udp-LIB ENTRY_COUNT P sosend xipc pulse 100 0/RSP0/CPU0 UDP RECV_NETIO_MANY_RRCVD P udp deliver many-rx 100 0/RSP0/CPU0 UDP RECV_RQUEUED P udp deliver - xipcwrite 100 用 Packet-trace,我们可以很看出这种特殊类型的数据包会经由 NP-\u0026gt;LPTS Punt-\u0026gt; LC NetIO -\u0026gt; LC SPP - RP NetIO -\u0026gt; RP SPP.\nLPTS Punt 的原因为 PUNT_TTL_EXCEEDED (因为内层的 IP 报文 TTL 为 1):\nRP/0/RSP0/CPU0:ASR9901-2#show lpts pifib hardware static-police location 0/0/CPU0 Sun Sep 3 04:13:30.780 UTC PUNT_TTL_EXCEEDED NETIO_LOW 2000 400 11600 0 Local 因为最终会被送到 RP 的 UDP 上去， 所以我们还有些命令来检查下 UDP 上的一些 counter。\nRP/0/RSP0/CPU0:ASR9901-2#show udp brief | in 3503 Sun Sep 3 04:17:59.115 UTC 0x7ff1a401cbd0 0x60000000 0 0 :::3503 :::0 0x7ff1a401a680 0x60000000 0 0 0.0.0.0:3503 0.0.0.0:0 RP/0/RSP0/CPU0:ASR9901-2# RP/0/RSP0/CPU0:ASR9901-2# RP/0/RSP0/CPU0:ASR9901-2#show udp statistics pcb 0x7ff1a401a680 Sun Sep 3 04:18:03.382 UTC Statistics for PCB 0x7ff1a401a680, vrfid 0x60000000 Send: 0 packets received from application 0 xipc pulse received from application 0 packets sent to network (v4/v6 IO) 0 packets sent to network (NetIO) 0 packets failed getting queued to network (v4/v6 IO) 0 packets failed getting queued to network (NetIO) Rcvd: 11600 packets received from network 11600 packets queued to application (PCB) 0 packets failed queued to application (PCB) 0 packets dropped due to minttl check (PCB) 11600 packets queued to application socket (GLOBAL) 0 packets failed queued to application socket (GLOBAL) UDP trace 也会保存一些报文的交互， 但是此 buffer 非常的小，保留的信息很快就会被冲掉。\nRP/0/RSP0/CPU0:ASR9901-2#show udp trace reverse location 0/rSP0/CPU0 | in 35$ Sun Sep 3 04:18:51.991 UTC Sep 3 04:18:50.320 udp/event 0/RSP0/CPU0 t8236 udp_input:pak(0x63c0696b): 3503 -\u0026gt; 3503, vrf 0x60000000, len=64 deliverycnt=1 error 0xb Sep 3 04:18:50.320 udp/event 0/RSP0/CPU0 t8236 UDP: queue pcb (0x7ff1a401a680) pak (0x63c028ab) to xipc recv q: 3503 -\u0026gt; 3503 Sep 3 04:18:50.320 udp/event 0/RSP0/CPU0 t8236 UDP input: pak(0x63c0696b): 3503 -\u0026gt; 3503, vrf 0x60000000, len=64 ismulticast=0 Sep 3 04:18:50.315 udp/event 0/RSP0/CPU0 t8236 udp_input:pak(0x63c0696b): 3503 -\u0026gt; 3503, vrf 0x60000000, len=64 deliverycnt=1 error 0xb Sep 3 04:18:50.315 udp/event 0/RSP0/CPU0 t8236 UDP: queue pcb (0x7ff1a401a680) pak (0x63c028ab) to xipc recv q: 3503 -\u0026gt; 3503 Sep 3 04:18:50.315 udp/event 0/RSP0/CPU0 t8236 UDP input: pak(0x63c0696b): 3503 -\u0026gt; 3503, vrf 0x60000000, len=64 ismulticast=0 Sep 3 04:18:50.309 udp/event 0/RSP0/CPU0 t8236 udp_input:pak(0x63c0696b): 3503 -\u0026gt; 3503, vrf 0x60000000, len=64 deliverycnt=1 error 0xb Sep 3 04:18:50.309 udp/event 0/RSP0/CPU0 t8236 UDP: queue pcb (0x7ff1a401a680) pak (0x63c028ab) to xipc recv q: 3503 -\u0026gt; 3503 Sep 3 04:18:50.309 udp/event 0/RSP0/CPU0 t8236 UDP input: pak(0x63c0696b): 3503 -\u0026gt; 3503, vrf 0x60000000, len=64 ismulticast=0 Sep 3 04:18:50.303 udp/event 0/RSP0/CPU0 t8236 udp_input:pak(0x63c0696b): 3503 -\u0026gt; 3503, vrf 0x60000000, len=64 deliverycnt=1 error 0xb Sep 3 04:18:50.303 udp/event 0/RSP0/CPU0 t8236 UDP: queue pcb (0x7ff1a401a680) pak (0x63c028ab) to xipc recv q: 3503 -\u0026gt; 3503 Sep 3 04:18:50.303 udp/event 0/RSP0/CPU0 t8236 UDP input: pak(0x63c0696b): 3503 -\u0026gt; 3503, vrf 0x60000000, len=64 ismulticast=0 Sep 3 04:18:50.296 udp/event 0/RSP0/CPU0 t8236 udp_input:pak(0x63c0696b): 3503 -\u0026gt; 3503, vrf 0x60000000, len=64 deliverycnt=1 error 0xb Sep 3 04:18:50.296 udp/event 0/RSP0/CPU0 t8236 UDP: queue pcb (0x7ff1a401a680) pak (0x63c028ab) to xipc recv q: 3503 -\u0026gt; 3503 Sep 3 04:18:50.296 udp/event 0/RSP0/CPU0 t8236 UDP input: pak(0x63c0696b): 3503 -\u0026gt; 3503, vrf 0x60000000, len=64 ismulticast=0 MPLS Echo Reply 在 XR 设备中的处理 # MPLS Echo Reply 由设备的 RP 产生，送到出向板卡，经正常数据包封装转发出来。\n在目的设备中解封装，同样会有 LC Punt 到 RP 上去处理:\nRP/0/RSP0/CPU0:ASR9901-1#show packet-trace results Fri Sep 1 05:43:35.876 UTC T: D - Drop counter; P - Pass counter Location | Source | Counter | T | Last-Attribute | Count ------------ ------------ ------------------------- - ---------------------------------------- --------------- 0/0/CPU0 NP0 PACKET_MARKED P TenGigE0_0_0_12 5 0/0/CPU0 NP0 PACKET_TO_PUNT P 5 0/RSP0/CPU0 SPP-PI CLIENT_PUNT_SUCCESS P stage1 5 0/RSP0/CPU0 NETIO-PI BYPASS_MUT_QFULL_DROP D packet_input_bypass 5 0/RSP0/CPU0 NETIO-PI IP_COUNT P netio_send_pulse_input 5 0/RSP0/CPU0 spp-LIB ENTRY_COUNT P SPP PD Punt: stage1 5 0/RSP0/CPU0 netio-LIB ENTRY_COUNT P lpts_npmb_ipv4_delivers 15 0/RSP0/CPU0 udp-LIB ENTRY_COUNT P ip lib - input from netio 10 0/RSP0/CPU0 UDP RECV_NETIO_MANY_RRCVD P udp deliver many-rx 5 0/RSP0/CPU0 UDP RECV_RQUEUED P udp deliver - xipcwrite 5 ","date":"13 April 2024","externalUrl":null,"permalink":"/blog/mpls-ping/","section":"Blog","summary":"MPLS Ping # 虽然是 Ping 的一种， 但是采用的不是 ICMP 探针检测中间路径，使用的是 IPv4 或者 IPv6 UDP 数据包。 有两种报文，MPLS Echo Request/MPLS Echo Reply。","title":"MPLS Ping In IOS XR","type":"blog"},{"content":"SBFD (Seamless Bidirectional Forwarding Detection) 无缝双向转发检测。\nSBFD 分为发起端和反射端, BFD 状态信息仅在头端维护，尾端需要验证 BFD 报文，并响应，尾端无需维护 BFD 状态信息。\nConfigure the SBFD # SBFD Reflector # 配置 OAM， 配置 local discriminator.\nmpls oam ! sbfd local-discriminator 20010551 local-discriminator interface Loopback66 ! 在配置 OAM 后，会在本地安装一条 127.0.0.0/8 的 RIB 信息:\nRP/0/RSP0/CPU0:ASR-9904-G-LS#show route | in 127 Sun Apr 7 14:36:34.586 UTC L 127.0.0.0/8 [0/0] via 0.0.0.0, 3w3d RP/0/RSP0/CPU0:ASR-9904-G-LS#show route 127.0.0.0 Sun Apr 7 14:36:08.186 UTC Routing entry for 127.0.0.0/8 Known via \u0026#34;local LSPV\u0026#34;, distance 0, metric 0 (connected) Installed Mar 14 09:59:04.773 for 3w3d Routing Descriptor Blocks directly connected Route metric is 0, Wt is 21896 No advertising protos. SBFD Initiator # SBFD 的 session 将 host 在 LC 的 CPU， 所以需要先配置bfd multipath include location 0/x/CPU0.\n配置到 Reflector 的的 Mapping:\nsbfd remote-target ipv4 x.x.86.57 remote-discriminator 20010551 ! local-discriminator 20010329 local-discriminator interface Loopback1 在 SRTE 下绑定 SBFD:\nsegment-routing traffic-eng policy SBFD-TEST color 2 end-point ipv4 x.x.86.57 bfd minimum-interval 200 multiplier 3 invalidation-action down logging session-state-change ! ! SBFD 报文 # SBFD 使用的是 UDP 端口号为7784.\n这里需要注意的是发送方的 Src.address 为配置 Loopback 地址，其中 IPv4 包头的 TTL 为 1 （注意:尾端如果收到的报文不为 1，将会丢掉并不会反射给头端）\n反射报文的 Src.address 为板卡发送接口地址，目的为头端 Loopback 地址。\nSBFD Session # RP/0/RSP0/CPU0:ASR-9901-A#show bfd label session Sun Apr 7 15:01:06.726 UTC Interface Label Local det time(int*mult) State Echo Async ------------------- --------------- ---------------- ---------------- ---------- srte_c_2_ep_ (LSP:4 24060 n/a 600ms(200ms*3) UP RP/0/RSP0/CPU0:ASR-9901-A# RP/0/RSP0/CPU0:ASR-9901-A#show bfd label session detail Sun Apr 7 15:01:12.843 UTC I/f: srte_c_2_ep_ (LSP:407), Location: 0/0/CPU0, Label: 24060 State: UP for 0d:0h:30m:20s, number of times UP: 1 Session type: SW/LB/V4/SH/TH/SB Received parameters: Version: 1, desired tx interval: 200 ms, required rx interval: 200 ms Multiplier: 3, diag: None My discr: 20010551, your discr: 65939, state UP, D/F/P/C/A: 0/0/0/1/0 Transmitted parameters: Version: 1, desired tx interval: 200 ms, required rx interval: 0 ms Multiplier: 3, diag: None My discr: 65939, your discr: 20010551, state UP, D/F/P/C/A: 1/0/0/1/0 Timer Values: Local negotiated async tx interval: 200 ms Remote negotiated async tx interval: 200 ms async detection time: 600 ms(200 ms*3) Local Stats: Intervals between async packets: Tx: Number of intervals=100, min=167 ms, max=201 ms, avg=184 ms Last packet transmitted 21 ms ago Rx: Number of intervals=100, min=167 ms, max=200 ms, avg=184 ms Last packet received 21 ms ago MP download state: BFD_MP_DOWNLOAD_ACK State change time: Apr 7 14:30:49.027 Session owner information: Desired Adjusted Client Interval Multiplier Interval Multiplier -------------------- --------------------- --------------------- XTC 200 ms 3 200 ms 3 可以使用上述命令检查 SBFD session. SBFD 是 BFD 的一种， 所以常见的检查 BFD 的历史信息的命令依旧可以使用。 SBFD 是 host 的 LC 上的， 所以会出现数据包的产生 LC 不在出接口的 LC 上， 此为正常行为。 SBFD 是基于 LSP 的，即如果出现新的 LSP，SBFD 会为新的 LSP init session。 SBFD 是不支持 ECMP 的，意味着如果有多个 ECMP Path，SBFD 的数据包只会 hash 到其中一条 Link。 注意事项 # (测试 Topo: ASR9K(header)\u0026mdash;\u0026ndash;NCS55\u0026mdash;\u0026mdash;\u0026ndash;ASR9K(tailer))\n请注意mpls ip-ttl-propagate disable的使用。\n如果 NCS55 作为倒数第二跳，默认情况下 MPLS 的 TTL 会 copy 到 IP 包头，导致 SBFD 数据包的 TTL 不正确，该数据包被尾节点 ASR9K 接收到后会直接丢掉。\n你会在板卡看到类似RSV_DROP_IFIB_TTL_CHECK的 NP drop counter 在增加，SBFD session 起不来。\n解决办法为配置mpls ip-ttl-propagate disable\n如果 ASR9K 作为倒数第二跳，默认情况的逻辑为copy MPLS TTL to IP TTL , only if IP TTL \u0026gt; MPLS TTL , otherwise use IP TTL;如果配置了mpls ip-ttl-propagate disable则使用 IP TTL. (document at CSCvn35975 and CSCvn84350)\n在这种情况下，由于 MPLS TTL 大于 IP TTL， 所以默认情况 ASR9K 仍然适用 IP TTL， 所以 ASR9K 作为倒数第二跳不配置mpls ip-ttl-propagate disable 也可以。\n参考文章 # Configure Seamless Bidirectional Forwarding Detection\nHuawei SBFD\n","date":"7 April 2024","externalUrl":null,"permalink":"/blog/sbfd/","section":"Blog","summary":"SBFD (Seamless Bidirectional Forwarding Detection) 无缝双向转发检测。","title":"Introduce SBFD (IOSXR)","type":"blog"},{"content":"","date":"22 March 2024","externalUrl":null,"permalink":"/tags/vscode/","section":"Tags","summary":"","title":"Vscode","type":"tags"},{"content":" 插件 # Prettier # 设置 Default Formatter 为 Prettier，打开 Format On Save.\nPrettier 的配置文件名为.prettierrc, 在你的每一个项目根目录下创建该文件\n配置事例：\n{ \u0026#34;singleQuote\u0026#34;: true, \u0026#34;arrowParens\u0026#34;: \u0026#34;avoid\u0026#34; } 参考配置文档。\nTodo highlight # 高亮显示一些关键字，可自定义。\n配置文件参考官网。\ncopy 官网的相关配置， 粘贴到 vscode 的 setting 中（json 格式）。\nMonokai Pro # Theme 插件。\nLive Server # 如其名， 实施预览你的 web server。\n（或者不使用 vscode 的插件， 使用 npm install live-server -g, live-server, 启动）\nImage preview # 预览 HTML 中的图片，在写 html 文件的时候非常好用。\n其他设置 # Snippets # 设置-\u0026gt; User Snippets -\u0026gt; 自定义一个文件名\n设置快捷键， 事例：\n{ \u0026#34;Print to console\u0026#34;: { \u0026#34;scope\u0026#34;: \u0026#34;javascript,typescript\u0026#34;, \u0026#34;prefix\u0026#34;: \u0026#34;cl\u0026#34;, \u0026#34;body\u0026#34;: [ \u0026#34;console.log($1q);\u0026#34;, ], \u0026#34;description\u0026#34;: \u0026#34;Log output to console\u0026#34; } } 快捷键 # CMD + J 打开 terminal # CMD + K Clear terminal # Shift + Option + A 块注释 # CMD + / 行注释 # ","date":"22 March 2024","externalUrl":null,"permalink":"/blog/vscode-notes/","section":"Blog","summary":"插件 # Prettier # 设置 Default Formatter 为 Prettier，打开 Format On Save.","title":"Vscode Notes","type":"blog"},{"content":" Prerequisites # I have several posts regarding CISCO 8000 software installation shown below:\nCISCO 8000 Software Upgrade Method 1(install command)\nCISCO 8000 Software Upgrade Method 2(PXE)\nCISCO 8000 XR to Sonic\nThe most important is to understand how to use a local repository or remote repository.\nThis article also applies to other products using XR7, such as some NCS540.\nSMU install (Use local repository) # Copy all SMU file to the local folder, in this case, i create a folder named \u0026ldquo;repo\u0026rdquo; under harddisk:\n[node0_RP0_CPU0:/harddisk:/repo]$ls 8000-7.3.15.CSCvw58830.tar 8000-7.3.15.CSCvy35867.tar 8000-7.3.15.CSCvx48017.tar 8000-7.3.15.CSCvy42027.tar 8000-7.3.15.CSCvx50864.tar 8000-7.3.15.CSCvy43997.tar 8000-7.3.15.CSCvx68887.tar 8000-7.3.15.CSCvy52710.tar 8000-7.3.15.CSCvx76463.tar 8000-7.3.15.CSCvy53516.tar 8000-7.3.15.CSCvx84404.tar 8000-7.3.15.CSCvy55726.tar 8000-7.3.15.CSCvx99992.tar 8000-7.3.15.CSCvy61939.tar 8000-7.3.15.CSCvy06576.tar 8000-7.3.15.CSCvy66996.tar 8000-7.3.15.CSCvy12145.tar 8000-7.3.15.CSCvy67283.tar 8000-7.3.15.CSCvy14896.tar 8000-7.3.15.CSCvy72415.tar 8000-7.3.15.CSCvy16526.tar 8000-7.3.15.CSCvy73299.tar 8000-7.3.15.CSCvy16725.tar 8000-7.3.15.CSCvy77182.tar 8000-7.3.15.CSCvy17864.tar 8000-7.3.15.CSCvz04661.tar 8000-7.3.15.CSCvy24941.tar 8000-7.3.15.CSCvz25325.tar 8000-7.3.15.CSCvy26732.tar 8000-7.3.15.CSCvz45349.tar 8000-7.3.15.CSCvy33251.tar 8000-7.3.15.CSCvz67583.tar 8000-7.3.15.CSCvy33657.tar then try unzip all the smu file buy use two simple shell script:\n[node0_RP0_CPU0:/harddisk:/repo]$for tar in *.tar; do tar -xvf $tar; done 8000-7.3.15.CSCvw58830.txt 8000-x86_64-7.3.15-CSCvw58830.tgz 8000-7.3.15.CSCvx48017.txt 8000-x86_64-7.3.15-CSCvx48017.tgz 8000-7.3.15.CSCvx50864.txt 8000-x86_64-7.3.15-CSCvx50864.tgz [node0_RP0_CPU0:/harddisk:/repo]$for tar in *.tgz; do tar -xvf $tar; done 8000-x86_64-7.3.15-CSCvw58830/ 8000-x86_64-7.3.15-CSCvw58830/xr-rpl-8608-rp1-7.3.15v1.0.1-1.x86_64.rpm 8000-x86_64-7.3.15-CSCvw58830/xr-rpl-88-lc0-34h14fh-7.3.15v1.0.1-1.x86_64.rpm 8000-x86_64-7.3.15-CSCvw58830/xr-rpl-8102-64h-7.3.15v1.0.1-1.x86_64.rpm 8000-x86_64-7.3.15-CSCvw58830/primary.xml.gz 8000-x86_64-7.3.15-CSCvw58830/xr-rpl-8201-7.3.15v1.0.1-1.x86_64.rpm 8000-x86_64-7.3.15-CSCvw58830/xr-rpl-d17f630e9aaec8a3-7.3.15v1.0.1-1.x86_64.rpm 8000-x86_64-7.3.15-CSCvw58830/xr-rpl-7.3.15v1.0.1-1.x86_64.rpm Config the local repository with the path \u0026ldquo;file:///harddisk:/repo/\u0026rdquo;\nRP/0/RP0/CPU0:8201-01#conf Thu Oct 7 06:36:45.111 UTC RP/0/RP0/CPU0:8201-01(config)# RP/0/RP0/CPU0:8201-01(config)# RP/0/RP0/CPU0:8201-01(config)#install RP/0/RP0/CPU0:8201-01(config-install)#no repository remo-repo RP/0/RP0/CPU0:8201-01(config-install)# RP/0/RP0/CPU0:8201-01(config-install)#repository local-repo RP/0/RP0/CPU0:8201-01(config-repository)#url file:///harddisk:/repo/ RP/0/RP0/CPU0:8201-01(config-repository)#commit Thu Oct 7 06:38:04.997 UTC RP/0/RP0/CPU0:8201-01(config-repository)# We have two command to check the SMU in the local repository:\nRP/0/RP0/CPU0:MXC.TAC.L.08-8201-01#show install available Thu Oct 7 06:38:10.721 UTC Trying to access repositories... Package Architecture Version Repository Cached ---------------------------------------------------- ---------------- --------------------------- ----------------------------------- ------ xr-8000-bmc x86_64 7.3.15v1.0.1-1 local-repo xr-8000-bmc x86_64 7.3.15v1.0.2-1 local-repo xr-8000-bmc x86_64 7.3.15v1.0.3-1 local-repo xr-8000-bmc x86_64 7.3.15v1.0.4-1 local-repo xr-8000-core x86_64 7.3.15v1.0.1-1 local-repo RP/0/RP0/CPU0:MXC.TAC.L.08-8201-01#show install fixes available Thu Oct 7 06:38:31.839 UTC Trying to access repositories... Available Fixes (count: 33): Bug Id Packages Repository Cached ----------- ----------------------------------------------------------- ---------------------------------------- ------ CSCvw58830 xr-rpl-7.3.15v1.0.1-1 local-repo CSCvx48017 xr-security-7.3.15v1.0.2-1 local-repo CSCvx50864 xr-bundles-7.3.15v1.0.1-1 local-repo CSCvx68887 xr-8000-core-7.3.15v1.0.3-1 local-repo xr-8000-core-7.3.15v1.0.4-1 local-repo xr-8000-core-7.3.15v1.0.5-1 local-repo xr-spi-core-7.3.15v1.0.1-1 local-repo xr-spi-core-7.3.15v1.0.2-1 local-repo We have there way to install the smu we want:\ninstall package add cisco-CSCab12345install a special SMUinstall package upgrade xr-coreinstall cups of smu to fix special componentinstall package upgradeinstall all the smu under your repository Here is an example to install all the smu under repository:\nRP/0/RP0/CPU0:MXC.TAC.L.08-8201-01#install package upgrade Thu Oct 7 06:38:50.536 UTC Install upgrade operation 38.1.1 has started Install operation will continue in the background RP/0/RP0/CPU0:MXC.TAC.L.08-8201-01#show install request Thu Oct 7 06:39:01.467 UTC User request: install package upgrade Operation ID: 38.1.1 State: In progress since 2021-10-07 06:38:50 UTC Current activity: Begin transaction Next activity: Begin atomic operation Time started: 2021-10-07 06:38:54 No per-location information. RP/0/RP0/CPU0:MXC.TAC.L.08-8201-01#show install request Thu Oct 7 06:41:43.859 UTC User request: install package upgrade Operation ID: 38.1.1 State: In progress since 2021-10-07 06:38:50 UTC Current activity: Package add or other package operation Next activity: Await user input Time started: 2021-10-07 06:40:45 Timeout in: 39m 0s Locations responded: 0/1 Location Packaging operation stage Notification Phase Clients responded ----------------- ------------------------- ------------------ ----------------- 0/RP0/CPU0 Package operations None in progress N/A RP/0/RP0/CPU0:MXC.TAC.L.08-8201-01# RP/0/RP0/CPU0:MXC.TAC.L.08-8201-01# RP/0/RP0/CPU0:MXC.TAC.L.08-8201-01# RP/0/RP0/CPU0:MXC.TAC.L.08-8201-01#show install request Thu Oct 7 06:43:07.645 UTC User request: install package upgrade Operation ID: 38.1.1 State: Success since 2021-10-07 06:42:51 UTC Current activity: Await user input Time started: 2021-10-07 06:42:52 The following actions are available: install package add install package remove install package upgrade install package downgrade install package replace install package rollback install package abort latest install package abort all-since-apply install apply reload SMU apply and commit # after install, use \u0026ldquo;install apply\u0026rdquo; to active the SMU , this action may need reload the router.\nRP/0/RP0/CPU0:MXC.TAC.L.08-8201-01#install apply synchronous ins Thu Oct 7 06:46:54.637 UTC Once the packaging dependencies have been determined, the install operation may have to reload the system. If you want more control of the operation, then explicitly use \u0026#39;install apply restart\u0026#39; or \u0026#39;install apply reload\u0026#39; as reported by \u0026#39;show install request\u0026#39;. Continue? [yes/no]:[yes] yes Starting: install apply reload Atomic change 38.1 Press Ctrl-C to return to the exec prompt. This will not cancel the install operation Current activity: Initializing Current activity: Apply by reloadRP/0/RP0/CPU0:Oct 7 06:47:01.971 UTC: instorch[154]: %INFRA-INSTALL-2-SYSTEM_RELOAD : As part of an install operation, a full system reload will take place in order to apply the installed software. . Preparing system for backup. This may take a few minutes especially for large configurations. Status report: node0_RP0_CPU0: START TO BACKUP Status report: node0_RP0_CPU0: BACKUP HAS COMPLETED SUCCESSFULLY [Done] ......[13068.510009] do_IRQ: 0.196 No irq handler for vector Don\u0026rsquo;t forgot \u0026ldquo;install commit\u0026rdquo; after router reload:\nRP/0/RP0/CPU0:MXC.TAC.L.08-8201-01#install commit Thu Oct 7 06:55:51.414 UTC Install commit operation 38 has started Install operation will continue in the background ","date":"8 February 2024","externalUrl":null,"permalink":"/blog/cisco-8000-how-to-install-smu-under-xr7/","section":"Blog","summary":"Prerequisites # I have several posts regarding CISCO 8000 software installation shown below:","title":"CISCO 8000 - How to install SMU under XR7","type":"blog"},{"content":"","date":"8 February 2024","externalUrl":null,"permalink":"/series/ios-xr-upgrade/","section":"Series","summary":"","title":"IOS-XR-Upgrade","type":"series"},{"content":"","date":"17 January 2024","externalUrl":null,"permalink":"/tags/bash/","section":"Tags","summary":"","title":"Bash","type":"tags"},{"content":" 背景 # 我的 wordpress 站点使用的是比较老的主题， 很久没人维护了，前段时间看到有些插件需要升级， 然后就头脑发热全升级了；\n升级后应该是插件和主题兼容性有些问题， 导致我的博客每过一段时间都会 report Error Establishing A Database Connection.\n幸亏 Tencent 云提供了站点存活行检测，每次博客数据库出现问题后, 它会给我发个短信提醒我一下， 我就直接重启下我的 vps， 然后博客就恢复了。\n搞了那么几次发现还是太麻烦了， 所以今天去尝试去检查为什么会报这个错误。\n检查 mysql 服务 # 尝试登录下 mysql web 页面输入用户名密码发现无法正常登陆， 报Getting error mysqli::real_connect()\n检查了下 mysql 进程， 发现不在 running，尝试重启了下 mysql 服务， 发现我的博客恢复正常了。\n检查了下异常时间点的 log， 看到进程由于 OOO 被 kill 掉了, kill 掉后也没正常启动.\nroot@vultr:~# journalctl | grep mysql | grep Jan Jan 16 11:43:21 vultr.guest kernel: [ 763] 111 763 290638 58917 802816 0 0 mysqld Jan 16 11:43:21 vultr.guest kernel: Out of memory: Kill process 763 (mysqld) score 234 or sacrifice child Jan 16 11:43:21 vultr.guest kernel: Killed process 763 (mysqld) total-vm:1162552kB, anon-rss:235668kB, file-rss:0kB, shmem-rss:0kB Jan 16 11:43:21 vultr.guest kernel: oom_reaper: reaped process 763 (mysqld), now anon-rss:0kB, file-rss:0kB, shmem-rss:0kB Jan 16 11:43:20 vultr.guest systemd[1]: mysql.service: Main process exited, code=killed, status=9/KILL 鉴于这个 OOO 的排查对我来说有点难， 索性想着要不写个脚本， 周期 run 一下帮我检查下进程状态， 如果不是 active 的就直接帮我重启下进程。\n脚本如下:\n#!/bin/bash LOG_FILE=\u0026#34;/root/mysql-check.log\u0026#34; MYSQL_STATUS=$(systemctl is-active mysql) if [ \u0026#34;$MYSQL_STATUS\u0026#34; != \u0026#34;active\u0026#34; ]; then echo \u0026#34;$(date) - MySQL 服务不在运行状态，正在尝试重启...\u0026#34; \u0026gt;\u0026gt; \u0026#34;$LOG_FILE\u0026#34; systemctl restart mysql NEW_MYSQL_STATUS=$(systemctl is-active mysql) echo \u0026#34;$(date) - MySQL 服务状态: $NEW_MYSQL_STATUS\u0026#34; \u0026gt;\u0026gt; \u0026#34;$LOG_FILE\u0026#34; else echo \u0026#34;$(date) - MySQL 服务正常运行\u0026#34; \u0026gt;\u0026gt; \u0026#34;$LOG_FILE\u0026#34; fi 使用 crontab 每 5 分钟执行一次:\nroot@vultr:~# crontab -e */5 * * * * /root/mysql-check.sh ","date":"17 January 2024","externalUrl":null,"permalink":"/blog/error-est-db/","section":"Blog","summary":"背景 # 我的 wordpress 站点使用的是比较老的主题， 很久没人维护了，前段时间看到有些插件需要升级， 然后就头脑发热全升级了；","title":"Error Establishing A Database Connection","type":"blog"},{"content":" Background # 在 20.4.x 之前的多租户的架构如下,每个租户拥有独立的 vSmart，所以在 20.4.x 之前 vSmart 只在各个租户的 GUI 界面上去显示\n在 20.4.x 之后，架构发生了变化，vSmart 变成在多个租户之间共享的存在。\n由于架构发生了变化，MT 环境从 20.4.x 之前往高版本去升级的时候步骤会有略微的变化。\nUpgrade Steps # 我的测试环境为 Single vManage + vBond + 2 Tenancy（every Tenancy has 1 vSmart）20.3.7.1\n由于是 Single vMange 所以升级会略微简单。\nvManage upgrade to 20.6.x # 先进行 vManage 的升级，参考以下文章；\n上传升级 Image Upgrade/Install，进行一个 pre-insall Activate New Version，激活新版本，此时 vMange 会重启 Set Default Version vManage Upgrade\nvBond upgrade to 20.6.x # vbond 升级和 vMange 升级类似。\nAdd New two 20.6.x vSmart # 添加 2 个 20.6.x 的 vSmart，如果 Tenancy 比较多，那按照 Tenancy 的数量去选择在这一步添加多少个 vSmart。\n添加至 vManage 后进行证书的安装， 并下发 vSmart 模版.\n注意这个地方一定需要下发 vSmart 模版，无论是 CLI 模版 or 标准的模版，否则你将会在下一步 API 操作中遇到报错Found 0 vSmarts in vManage node, Need atleast 2 vSmarts in vManaged mode and In Sync to onboard a tenant Enable maintenance window on vManage # 这个地方的时间是 GUI 页面登录 PC 的时间，不是 vMange host 所在地方的时间。 这个步骤也无法省略，否则在 API 下发步骤会遇到报错vManage is not in maintenance node, Cannot migrate tenants to MT vSmarts at the time.\nUse API to Migrate # 使用 API 需要先解决认证问题， 这个请参考之前的一篇文章Cisco SDWAN API\n新建一个 API 如下:\nAPI 执行成功后回回复一个 task-id：\nCheck Task from vManage GUI # 这个时候登录到 vManage 将会看到一些 task run 在后台，等待它自动完成。\n当所有的 task 都完成后， 旧的 20.3.7.1 vSmart 将会被移除，新加入的 20.6.x vSmart 将和所有的 vEdge/cEdge 建立控制连接。\nReference # Offical MT Migration Guide\n","date":"16 January 2024","externalUrl":null,"permalink":"/sdwan/migrate-multitenant/","section":"SDWAN","summary":"Background # 在 20.","title":"Migrate Multitenant Cisco SD-WAN (20.3.x to 20.6.x)","type":"sdwan"},{"content":"","date":"16 January 2024","externalUrl":null,"permalink":"/tags/sdwan/","section":"Tags","summary":"","title":"SDWAN","type":"tags"},{"content":" Notes to read and review. ","date":"16 January 2024","externalUrl":null,"permalink":"/sdwan/","section":"SDWAN","summary":"Notes to read and review.","title":"SDWAN","type":"sdwan"},{"content":"","date":"13 January 2024","externalUrl":null,"permalink":"/tags/mongodb/","section":"Tags","summary":"","title":"Mongodb","type":"tags"},{"content":"Record some Mongodb query example.\nMatch by a Single Condition # { name: \u0026#34;Andrea Le\u0026#34; } Match by Multiple Conditions ($and) # { scores: 75, name: \u0026#34;Greg Powell\u0026#34; } {$and: [{ status: { $ne: \u0026#39;available\u0026#39; }},{ status: { $ne: \u0026#39;XR\u0026#39; }}]} Match by Multiple Possible Conditions ($or) # { $or: [ { version: 4 }, { name: \u0026#34;Andrea Le\u0026#34; } ] } Match by Exclusion ($not) # { name: { $not: { $eq: \u0026#34;Andrea Le\u0026#34; } } } Match with Comparison Operators # { version: { $lte: 4 } } Match by Date # { dateCreated: { $gt: new Date(\u0026#39;2000-06-22\u0026#39;) } } Match by Array Conditions # { scores: { $elemMatch: { $gt: 80, $lt: 90 } } } Query Your Data\n","date":"13 January 2024","externalUrl":null,"permalink":"/blog/mongodb-query/","section":"Blog","summary":"Record some Mongodb query example.","title":"Mongodb Query","type":"blog"},{"content":"Cisco SDWAN vManage 提供了一个 REST API 接口， 通过这个接口我们可以之间 get 很多设备信息，或者执行一些配置的下发。\nAPI 相关的文档 Cisco SD-WAN vManage API\n使用浏览器我们可以进行简单的 Get API 的操作， 但是如果涉及一些复杂的操作，例如 filer 一段时间，或者需要执行一些 Post API， 浏览器就不太方便实现。\n这里我们可以使用 API 专业的调试软件Postman.\nPostman configuration # 在 Postman 中先关闭 SSL certificate verification。\nGithub 上有个 Getting-started-with-Cisco-SD-WAN-REST-APIs 仓库, 里面包含了一些帮我们设定好的 API，我们可以之间 clone 下来导入到 Postman 中去使用:\ngit clone https://github.com/CiscoDevNet/Getting-started-with-Cisco-SD-WAN-REST-APIs.git ├── Postman │ ├── Cisco-Reservable-SD-WAN-Env.postman_environment.json │ └── Cisco-Reservable-SD-WAN.postman_collection.json 在 Postman 文件夹下会有两个文件，一个包含你的 vManage 的 username 和 password 的相关设定，另一个包含一些常见的 API。我们都将他导入到 Postman 中，如下：\n在 Environments 菜单中修改 vMange 相关参数，其中X-XSPF-TOKEN为后续自动生成的，可以不需要填写。\nAPI Authentication # 使用 API 进行交互的第一步是认证， 在刚刚导入 postman 的 API collection 中有一项为 Authentication 的 Post 调用， 执行该 Post 调用后，vManage 会生成一个 JSESSIONID 并返回给我们.\n第二步我们可以使用 get token 的方法， 将 JSESSONID 传递给 vManage， vManage 则会返回一串 token，这个 token 会自动填充在 Environment 设定的参数 X-XSRF-TOKEN。（如果无法自动填充，请自行复制修改 environment）\n后续我们执行所有的 API 操作，都需要使用该 token 进行验证,如果自己要自定义一些 API 操作， 请自行在 Header 中添加这个X-XSRF-TOKEN变量。\n","date":"11 January 2024","externalUrl":null,"permalink":"/sdwan/cisco-sdwan-api/","section":"SDWAN","summary":"Cisco SDWAN vManage 提供了一个 REST API 接口， 通过这个接口我们可以之间 get 很多设备信息，或者执行一些配置的下发。","title":"Cisco SDWAN API","type":"sdwan"},{"content":" Prerequisites # The topology shows as above , the DUT ASR9000B has 3 sub-interface to ASR9000C\nwe has a route for 8.8.8.8/32 was through port Ten0/0/2/1.30 next-hop 10.102.12.2\nWe will has ABF apply at ASR9000B and match DA 8.8.8.8 and set next-hop to 10.100.12.2 port Ten0/0/2/1.10\nWe also have a default route and destination to 10.101.12.2 port Ten0/0/2/1.20\nASR9000B LC was tyohon base card and run at 6.2.3\nHere is our ABF config and static config setup:\nRP/0/RSP0/CPU0:ASR-9000-B#show run ipv4 access-list PBR Wed Jan 10 03:38:36.663 UTC ipv4 access-list SDS-PBR 480 permit ipv4 any host 8.8.8.8 nexthop1 ipv4 10.100.12.2 490 permit ipv4 any any RP/0/RSP0/CPU0:ASR-9000-B#show run router static Wed Jan 10 03:38:51.581 UTC router static address-family ipv4 unicast 0.0.0.0/0 10.101.12.2 8.8.8.8/32 10.102.12.2 ABF NextHop Available # if the ABF NextHop available, ABF will take effect, traffic will forward to ABF NextHop 10.100.12.2 port TenGigE0/0/2/1.10.\nRP/0/RSP0/CPU0:ASR-9000-A#trace 8.8.8.8 Wed Jan 10 10:40:31.858 GMT Type escape sequence to abort. Tracing the route to 8.8.8.8 1 10.1.12.2 1 msec 0 msec 0 msec 2 10.100.12.2 2 msec * 0 msec # Check the ACL hardware program , you will also see the ABF take effect and has a next-hop disapplay RP/0/RSP0/CPU0:ASR-9000-B#show access-lists SDS-PBR hardware ingress location 0/0/cPU0 Wed Jan 10 03:07:54.451 UTC ipv4 access-list SDS-PBR 480 permit ipv4 any host 8.8.8.8 (1220 hw matches) (next-hop: addr=10.100.12.2, vrf name=default) 490 permit ipv4 any any (18111 hw matches) ABF NextHop Not Available # ABF NH recursive to default route # Let\u0026rsquo;s shut down the port TenGigE0/0/2/1.10, then ABF NextHop will not available , but we hava a default router point to 0/0/2/1.20 10.101.12.2. in this situation how the ABF work ?\nThe Answer is ABF will not take effect , traffic will forward base the packet DA, in this case it\u0026rsquo;s 8.8.8.8.\nRP/0/RSP0/CPU0:ASR-9000-B(config)#int te0/0/2/1.10 RP/0/RSP0/CPU0:ASR-9000-B(config-subif)#shutdown RP/0/RSP0/CPU0:ASR-9000-B(config-subif)#commit Wed Jan 10 03:41:31.208 UTC RP/0/RSP0/CPU0:ASR-9000-B(config-subif)#end RP/0/RSP0/CPU0:ASR-9000-B# RP/0/RSP0/CPU0:ASR-9000-B# RP/0/RSP0/CPU0:ASR-9000-B#show cef 10.100.12.2 detail Wed Jan 10 03:41:46.692 UTC 0.0.0.0/0, version 147, proxy default, internal 0x1000011 0x0 (ptr 0x9deec068) [1], 0x0 (0x0), 0x0 (0x0) Updated Jan 10 02:53:49.907 Prefix Len 0, traffic index 0, precedence n/a, priority 3 gateway array (0x9dd5d2cc) reference count 1, flags 0x2210, source rib (7), 1 backups [1 type 3 flags 0x4a441 (0x9ddfbd90) ext 0x0 (0x0)] LW-LDI[type=0, refc=0, ptr=0x0, sh-ldi=0x0] gateway array update type-time 1 Jan 10 02:53:49.907 LDI Update time Jan 10 02:53:49.908 Level 1 - Load distribution: 0 [0] via 10.101.12.2/32, recursive via 10.101.12.2/32, 3 dependencies, recursive [flags 0x0] path-idx 0 NHID 0x0 [0x9deec860 0x0] next hop 10.101.12.2/32 via 10.101.12.2/32 Load distribution: 0 (refcount 1) Hash OK Interface Address 0 Y TenGigE0/0/2/1.20 remote if you check the ACL hardware program, you will also see no next-hop option.\nRP/0/RSP0/CPU0:ASR-9000-B#show access-lists PBR hardware ingress location 0/0/cPU0 Thu Jan 11 07:35:30.570 UTC ipv4 access-list SDS-PBR 480 permit ipv4 any host 8.8.8.8 (1256 hw matches) 490 permit ipv4 any any (47082 hw matches) RP/0/RSP0/CPU0:ASR-9000-A#trace 8.8.8.8 Wed Jan 10 10:43:19.790 GMT Type escape sequence to abort. Tracing the route to 8.8.8.8 1 10.1.12.2 2 msec 0 msec 0 msec 2 10.102.12.2 1 msec * 0 msec ABF NH recursive to normal route # if we add a 10.100.12.0/24 route and make the ABF Nexthop recursive to this route , how the ABF work ?\nThe answer is , ABF will take effect again, traffic will forward base the ABF Nexthop.\nRP/0/RSP0/CPU0:ASR-9000-B(config)#router static RP/0/RSP0/CPU0:ASR-9000-B(config-static)#address-family ipv4 unicast RP/0/RSP0/CPU0:ASR-9000-B(config-static-afi)# 10.100.12.0/24 10.101.12.2 RP/0/RSP0/CPU0:ASR-9000-B(config-static-afi)#commit Thu Jan 11 07:41:49.029 UTC RP/0/RSP0/CPU0:ASR-9000-B(config-static-afi)#end RP/0/RSP0/CPU0:ASR-9000-B#show access-lists PBR hardware ingress location 0/0/cPU0 Thu Jan 11 07:41:53.622 UTC ipv4 access-list SDS-PBR 480 permit ipv4 any host 8.8.8.8 (1256 hw matches) (next-hop: addr=10.100.12.2, vrf name=default) 490 permit ipv4 any any (47191 hw matches) RP/0/RSP0/CPU0:ASR-9000-B#show cef 10.100.12.2 detail Thu Jan 11 07:42:16.439 UTC 10.100.12.0/24, version 38, internal 0x1000001 0x0 (ptr 0x9deecef0) [1], 0x0 (0x9dea58c4), 0xa00 (0x9e4031e4) Updated Jan 11 07:41:49.202 Prefix Len 24, traffic index 0, precedence n/a, priority 3 gateway array (0x9dd5cc3c) reference count 2, flags 0x8078, source lsd (5), 1 backups [3 type 4 flags 0x108441 (0x9e43a388) ext 0x0 (0x0)] LW-LDI[type=1, refc=1, ptr=0x9dea58c4, sh-ldi=0x9e43a388] gateway array update type-time 1 Jan 11 07:41:49.202 LDI Update time Jan 11 07:41:49.203 LW-LDI-TS Jan 11 07:41:49.203 via 10.101.12.2/32, 5 dependencies, recursive [flags 0x0] path-idx 0 NHID 0x0 [0x9deec860 0x0] next hop 10.101.12.2/32 via 10.101.12.2/32 local label 24001 next hop 10.101.12.2/32 Te0/0/2/1.20 labels imposed {None} Load distribution: 0 (refcount 3) Hash OK Interface Address 0 Y recursive 10.101.12.2 RP/0/RSP0/CPU0:ASR-9000-A#trace 8.8.8.8 Wed Jan 10 10:45:15.549 GMT Type escape sequence to abort. Tracing the route to 8.8.8.8 1 10.1.12.2 1 msec 0 msec 0 msec 2 10.101.12.2 1 msec ","date":"11 January 2024","externalUrl":null,"permalink":"/blog/a-simple-test-for-ios-xr-abf/","section":"Blog","summary":"Prerequisites # The topology shows as above , the DUT ASR9000B has 3 sub-interface to ASR9000C","title":"A Simple Test for IOS XR ABF","type":"blog"},{"content":" 环境介绍 # 一个简单的 CE 双上连的 VPN 环境，客户路由 8.8.8.8/32 将送到 r1。\nr1 配置 maximum-path，使去往 ce 的流量可以在 r2/r3 之间负载。\nr2/r3 我们都配置了 eibgp maximum-paths，那么 r2/r3 都会存在两条路由负载（一条是从 ibgp 学了 vpn 路由， 一条是从 vrf 下的 ebgp 学来的路由）。\nRP/0/0/CPU0:R2-AS56704#show route vrf 1 B 8.8.8.8/32 [20/0] via 10.1.3.3 (nexthop in vrf default), 00:21:10 [20/0] via 10.1.24.4, 00:21:10 label mode per-prefix （default） # 默认情况 r2/r3 都是 default 的标签分配方式， 即不同的 vpn 路由分配的标签都不一样。\nRP/0/0/CPU0:R1-AS56704#show cef vrf 1 8.8.8.8/32 | in label Sun Nov 5 16:07:25.162 UTC next hop 10.1.12.2/32 Gi0/0/0/0 labels imposed {ImplNull 24003} next hop 10.1.13.3/32 Gi0/0/0/1 labels imposed {ImplNull 24003} 以去往 r2 的流量为例，其 vpn 标签为 24003。数据包到达 r2 后会查询标签转发表，如下:\nRP/0/0/CPU0:R2-AS56704#show mpls forwarding labels 24003 Sun Nov 5 16:08:40.506 UTC Local Outgoing Prefix Outgoing Next Hop Bytes Label Label or ID Interface Switched ------ ----------- ------------------ ------------ --------------- ------------ 24003 Unlabelled 8.8.8.8/32[V] Gi0/0/0/1 10.1.24.4 0 24003 8.8.8.8/32[V] 10.1.3.3 0 (!) RP/0/0/CPU0:R2-AS56704#show mpls forwarding labels 24003 detail Sun Nov 5 16:18:55.223 UTC Local Outgoing Prefix Outgoing Next Hop Bytes Label Label or ID Interface Switched ------ ----------- ------------------ ------------ --------------- ------------ 24003 Unlabelled 8.8.8.8/32[V] Gi0/0/0/1 10.1.24.4 0 Updated: Nov 5 16:18:48.293 Path Flags: 0x60a0 [ EXT MULT ] Version: 38, Priority: 3 Label Stack (Top -\u0026gt; Bottom): { Unlabelled } NHID: 0x0, Encap-ID: N/A, Path idx: 1, Backup path idx: 0, Weight: 0 MAC/Encaps: 14/14, MTU: 1500 Outgoing Interface: GigabitEthernet0/0/0/1 (ifhandle 0x00000060) Packets Switched: 0 24004 8.8.8.8/32[V] 10.1.3.3 0 (!) Updated: Nov 5 16:18:48.293 Path Flags: 0x6180 [ BKUP, NoFwd MULT ] \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; Version: 38, Priority: 3 Label Stack (Top -\u0026gt; Bottom): { 24004 } NHID: 0x0, Encap-ID: N/A, Path idx: 0, Backup path idx: 0, Weight: 0 MAC/Encaps: 0/4, MTU: 0 Packets Switched: 0 (!): FRR pure backup \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; （!）为备份路径，流量只会走第一条，剥离标签，直接从出接口 Gi0/0/0/1 送出。\n同理 r3 上的标签转发表也类似也是剥离标签从出接口 Gi0/0/0/0 送出。\nRP/0/0/CPU0:R3-AS56704#show mpls forwarding labels 24003 Sun Nov 5 16:11:25.436 UTC Local Outgoing Prefix Outgoing Next Hop Bytes Label Label or ID Interface Switched ------ ----------- ------------------ ------------ --------------- ------------ 24003 Unlabelled 8.8.8.8/32[V] Gi0/0/0/0 10.1.34.4 0 24003 8.8.8.8/32[V] 10.1.2.2 0 (!) label mode per-vrf # RP/0/0/CPU0:R2-AS56704#show configuration commit changes last 1 Mon Nov 6 13:47:02.326 UTC Building configuration... !! IOS XR Configuration 6.3.1 router bgp 56704 vrf 1 address-family ipv4 unicast label mode per-vrf 将 r2/r3 的标签分配方式 改为 per-vrf， 这个时候我们看下 r1 上显示的标签如下:\nRP/0/0/CPU0:R1-AS56704#show cef vrf 1 8.8.8.8/32 | in label Sun Nov 5 16:28:56.814 UTC next hop 10.1.12.2/32 Gi0/0/0/0 labels imposed {ImplNull 24004} next hop 10.1.13.3/32 Gi0/0/0/1 labels imposed {ImplNull 24004} 流量如果到了 r2 上， 会先查 mpls 标签表 24004，如下； 它会剥离标签， 最后再查找下 cef 表，看看究竟该从哪个接口送出。\nRP/0/0/CPU0:R2-AS56704#show mpls forwarding labels 24004 Sun Nov 5 16:29:43.769 UTC Local Outgoing Prefix Outgoing Next Hop Bytes Label Label or ID Interface Switched ------ ----------- ------------------ ------------ --------------- ------------ 24004 Aggregate 1: Per-VRF Aggr[V] 1 0 当你查看 cef 表就会发现， 由于 eibgp maximum-paths 的配置， 我们将有两个路由负载，也就是说部分流量不会直接送往 ce，将会带标签送到 r3.\nRP/0/0/CPU0:R2-AS56704#show route vrf 1 B 8.8.8.8/32 [20/0] via 10.1.3.3 (nexthop in vrf default), 00:00:43 [20/0] via 10.1.24.4, 00:00:43 RP/0/0/CPU0:R2-AS56704#show cef vrf 1 8.8.8.8/32 detail Sun Nov 5 16:31:23.022 UTC 8.8.8.8/32, version 42, internal 0x1000001 0x0 (ptr 0xa11dd798) [1], 0x0 (0x0), 0x208 (0xa197d0e8) Updated Nov 5 16:19:32.900 Prefix Len 32, traffic index 0, precedence n/a, priority 3 gateway array (0xa111688c) reference count 1, flags 0x102878, source rib (7), 0 backups [1 type 1 flags 0x48441 (0xa15ed298) ext 0x0 (0x0)] LW-LDI[type=0, refc=0, ptr=0x0, sh-ldi=0x0] gateway array update type-time 1 Nov 5 15:31:29.808 LDI Update time Nov 5 15:31:29.808 via 10.1.3.3/32, 3 dependencies, recursive, bgp-multipath, backup [flags 0x6180] path-idx 0 NHID 0x0 [0xa1645798 0x0] recursion-via-/32 next hop VRF - \u0026#39;default\u0026#39;, table - 0xe0000000 next hop 10.1.3.3/32 via 24001/0/21 next hop 10.1.23.3/32 Gi0/0/0/2 labels imposed {ImplNull 24004} via 10.1.24.4/32, 4 dependencies, recursive, bgp-ext, bgp-multipath [flags 0x60a0] path-idx 1 NHID 0x0 [0xa11dd824 0x0] next hop 10.1.24.4/32 via 10.1.24.4/32 next hop 10.1.24.4/32 Gi0/0/0/1 labels imposed {None} Load distribution: 0 1 (refcount 1) Hash OK Interface Address 0 Y Unknown 24001/0 1 Y recursive 10.1.24.4 而如果 r3 也都配置了 eigbp maximum-paths 和 lable-mode per-vrf， r3 上也会先查标签表剥离标签，查 cef 表有两条路径负载， 环路产生（r2 和 r3 之间）。\nRP/0/0/CPU0:R3-AS56704#show mpls forwarding labels 24004 Sun Nov 5 16:34:00.653 UTC Local Outgoing Prefix Outgoing Next Hop Bytes Label Label or ID Interface Switched ------ ----------- ------------------ ------------ --------------- ------------ 24004 Aggregate 1: Per-VRF Aggr[V] 1 0 RP/0/0/CPU0:R3-AS56704#show cef vrf 1 8.8.8.8/32 detail Sun Nov 5 16:36:28.863 UTC 8.8.8.8/32, version 35, internal 0x1000001 0x0 (ptr 0xa11e55f4) [1], 0x0 (0x0), 0x208 (0xa197d0b8) Updated Nov 5 16:19:33.553 Prefix Len 32, traffic index 0, precedence n/a, priority 3 gateway array (0xa111e6e8) reference count 1, flags 0x102878, source rib (7), 0 backups [1 type 1 flags 0x48441 (0xa15ed298) ext 0x0 (0x0)] LW-LDI[type=0, refc=0, ptr=0x0, sh-ldi=0x0] gateway array update type-time 1 Nov 5 15:30:39.934 LDI Update time Nov 5 15:30:39.934 via 10.1.2.2/32, 3 dependencies, recursive, bgp-multipath, backup [flags 0x6180] path-idx 0 NHID 0x0 [0xa164570c 0x0] recursion-via-/32 next hop VRF - \u0026#39;default\u0026#39;, table - 0xe0000000 next hop 10.1.2.2/32 via 24000/0/21 next hop 10.1.23.2/32 Gi0/0/0/2 labels imposed {ImplNull 24004} via 10.1.34.4/32, 4 dependencies, recursive, bgp-ext, bgp-multipath [flags 0x60a0] path-idx 1 NHID 0x0 [0xa11e5680 0x0] next hop 10.1.34.4/32 via 10.1.34.4/32 next hop 10.1.34.4/32 Gi0/0/0/0 labels imposed {None} Load distribution: 0 1 (refcount 1) Hash OK Interface Address 0 Y Unknown 24000/0 1 Y recursive 10.1.34.4 而如果你只在 r2 上修改 label 分配方式为 per-vrf， r3 上保持默认的标签分配方式 per-prefix。\n那即使流量在 r2 上仍然会有一半送到 r3， 但由于 per-prefix 的标签分配方式直接有出接口， 在 r3 上会直接转发给 ce，这样也不会出环。\nlabel mode per-ce # per-ce 的标签分配方式，其实和 per-prefix 类似， 它是有直接的出接口的， 流量也不需要经过二次查找， 所以没成环的风险。\nRP/0/0/CPU0:R2-AS56704#show mpls forwarding Sun Nov 5 16:43:33.192 UTC Local Outgoing Prefix Outgoing Next Hop Bytes Label Label or ID Interface Switched ------ ----------- ------------------ ------------ --------------- ------------ 24006 Unlabelled No ID Gi0/0/0/1 10.1.24.4 0 Aggregate No ID 1 0 (!) 24006 Unlabelled No ID Gi0/0/0/1 10.1.24.4 0 Updated: Nov 5 16:39:36.928 Path Flags: 0x6080 [ MULT ] Version: 15, Priority: 3 Label Stack (Top -\u0026gt; Bottom): { Unlabelled } NHID: 0x0, Encap-ID: N/A, Path idx: 1, Backup path idx: 0, Weight: 0 MAC/Encaps: 14/14, MTU: 1500 Outgoing Interface: GigabitEthernet0/0/0/1 (ifhandle 0x00000060) Packets Switched: 0 Aggregate No ID 1 0 (!) Updated: Nov 5 16:39:36.928 Path Flags: 0x100 [ BKUP, NoFwd ] Label Stack (Top -\u0026gt; Bottom): { } MAC/Encaps: 0/0, MTU: 0 Packets Switched: 0 标签分配方式的总结 # per-prefix 默认的标签分配方式， 缺点为如果分配的标签量很大的情况下，标签的收敛上相对于 ip 的收敛会慢上很多。\nper-vrf 需要二次查找路由表\neibgp 的使用场景 # 粗略画一个图，siteA 有两个 CE 分别连到一个 PE；siteB 有两个 CE 也分别连到一个 PE。\n对于 siteA-CE1 而言， 要访问 siteB 的业务， 默认只会走 PE1→ siteB-CE1, 为了充分的利用 PE2 和 siteB-CE2 之间的链路我们可以在 PE1 上开启 eibgp maximum-paths；\n同理 PE2 上也可以开启 eibgp maximum-paths。\n","date":"6 November 2023","externalUrl":null,"permalink":"/blog/eibgp-maximum-paths-label-mode-per-vrf-loop/","section":"Blog","summary":"环境介绍 # 一个简单的 CE 双上连的 VPN 环境，客户路由 8.","title":"eibgp maximum-paths + label mode per-vrf 环路","type":"blog"},{"content":" Embedded Packet Capture # GUI 方式抓包 # vManage 上有个很方便的抓包工具，只需要点击 Start， 就可以帮我们很方便的开启某个接口下的抓包，其本质上就是 vManage 登陆到 cEdge，下发一些 EPC 的参数。开启方法如下:\n开启 Data Stream 功能\n路径为 vManage -\u0026gt; Administration -\u0026gt; Settings -\u0026gt; Data Stream\n抓包路径\n开启后打开 Monitor —\u0026gt; Network -\u0026gt; cEdge -\u0026gt; Troubleshooting, 就可以看到 Packet Capture 的选项。\n你还可以设置简单的 Traffic filter 的参数，点击 start 即可开始抓包, 测试结束后点击 Stop 按钮结束抓包， 并可以将数据包下载下来。\n命令行方式抓包 # 配置 ACL\n如果是 Cli 模式的 cEdge， 我们可以直接登陆设备进行配置对应的 ACL；如果是模版形式的 cEdge， 则需要提前使用模版将对应的 ACL 下发下去。如下, 在 Device Template 下增加一个 Cli add-on Template， 配置上你想抓取的感兴趣流。\n配置 EPC\ncEdge3#monitor capture cap interface gigabitEthernet 1 both access-list pkt cEdge3#monitor capture cap buffer size 100 !!! 开启抓包 cEdge3#monitor capture cap start !!! 执行测试 cEdge3#ping 1.100.100.1 Type escape sequence to abort. Sending 5, 100-byte ICMP Echos to 1.100.100.1, timeout is 2 seconds: !!!!! Success rate is 100 percent (5/5), round-trip min/avg/max = 6/37/149 ms !!! 停止抓包 cEdge3#monitor capture cap stop !!! 检查抓包summary或者detial 数据 cEdge3#show monitor capture cap buffer brief ---------------------------------------------------------------------------- # size timestamp source destination dscp protocol ---------------------------------------------------------------------------- 0 114 0.000000 1.100.100.3 -\u0026gt; 1.100.100.1 0 BE ICMP 1 114 0.005996 1.100.100.1 -\u0026gt; 1.100.100.3 0 BE ICMP 2 114 0.007004 1.100.100.3 -\u0026gt; 1.100.100.1 0 BE ICMP 3 114 0.011993 1.100.100.1 -\u0026gt; 1.100.100.3 0 BE ICMP 4 114 0.013000 1.100.100.3 -\u0026gt; 1.100.100.1 0 BE ICMP 5 114 0.017989 1.100.100.1 -\u0026gt; 1.100.100.3 0 BE ICMP 6 114 0.140984 1.100.100.3 -\u0026gt; 1.100.100.1 0 BE ICMP 7 114 0.166984 1.100.100.1 -\u0026gt; 1.100.100.3 0 BE ICMP 8 114 0.170981 1.100.100.3 -\u0026gt; 1.100.100.1 0 BE ICMP 9 114 0.175986 1.100.100.1 -\u0026gt; 1.100.100.3 0 BE ICMP cEdge3#show monitor capture cap buffer detailed ---------------------------------------------------------------------------- # size timestamp source destination dscp protocol ---------------------------------------------------------------------------- 0 114 0.000000 1.100.100.3 -\u0026gt; 1.100.100.1 0 BE ICMP 0000: 52540017 59D25254 0018BE46 08004500 RT..Y.RT...F..E. 0010: 00640037 0000FF01 F0950164 64030164 .d.7.......dd..d 0020: 64010800 2038000B 00000000 00019EA2 d... 8.......... 0030: BF63ABCD ABCDABCD ABCDABCD ABCDABCD .c.............. !!! 或者导出pcap数据 cEdge3#monitor capture cap export bootflash:cap.pcap Exported Successfully !!! 测试完毕删除设置 cEdge3# no monitor capture CAP Datapath Packet Trace # Packet trace 并不是抓包， 它可以详细看到数据包经过哪些 feature，最后被丢弃还是被处理了。\ndebug platform condition interface GigabitEthernet xxx both \u0026lt;\u0026lt; 匹配接口 Or debug platform condition interface gigabitEthernet xxx ipv4 1.1.1.1/32 both \u0026lt;\u0026lt; 匹配接口和条目 Or debug platform condition interface GigabitEthernet xxx ipv4 access-list pkt both \u0026lt;\u0026lt; 匹配ACL+接口 debug platform packet-trace packet 2048 fia-trace data-size 2048 debug platform packet-trace copy packet both l2 size 2048 debug platform condition start \u0026lt;test\u0026gt; debug platform condition stop show platform packet-trace statistics show platform packet-trace summary show platform packet-trace packet all show platform conditions show platform packet-trace configuration clear platform packet-trace statistics --\u0026gt; clear the packet trace buffer clear platform condition all --\u0026gt; clears both platform conditions and the packet trace configuration 参考 # Embedded Packet Capture\n","date":"21 October 2023","externalUrl":null,"permalink":"/sdwan/capture/","section":"SDWAN","summary":"Embedded Packet Capture # GUI 方式抓包 # vManage 上有个很方便的抓包工具，只需要点击 Start， 就可以帮我们很方便的开启某个接口下的抓包，其本质上就是 vManage 登陆到 cEdge，下发一些 EPC 的参数。开启方法如下:","title":"SDWAN环境下cEdge的抓包","type":"sdwan"},{"content":" NAT 的划分 # 以下是 RFC3489 的分类方式， 当然还有其他的分类标准，比如我们熟知的 PAT 就是另一种分类方式中的一种。\nRFC3489 中将 NAT 的实现分为四大类：\nFull Cone NAT 完全锥形 NAT Restricted Cone NAT 限制锥形 NAT （可以理解为 IP 限制） Port Restricted Cone NAT 端口限制锥形 NAT （ IP+Port 限制） Symmetric NAT 对称 NAT 其中完全锥形的穿透性最好，而对称形的安全性最高.\n锥形 NAT 与对称 NAT 的区别 # 所谓锥形 NAT 是指：只要是从同一个内部地址和端口出来的包，无论目的地址是否相同，NAT 都将它转换成同一个外部地址和端口。\n“同一个外部地址和端口”与“无论目的地址是否相同”形成了一个类似锥形的网络结构，也是这一名称的由来。反过来，不满足这一条件的即为对称 NAT 。\n举例说明:\nNAT 内的主机 A ： IP 记为 A ，使用端口 1000 NAT 网关 ： IP 记为 NAT ，用于 NAT 的端口池假设为（ 5001-5999 ） 公网上的主机 B ： IP 记为 B ，开放端口 2000 公网上的主机 C ： IP 记为 C ，开放端口 3000 假设主机 A 先后访问主机 B 和 C\n如果是锥形 NAT # 那么成功连接后，状态必然如下：\nA （ 1000 ） —— \u0026gt; NAT （ 5001 ）—— \u0026gt; B （ 2000 ） A （ 1000 ） —— \u0026gt; NAT （ 5001 ）—— \u0026gt; C （ 3000 ） 也就是说，只要是从 A 主机的 1000 端口发出的包，经过地址转换后的源端口一定相同。\n如果是对称形 NAT # 连接后，状态有可能（注意是可能，不是一定）如下：\nA （ 1000 ） —— \u0026gt; NAT （ 5001 ）—— \u0026gt; B （ 2000 ） A （ 1000 ） —— \u0026gt; NAT （ 5002 ）—— \u0026gt; C （ 3000 ） 三种 CONE NAT 之间的区别 # 仍然以上面的网络环境为例, 假设 A 先与 B 建立了连接:\nA （ 1000 ） —— \u0026gt; NAT （ 5001 ）——— \u0026gt; B （ 2000 ）\nPort Restricted Cone NAT # 只有 B （ 2000 ）发往 NAT （ 5001 ）的数据包可以到达 A （ 1000 ）\nB （ 2000 ） —— \u0026gt; NAT （ 5001 ） ——— \u0026gt; A （ 1000 ） B （ 3000 ） —— \u0026gt; NAT （ 5001 ） — X — \u0026gt; A （ 1000 ） C （ 2000 ） —— \u0026gt; NAT （ 5001 ） — X — \u0026gt; A （ 1000 ） Restricted Cone NAT # 只要是从 B 主机发往 NAT （ 5001 ）的数据包都可以到达 A （ 1000 ）\nB （ 2000 ） —— \u0026gt; NAT （ 5001 ） ——— \u0026gt; A （ 1000 ） B （ 3000 ） —— \u0026gt; NAT （ 5001 ） ——— \u0026gt; A （ 1000 ） C （ 2000 ） —— \u0026gt; NAT （ 5001 ） — X — \u0026gt; A （ 1000 ） Full Cone NAT # 任意地址发往 NAT （ 5001 ）的数据包都可以到达 A （ 1000 ）\nB （ 2000 ） —— \u0026gt; NAT （ 5001 ） ——— \u0026gt; A （ 1000 ） B （ 3000 ） —— \u0026gt; NAT （ 5001 ） ——— \u0026gt; A （ 1000 ） C （ 3000 ） —— \u0026gt; NAT （ 5001 ） ——— \u0026gt; A （ 1000 ） Cisco SDWAN NAT 建议 # 建议在数据中心或中心站点配置全锥或一对一 NAT，以便无论分支机构运行什么 NAT 类型（受限锥、端口受限锥或对称 NAT） 具有运行对称 NAT 的防火墙的两个站点在形成隧道连接时会遇到问题，因为此 NAT 将每一端的源端口转换为随机端口号，并且无法从外部发起流量。 在一个站点配置的对称 NAT 需要在另一站点上使用全锥 NAT 或没有 NAT 的公共 IP，以便在它们之间建立直接 IPsec 隧道。 无法直接连接的站点应设置为通过数据中心或其他集中站点相互访问。 请注意，对于 NAT 后面的 GRE 封装隧道，仅支持一对一 NAT。由于 GRE 数据包缺少 L4 标头，因此不支持任何类型的端口 Overload 的 NAT。 如何去判断你所在环境 NAT 类型 # 有一个很好用的 python 库, pip3 install pynat; 安装成功后进入 python packet path,执行脚本:\ncd /Users/xuxing/Library/Python/3.9/lib/python/site-packages/ ~/Library/Python/3.9/lib/python/site-packages ❯ python3 pynat.py Network type: Symmetric NAT Internal address: 192.168.2.23:54320 External address: 27.189.84.243:1323 ","date":"16 October 2023","externalUrl":null,"permalink":"/sdwan/nat/","section":"SDWAN","summary":"NAT 的划分 # 以下是 RFC3489 的分类方式， 当然还有其他的分类标准，比如我们熟知的 PAT 就是另一种分类方式中的一种。","title":"CONE NAT 和 Symmetric NAT","type":"sdwan"},{"content":"","date":"16 October 2023","externalUrl":null,"permalink":"/tags/nat/","section":"Tags","summary":"","title":"NAT","type":"tags"},{"content":"最近在AWS上弄了一个EC2主机用来放一些比较杂的东西，开放了某个端口，由于我并不想放开所有的IP的访问权限， 就写了一个脚本用来获取我本机的公网地址然后用AWS CLI获取，撤销、更新 AWS 安全组规则中的 IP 地址。\n请确保你已经配置好 AWS CLI 并拥有适当的权限来执行相关操作。\n获取当前允许访问端口 xx 的 IP 地址 # #!/usr/bin/env fish # 获取当前 IP set current_cidr (aws ec2 describe-security-groups --group-ids sg-xxxxx --query \u0026#34;SecurityGroups[0].IpPermissions[?FromPort==\u0026#39;xx\u0026#39;].IpRanges[0].CidrIp\u0026#34; --output text) echo \u0026#34;当前端口 xx 的 CIDR: $current_cidr\u0026#34; 撤销旧的 IP 权限 # if [ -n \u0026#34;$current_cidr\u0026#34; ] aws ec2 revoke-security-group-ingress --group-id sg-xxxxx --protocol tcp --port xx --cidr \u0026#34;$current_cidr\u0026#34; echo \u0026#34;从端口 xx 撤销了 CIDR $current_cidr\u0026#34; else echo \u0026#34;未找到端口 xx 的 CIDR\u0026#34; end 获取本机的公共 IP 地址 # set local_ip (curl -s ifconfig.me) echo \u0026#34;本机公共 IP 地址: $local_ip\u0026#34; 添加新的 IP 权限 # if [ -n \u0026#34;$local_ip\u0026#34; ] aws ec2 authorize-security-group-ingress --group-id sg-xxxxx --protocol tcp --port xx --cidr \u0026#34;$local_ip/32\u0026#34; echo \u0026#34;将新的 CIDR $local_ip/32 添加到端口 xx\u0026#34; else echo \u0026#34;无法获取本机公共 IP 地址\u0026#34; end 以上脚本中的 sg-xxxxx 需要替换为实际的安全组 ID。此脚本会按照上述步骤执行操作，以管理安全组规则\n","date":"15 August 2023","externalUrl":null,"permalink":"/blog/automating-update-aws-security-group/","section":"Blog","summary":"最近在AWS上弄了一个EC2主机用来放一些比较杂的东西，开放了某个端口，由于我并不想放开所有的IP的访问权限， 就写了一个脚本用来获取我本机的公网地址然后用AWS CLI获取，撤销、更新 AWS 安全组规则中的 IP 地址。","title":"Automating Update AWS Security Group","type":"blog"},{"content":"研究了下 eXR 的 file system, 记录下权当了解下系统的内部情况。\n本文的演示事例使用的硬件 A9K-RSP5-SE 和 eXR 742 作为案例，使用的硬件不同，升级方式不同，磁盘的大小和分区是略微存在出入的。\n如果你需要一个干净的，完全纯净的分区请采用以下方式升级或安装系统:\nUSB/PXE\n正常 install command 升级,升级完成后 re-image 所有的板卡 (re-image 的操作，类似于 PXE 安装)\neXR 系统简介 # 如上图，eXR 是在硬件的基础上有一个 host 系统, host 系统里再 run 两个 vm （XR VM 和 sysadmin VM）。\n[host:~]$ virsh list --all Id Name State ---------------------------------------------------- 2 sysadmin running 3 default-sdr--1 running 关于不同 VM 之间如何访问可以参考另一篇文章。\nHost VM 的文件系统 # A9K-RSP5-SE 在官网的介绍中说有两块 128G 的 SSD + 一个 8G 内置 USB，我们可以通过 fdisk 或者 lsblk 查看这两块硬盘和相关的分区（sda/sdb）以及内置 USB （sdc）：\n[host:~]$ fdisk -l | grep \u0026#34;/dev/sd\u0026#34; Disk /dev/sda: 119.2 GiB, 128034086400 bytes, 250066575 sectors /dev/sda1 40 3906247 1.9G Microsoft basic data /dev/sda2 3906248 35156247 14.9G Microsoft basic data /dev/sda3 35156248 249910159 102.4G Microsoft basic data /dev/sda4 249910160 250066535 76.4M EFI System Disk /dev/sdb: 119.2 GiB, 128034086400 bytes, 250066575 sectors Disk /dev/sdc: 7.5 GiB, 8019509248 bytes, 15663104 sectors /dev/sdc1 15314 7672313 3828500 83 Linux /dev/sdc2 7672314 9203713 765700 83 Linux /dev/sdc3 9203714 15329313 3062800 83 Linux [host:~]$ lsblk NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT sda 8:0 0 119.2G 0 disk |-sda1 8:1 0 1.9G 0 part |-sda2 8:2 0 14.9G 0 part |-sda3 8:3 0 102.4G 0 part | |-panini_vol_grp-host_lv0 253:4 0 1000M 0 lvm / | |-panini_vol_grp-host_data_scratch_lv0 253:5 0 3.9G 0 lvm /misc/scratch | |-panini_vol_grp-host_data_log_lv0 253:6 0 3.9G 0 lvm /var/log | |-panini_vol_grp-host_data_config_lv0 253:7 0 1000M 0 lvm /misc/config | |-panini_vol_grp-calvados_lv0 253:8 0 2.5G 0 lvm | |-panini_vol_grp-calvados_data_lv0 253:9 0 6.9G 0 lvm | `-panini_vol_grp-xr_lv0 253:10 0 3.9G 0 lvm `-sda4 8:4 0 76.4M 0 part sdb 8:16 0 119.2G 0 disk |-pci_disk1-ssd_disk1_hostos 253:0 0 18.8G 0 lvm /misc/disk1 |-pci_disk1-ssd_disk1_calvados_1 253:1 0 31.3G 0 lvm |-pci_disk1-ssd_disk1_xr_1 253:2 0 22.5G 0 lvm |-pci_disk1-app_lv0 253:3 0 19.5G 0 lvm `-pci_disk1-xr_data_lv0 253:11 0 6.9G 0 lvm sdc 8:32 0 7.5G 0 disk |-sdc1 8:33 0 3.7G 0 part |-sdc2 8:34 0 747.8M 0 part `-sdc3 8:35 0 2.9G 0 part sda 被创建了 3 个分区， 其中 sda3 被拿来创建逻辑卷 （panini_vol_grp）;sdb 完整的被拿来创建了逻辑卷 pci_disk1,如下命令可以显示逻辑卷已经被使用了多少， 还有多少空余。\n[host:~]$ pvs PV VG Fmt Attr PSize PFree /dev/sda3 panini_vol_grp lvm2 a-- 102.40g 79.45g /dev/sdb pci_disk1 lvm2 a-- 119.24g 20.35g 那接下来使用 df -h + lsblk 来对照看下 host vm 是如何挂载和使用这些逻辑卷的:\n除此之外还有一些 size 为 20G 的硬盘，查了下资料， 这些属于 linux 中一种虚拟内存文件系统；指的是由内核产生但是不存在硬盘上， 存在于内存中的文件系统。 （tmpfs）\n其大小一般是内存的一半，RSP5-SE 内存大小是 40G，所以这个地方挂载的大小为 20G。\nSysadmin VM 的文件系统 # sysadmin/xr vm 是通过 kvm 虚拟 run 在 host 主机中的虚拟机。\n如果需要查看这两个虚拟机的配置信息，可以使用 ps -aux ｜ grep qemu 查看（比如 host 主机为每个 vm 分配了多少内存）。\n或者使用标准的 virsh 命令 dump 所有的配置，这里我做了过滤，只展示了一些磁盘的映射\n[host:~]$ virsh list --all Id Name State ---------------------------------------------------- 2 sysadmin running 3 default-sdr--1 running [host:~]$ virsh dumpxml 2 | grep -E \u0026#39;source|target\u0026#39; \u0026lt;resource\u0026gt; \u0026lt;/resource\u0026gt; \u0026lt;source dev=\u0026#39;/dev/panini_vol_grp/calvados_lv0\u0026#39;/\u0026gt; \u0026lt;target dev=\u0026#39;vda\u0026#39; bus=\u0026#39;virtio\u0026#39;/\u0026gt; \u0026lt;source dev=\u0026#39;/dev/sda2\u0026#39;/\u0026gt; \u0026lt;target dev=\u0026#39;vdb\u0026#39; bus=\u0026#39;virtio\u0026#39;/\u0026gt; \u0026lt;source dev=\u0026#39;/dev/panini_vol_grp/calvados_data_lv0\u0026#39;/\u0026gt; \u0026lt;target dev=\u0026#39;vdc\u0026#39; bus=\u0026#39;virtio\u0026#39;/\u0026gt; \u0026lt;source dev=\u0026#39;/dev/pci_disk1/ssd_disk1_calvados_1\u0026#39;/\u0026gt; \u0026lt;target dev=\u0026#39;vdd\u0026#39; bus=\u0026#39;virtio\u0026#39;/\u0026gt; \u0026lt;source dev=\u0026#39;/dev/sdc2\u0026#39;/\u0026gt; \u0026lt;target dev=\u0026#39;vde\u0026#39; bus=\u0026#39;virtio\u0026#39;/\u0026gt; \u0026lt;source dev=\u0026#39;/dev/sdc3\u0026#39;/\u0026gt; \u0026lt;target dev=\u0026#39;vdf\u0026#39; bus=\u0026#39;virtio\u0026#39;/\u0026gt; \u0026lt;source mode=\u0026#39;bind\u0026#39; host=\u0026#39;127.0.0.1\u0026#39; service=\u0026#39;49998\u0026#39;/\u0026gt; \u0026lt;target port=\u0026#39;0\u0026#39;/\u0026gt; \u0026lt;source mode=\u0026#39;bind\u0026#39; host=\u0026#39;127.0.0.1\u0026#39; service=\u0026#39;49999\u0026#39;/\u0026gt; \u0026lt;target port=\u0026#39;1\u0026#39;/\u0026gt; \u0026lt;source mode=\u0026#39;bind\u0026#39; host=\u0026#39;127.0.0.1\u0026#39; service=\u0026#39;49998\u0026#39;/\u0026gt; \u0026lt;target type=\u0026#39;serial\u0026#39; port=\u0026#39;0\u0026#39;/\u0026gt; 于是，我们就得到了这样的一个表格:\nvda/dev/panini_vol_grp/calvados_lv02.5Gvdb/dev/sda214.9Gvdc/dev/panini_vol_grp/calvados_data_lv06.9Gvdd/dev/pci_disk1/ssd_disk1_calvados_131.3Gvde/dev/sdc2747.8Mvdf/dev/sdc32.9G 然后让我们回到 sysadmin vm, sysadmin vm 使用这 6 块存储空间，在此基础上又进行了分区；每一块都有不同的用途，关于每个分区的用途可以参考之前的文章\n[sysadmin-vm:0_RSP1:~]$lsblk NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT vda 252:0 0 2.5G 0 disk `-vda1 252:1 0 2.5G 0 part / vdb 252:16 0 14.9G 0 disk `-vdb1 252:17 0 14.9G 0 part /install_repo vdc 252:32 0 6.9G 0 disk |-vdc1 252:33 0 2G 0 part /var/log |-vdc2 252:34 0 1000M 0 part /misc/config `-vdc3 252:35 0 3.9G 0 part /misc/scratch vdd 252:48 0 31.3G 0 disk /misc/disk1 vde 252:64 0 747.8M 0 disk /eusba vdf 252:80 0 2.9G 0 disk /eusbb [sysadmin-vm:0_RSP1:~]$ [sysadmin-vm:0_RSP1:~]$ [sysadmin-vm:0_RSP1:~]$df -h | grep -Ev \u0026#34;none|tmpfs|run\u0026#34; Filesystem Size Used Avail Use% Mounted on /dev/vda1 2.4G 1.2G 1.1G 53% / /dev/vdd 31G 5.0G 25G 17% /misc/disk1 /dev/vdc1 1.9G 40M 1.8G 3% /var/log /dev/vdc2 969M 4.1M 899M 1% /misc/config /dev/vdc3 3.8G 9.5M 3.6G 1% /misc/scratch /dev/ram7 15M 15M 0 100% /mnt/ram7 /dev/vde 736M 9.9M 689M 2% /eusba /dev/vdf 3.0G 1.7G 1.4G 56% /eusbb /dev/vdb1 15G 1.3G 13G 9% /install_repo sysadmin-vm:0_RSP1# show media Fri Jul 7 15:00:03.571 UTC+00:00 --------------------------------------------------------------------- Partition Size Used Percent Avail --------------------------------------------------------------------- rootfs: 2.4G 1.2G 53% 1.1G harddisk: 31G 5.0G 17% 25G log: 1.9G 41M 3% 1.8G config: 969M 4.1M 1% 899M disk0: 3.8G 9.5M 1% 3.6G a9ksys: 736M 9.9M 2% 689M harddiskb: 3.0G 1.7G 56% 1.4G install: 15G 1.3G 9% 13G install:/tmp 31G 5.0G 17% 25G install:/cache 31G 5.0G 17% 25G rootfs:/install/tmp 31G 5.0G 17% 25G --------------------------------------------------------------------- rootfs: = root file system (read-only) log: = system log files (read-only) config: = configuration storage (read-only) install: = install repository (read-only) a9ksys: = ASR9K system storage (read-only) XR VM 的文件系统 # 同理我们可以得到虚拟卷与 XR VM 中磁盘的映射关系:\n[host:~]$ virsh list --all Id Name State ---------------------------------------------------- 2 sysadmin running 3 default-sdr--1 running [host:~]$ virsh dumpxml 3 | grep -E \u0026#39;source|target\u0026#39; \u0026lt;resource\u0026gt; \u0026lt;/resource\u0026gt; \u0026lt;source dev=\u0026#39;/dev/panini_vol_grp/xr_lv0\u0026#39;/\u0026gt; \u0026lt;target dev=\u0026#39;vda\u0026#39; bus=\u0026#39;virtio\u0026#39;/\u0026gt; \u0026lt;source dev=\u0026#39;/dev/pci_disk1/xr_data_lv0\u0026#39;/\u0026gt; \u0026lt;target dev=\u0026#39;vdb\u0026#39; bus=\u0026#39;virtio\u0026#39;/\u0026gt; \u0026lt;source dev=\u0026#39;/dev/pci_disk1/ssd_disk1_xr_1\u0026#39;/\u0026gt; \u0026lt;target dev=\u0026#39;vdd\u0026#39; bus=\u0026#39;virtio\u0026#39;/\u0026gt; \u0026lt;source file=\u0026#39;/usr/local/calvados/vm_manager/vmm_default-sdr--1.cfg\u0026#39;/\u0026gt; \u0026lt;target dev=\u0026#39;vdg\u0026#39; bus=\u0026#39;virtio\u0026#39;/\u0026gt; \u0026lt;source dev=\u0026#39;/dev/eusb1\u0026#39;/\u0026gt; \u0026lt;target dev=\u0026#39;vdh\u0026#39; bus=\u0026#39;virtio\u0026#39;/\u0026gt; \u0026lt;source dev=\u0026#39;/dev/pci_disk1/app_lv0\u0026#39;/\u0026gt; \u0026lt;target dev=\u0026#39;vdi\u0026#39; bus=\u0026#39;virtio\u0026#39;/\u0026gt; \u0026lt;source\u0026gt; \u0026lt;/source\u0026gt; \u0026lt;source\u0026gt; \u0026lt;/source\u0026gt; \u0026lt;source\u0026gt; \u0026lt;/source\u0026gt; \u0026lt;source\u0026gt; \u0026lt;/source\u0026gt; 这里不确定为什么 xr vm 内部的磁盘名会与 host 主机中的配置文件没一一对应，但是根据 size，我们可以大致的推断出如下的表格:\nvda/dev/panini_vol_grp/xr_lv03.9Gvdb/dev/pci_disk1/xr_data_lv06.9Gvdc/dev/pci_disk1/ssd_disk1_xr_122.5Gvdd/dev/sdc13.7Gvde/dev/pci_disk1/app_lv019.5G [xr-vm_node0_RSP1_CPU0:~]$lsblk NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT vda 252:0 0 3.9G 0 disk `-vda1 252:1 0 3.9G 0 part / vdb 252:16 0 6.9G 0 disk |-vdb1 252:17 0 2G 0 part /var/log |-vdb2 252:18 0 1000M 0 part /misc/config `-vdb3 252:19 0 3.9G 0 part /misc/scratch vdc 252:32 0 22.5G 0 disk /misc/disk1 vdd 252:48 0 3.7G 0 disk /eusb vde 252:64 0 19.5G 0 disk /misc/app_host vdf 252:80 0 8K 0 disk RP/0/RSP1/CPU0:ASR-9904-B#show media Fri Jul 7 15:15:46.988 UTC Media Info for Location: node0_RSP1_CPU0 Partition Size Used Percent Avail -------------------------------------------------------------------- rootfs: 3.8G 2.1G 58% 1.6G harddisk: 23G 456M 3% 21G log: 1.9G 72M 4% 1.8G config: 969M 3.0M 1% 900M disk0: 3.8G 11M 1% 3.6G harddiska: 3.6G 7.4M 1% 3.5G apphost: 20G 539M 3% 18G Notes # 如果我们使用 install 命令进行软件升级，系统的分区会是怎么样呢？\n这里用板卡的作为事例，如下板卡显示的 boot 的分区为 xr_lv298.\n我们去板卡的 host vm 下看下分区情况:\n[host:~]$ lsblk NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT sda 8:0 0 29.8G 0 disk |-sda1 8:1 0 1.1G 0 part |-sda2 8:2 0 5G 0 part |-sda3 8:3 0 23.7G 0 part | |-panini_vol_grp-host_data_scratch_lv0 253:0 0 2G 0 lvm /misc/scratch | |-panini_vol_grp-host_data_log_lv0 253:1 0 500M 0 lvm /var/log | |-panini_vol_grp-host_data_config_lv0 253:2 0 100M 0 lvm /misc/config | |-panini_vol_grp-calvados_data_lv0 253:3 0 2G 0 lvm | |-panini_vol_grp-xr_data_lv0 253:4 0 2G 0 lvm | |-panini_vol_grp-host_lv291 253:5 0 1000M 0 lvm | |-panini_vol_grp-calvados_lv292 253:6 0 2.5G 0 lvm | |-panini_vol_grp-xr_lv293 253:7 0 3.9G 0 lvm | |-panini_vol_grp-xr_lv298 253:8 0 3.9G 0 lvm | |-panini_vol_grp-host_lv298 253:9 0 1000M 0 lvm / | `-panini_vol_grp-calvados_lv298 253:10 0 2.5G 0 lvm `-sda4 8:4 0 76.3M 0 part [host:~]$ [host:~]$ [host:~]$ [host:~]$ lsblk | grep xr_lv | |-panini_vol_grp-xr_lv293 253:7 0 3.9G 0 lvm | |-panini_vol_grp-xr_lv298 253:8 0 3.9G 0 lvm 能看到，除了 xr_lv298 以外，我们还有一个 xr_lv293 的分区， 那这个 xr_lv293 就是我们升级前创建的系统分区；\n即使我们使用 install remove inactive 命令， 该分区也不会被删除。如果想删除磁盘上不用的分区，可以 re-image 这块板卡，及从引擎引导一个最新的系统，覆盖之前所有的分区, 命令：\nsysadmin-vm:0_RSP1# hw-module location 0/1 bootmedia network 参考 # Linux 物理卷(PV)、逻辑卷(LV)、卷组(VG)管理\nLinux 中查看硬盘信息\n","date":"7 July 2023","externalUrl":null,"permalink":"/blog/exr-filesystem/","section":"Blog","summary":"研究了下 eXR 的 file system, 记录下权当了解下系统的内部情况。","title":"eXR filesystem","type":"blog"},{"content":" comments by \u0026lsquo;zhihua\u0026rsquo;\n对于 ASR9000 来说 ：\n\u0026ldquo;show interfaces\u0026rdquo; and \u0026ldquo;show policy-map interfaces\u0026rdquo; show L2 frame size.\n\u0026ldquo;show interfaces\u0026rdquo; does not include FCS bytes, but \u0026ldquo;show policy-map interfaces\u0026rdquo; includes FCS bytes(SIP700 是个例外)\nL1 frame size 和 L2 frame size # 如上图就是一个以太网帧的物理层具体所包含的内容。\nPreamble: 前同步码 7 bytes\nSFD: start frame delimiter 1 byte 帧开始定界符\nDst MAC: 6 bytes\nSrc MAC: 6 bytes\nEtherType: 2 bytes\nFCS(CRC): 4 bytes\n除此之外，每个帧之前还会存在 12 bytes 的最小帧间隙 （Inter Frame Gap min）\nL1 Size = L2 frame Size + IFG min + Preamble + SFD = L2 frame Size + 20 Bytes\nL2 Size = Dst MAC+ Src MAC + Ether Type + Payload + FCS\nShow interface 计数 # 我们拿测试仪构造一个 66 字节的帧.\nPacket size 66 Bytes = Ethernet II Header(14)+ IPv4 (20) + Payload (28) + FCS (4)\nRP/0/RSP1/CPU0:513E.B.31.ASR9K-V2-2#show int tenGigE 0/0/0/0 | in packets input Tue Feb 14 12:21:00.065 UTC 58992573918 packets input, 4860381127998 bytes, 0 total input drops RP/0/RSP1/CPU0:513E.B.31.ASR9K-V2-2#show int tenGigE 0/0/0/0 | in packets input Tue Feb 14 12:21:03.400 UTC 58992573951 packets input, 4860381130044 bytes, 0 total input drops RP/0/RSP1/CPU0:513E.B.31.ASR9K-V2-2# 计算接口数据包的计数:\n(4860381130044-4860381127998)/(58992573951-58992573918) = 62 Bytes\n即 show interface 显示的计数为 L2 frame 并且不包含 4 字节的 FCS\nshow policy-map 计数 # RP/0/RSP1/CPU0:513E.B.31.ASR9K-V2-2#show policy-map interface tenGigE 0/0/0/1 output | in Matched Tue Feb 14 12:23:49.045 UTC Matched : 1342020745/88573369170 5 Matched : 0/0 0 Matched : 0/0 0 Matched : 0/0 0 Matched : 0/0 0 Matched : 0/0 0 Matched : 54037745345/4375790026504 0 RP/0/RSP1/CPU0:513E.B.31.ASR9K-V2-2#show policy-map interface tenGigE 0/0/0/1 output | in Matched Tue Feb 14 12:24:01.514 UTC Matched : 1342020905/88573379730 5 Matched : 0/0 0 Matched : 0/0 0 Matched : 0/0 0 Matched : 0/0 0 Matched : 0/0 0 Matched : 54037745345/4375790026504 0 计算 show policy-map 的输出：\n(88573379730-88573369170)/(1342020905-1342020745)=66 Bytes\n即 show policy-map 显示的计数为 L2 frame 并且包含 4 字节对 FCS。\n关于端口速率 # 正是因为 show interface 的输出显示的 L2 frame size，而 L1 size 会比 L2 size 多 20 字节，这样就会导致我们看接口的 rate 往往跑不满实际的接口带宽，这个 rate 会因为以太网帧的大小而进行浮动，以太网帧越小，show interface 端口速率显示就越少（L1 速率保持一致的情况下）。\n以下是以相同的 L1 速率 10Gbps 向 ASR9K 的 TenG 接口打流，不同 frame size 大小 show interface rate 的显示:\n1400 字节 frame # Protocol:General Interface In(bps) Out(bps) InBytes/Delta OutBytes/Delta Te0/0/0/0 9.8G/ 98% 0/ 0% 1.3T/0 22780/0 Te0/0/0/1 0/ 0% 9.8G/ 98% 127.2G/0 1.1T/0 Quit=\u0026#39;q\u0026#39;, Clear=\u0026#39;c\u0026#39;, Freeze=\u0026#39;f\u0026#39;, Thaw=\u0026#39;t\u0026#39;, Next set=\u0026#39;n\u0026#39;, Prev set=\u0026#39;p\u0026#39;, Bytes=\u0026#39;y\u0026#39;, Packets=\u0026#39;k\u0026#39; (General=\u0026#39;g\u0026#39;, IPv4 Uni=\u0026#39;4u\u0026#39;, IPv4 Multi=\u0026#39;4m\u0026#39;, IPv6 Uni=\u0026#39;6u\u0026#39;, IPv6 Multi=\u0026#39;6m\u0026#39;) RP/0/RSP1/CPU0:513E.B.31.ASR9K-V2-2# RP/0/RSP1/CPU0:513E.B.31.ASR9K-V2-2# RP/0/RSP1/CPU0:513E.B.31.ASR9K-V2-2# RP/0/RSP1/CPU0:513E.B.31.ASR9K-V2-2#show int tenGigE 0/0/0/1 | in rate Tue Feb 14 09:10:07.706 UTC 30 second input rate 0 bits/sec, 0 packets/sec 30 second output rate 9830632000 bits/sec, 880250 packets/sec RP/0/RSP1/CPU0:513E.B.31.ASR9K-V2-2# 66 字节 frame # RP/0/RSP1/CPU0:513E.B.31.ASR9K-V2-2#show int tenGigE 0/0/0/1 | in rate Tue Feb 14 09:21:45.425 UTC 30 second input rate 0 bits/sec, 0 packets/sec 30 second output rate 7209227000 bits/sec, 14534730 packets/sec RP/0/RSP1/CPU0:513E.B.31.ASR9K-V2-2# RP/0/RSP1/CPU0:513E.B.31.ASR9K-V2-2# RP/0/RSP1/CPU0:513E.B.31.ASR9K-V2-2#monitor int tenGigE 0/0/0/0 tenGigE 0/0/0/1 Tue Feb 14 09:22:18.975 UTC 513E.B.31.ASR9K Monitor Time: 00:00:02 SysUptime: 15:52:49 Protocol:General Interface In(bps) Out(bps) InBytes/Delta OutBytes/Delta Te0/0/0/0 7.2G/ 72% 0/ 0% 2.0T/1.8G 22780/0 Te0/0/0/1 0/ 0% 7.2G/ 72% 0/0 99.7G/1.8G Quit=\u0026#39;q\u0026#39;, Clear=\u0026#39;c\u0026#39;, Freeze=\u0026#39;f\u0026#39;, Thaw=\u0026#39;t\u0026#39;, Next set=\u0026#39;n\u0026#39;, Prev set=\u0026#39;p\u0026#39;, Bytes=\u0026#39;y\u0026#39;, Packets=\u0026#39;k\u0026#39; (General=\u0026#39;g\u0026#39;, IPv4 Uni=\u0026#39;4u\u0026#39;, IPv4 Multi=\u0026#39;4m\u0026#39;, IPv6 Uni=\u0026#39;6u\u0026#39;, IPv6 Multi=\u0026#39;6m\u0026#39;) ifHCInOctets 和 IfHCOutOctets # 这里补充一点，ifHCInOctets 和 IfHCOutOctets SNMP 采集到的计数也是 L2 frame size ，但是包含 FCS。\nNCS55 QoS # 前端时间遇到个 NCS55 Qos 的问题， 借用同事的测试环境简单测试下发现:\nNCS55 入向 policy 用的是 l2 frame size\nNCS55 出向 shaping 用的是 l1 frame size\n如下测试， 测试仪打 700M L1 rate，入向 Ten0/0/0/16 我设置的是 police 600m 然后 700m 的 l1 流量不丢。\n出向 Gi0/0/0/0 设置的是 shape 600m，出现丢包了。\nRP/0/RP0/CPU0:F340.13.15-NCS-540X-12Z16G-626B#show policy-map interface gigabitEthernet 0/0/0/0 output Wed Jan 17 03:00:05.610 UTC GigabitEthernet0/0/0/0 output: test-out Class class-default Classification statistics (packets/bytes) (rate - kbps) Matched : 1145312053/146599942784 605404 Transmitted : 1046153656/133907667968 547219 Total Dropped : 99158397/12692274816 58185 Queueing statistics Queue ID : 1024 Taildropped(packets/bytes) : 99158397/12692274816 Policy Bag Stats time: 1705460386809 [Local Time: 01/17/24 02:59:46.809] RP/0/RP0/CPU0:F340.13.15-NCS-540X-12Z16G-626B#show policy-map interface tenGigE 0/0/0/16 input Wed Jan 17 03:00:15.729 UTC TenGigE0/0/0/16 input: test-in Class class-default Classification statistics (packets/bytes) (rate - kbps) Matched : 233250825/29856105600 605399 Transmitted : 233250825/29856105600 605399 Total Dropped : 0/0 0 Policing statistics (packets/bytes) (rate - kbps) Policed(conform) : 233250825/29856105600 605399 Policed(exceed) : 0/0 0 Policed(violate) : 0/0 0 Policed and dropped : 0/0 Policy Bag Stats time: 1705460386796 [Local Time: 01/17/24 02:59:46.796] NCS55 的 qos 配置可以自定义帧头的大小， 如下设定 20 字节（设置为 20 字节的原因为 L1 Size = L2 frame Size + IFG min + Preamble + SFD = L2 frame Size + 20 Bytes)， 这样我们就可以将出向的 shaping 转换为 l2 frame。\nservice-policy output test-out account user-defined 20 参考 # Spirent TestCenter: How do I calculate Layer 1 and Layer 2 bits per second and verify with the reported results?\nEthernet frame(wiki)\n","date":"14 February 2023","externalUrl":null,"permalink":"/blog/show-interface-show-policy-map/","section":"Blog","summary":"comments by \u0026lsquo;zhihua\u0026rsquo;","title":"关于iox上“show interface”和“show policy -map”计数的一些解释","type":"blog"},{"content":" 2017.12-2019.05 ThinkPad X1 Carbon 4th Gen\n2019.05-2022.11 ThinkPad X1 Carbon 6th Gen\n2022.11-Now MacBook Pro 16 2019\n软件包管理软件 # Homebrew是 MacOS 上的软件包管理工具，是 setup 一台新 MAC 首要需要设置的，安装方式也很简单，使用以下命令或者参考官网。\n/bin/bash -c \u0026#34;$(curl -fsSL \u0026lt;https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh\u0026gt;)\u0026#34; 后续我们需要安装的软件绝大部分可以通过brew命令快速安装，而不需要访问app store或者软件官网下载。\n如下：\n~ ❯ brew install wget ~ ❯ brew -h Example usage: brew search TEXT|/REGEX/ brew info [FORMULA|CASK...] brew install FORMULA|CASK... brew update brew upgrade [FORMULA|CASK...] brew uninstall FORMULA|CASK... brew list [FORMULA|CASK...] Troubleshooting: brew config brew doctor brew install --verbose --debug FORMULA|CASK Contributing: brew create URL [--no-fetch] brew edit [FORMULA|CASK...] Further help: brew commands brew help [COMMAND] man brew \u0026lt;https://docs.brew.sh\u0026gt; 免费 # iTerm2 # 我使用 iTerm2 去取代 MacOS 自带的 terminal，安装命令brew install --cask iterm2\nstats # MAC 上用来监控 CPU/RAW/SSD 等系统状态的工具，免费。安装命令brew install --cask stats\nkeyboardholder # 有很多的软件，例如 terminal/CRT/Pycharm 等，我们都是使用英文输入；使用 keyboardholder 可以实现我们打开这些软件输入法自动切换为英文输入，省得我们还要切换输入法，安装命令brew install --cask keyboardholder\n另外 Mac 上切换输入法需要按两个键 Ctrl+Space，本来打算使用软件实现一个按键到 Ctrl+Space 的映射，但在设置的时候突然发现系统设置就可以实现，如下，使用 Caps lock 键切换输入法。\nbeyond-compare # beyond-compare 是其实是一款付费软件，但是最近使用下来，不去购买也可以正常使用，所以先归位免费类。该软件是用来做文本比较，安装命令brew install --cask beyond-compare\nDozer # 隐藏菜单栏图标，让您的 Mac 看起来更干净， 安装命令brew install --cask dozer\nneteasemusic # 网易云，有些小众的音乐 Apple Music 没有收录，所以网易云还是我主力听歌软件。安装命令brew install --cask neteasemusic\nthe-unarchiver # 解压缩软件，mac 不安装解压缩软件可以解压缩绝大多数的文件，但是有些格式还是需要额外的软件支持，例如rar， 安装命令brew install --cask the-unarchiver\ndrawio # 画图软件，用来画一些流程图。安装命令brew install --cask drawio\npostman # 用来做一些 API 测试。安装命令brew install --cask postman\nvideofusion（剪映） # 视频剪辑工具，安装命令brew install --cask videofusion\nmonitorcontrol # 用来快速调整外接显示器亮度的一款软件，安装命令brew install --cask monitorcontrol\npycharm-ce # Python IDE，安装命令brew install --cask pycharm-ce\nNerd Fonts # 安装命令brew tap homebrew/cask-fonts \u0026amp;\u0026amp; brew install --cask font-sauce-code-pro-nerd-font\nNerd Fonts 提供很多流行的字体和 icons，这里我安装的 SouceCodePro。\n配置 iTerm2 并结合Exa，你就有了如下好看的 terminal 输出。\nRectangle # 使用键盘快捷键或捕捉区域移动和调整窗口大小，特别是快捷键调整窗口特别好用；记住几个常用的快捷键可以大大的帮助你提高效率。安装命令brew install --cask rectangle\nDropshelf # 简化和改进 Mac 上的拖放操作，并加快您的日常工作流程。MAC 上没有剪切文件的快捷键，你可以将需要移动的文件移动到 Dropshelf 窗口中，再从 Dropshelf 中拖到你需要剪切的目标位置。这个软件目前只能到官网下载安装。\nBBEdit # 文本编辑器，这款其实是个收费软件，但是不激活也够使用，所以暂时作为免费软件。安装命令brew install --cask bbedit\nklogg # 查看 log 到软件，同 Win 上的 Notpad++类似， 安装命令brew install --cask klogg\nScreen Recorder by Omi # MAC 上的录屏软件，从 app store 下载。\nNotion # 笔记软件， 安装命令brew install --cask notion\nOffice 365 全家桶 # Microsoft Remote Desktop # 远程桌面软件，安装命令brew install --cask microsoft-remote-desktop\n这款软件只在外区的 app store 上架了， 如果不使用 brew 安装，就只能注册外区的 apple id 去下载。\nFileZilla # 图形化的 ftp/sftp client\nScroll-Reverser # 如何在 macOS 上为鼠标和触控板设置不同的滚动方向。安装命令“brew install \u0026ndash;cask scroll-reverser”\nNetNewsWire # RSS\n付费 # manico # 快速打开/切换 APP，安装命令brew install --cask manico\n这款应用的好处在于可以为你经常使用的 app 自定义快捷键，用于打开/切换。属于妥妥的效率神器。\n价格不贵，可以激活三台设备。\nPasteNow # 剪贴板工具，可以记录历史剪贴板内容，还可以搜索/置顶等。\nOne Switch # 集成了一些快速设置的按钮。\n","date":"8 January 2023","externalUrl":null,"permalink":"/blog/mac-software/","section":"Blog","summary":"2017.","title":"MAC  常用软件","type":"blog"},{"content":" 什么是 ZTP # Zero Touch Provisioning (ZTP) 是一项能够在几分钟内无需任何人工干预部署数千个网络设备的功能。\nZTP 存在两种不同的操作：\n下载应用配置到网络设备 下载并执行一个 shell/python 脚本，shell/python 脚本中再包含配置的下载，软件版本检查，升级等操作。 要拥有一个有效的 ZTP 环境，DHCP 和 Web 服务器是必须的。\n在 ZTP 期间，DHCP 服务器提供引导文件名的路径。路由器下载此文件，如果下载的文件内容以 !! IOS XR ，它被认为是一个配置文件，ZTP 对配置文件执行“apply_config”操作。如果下载的文件内容以#! /bin/bash, #! /bin/sh 或 #!/usr/bin/python 它被视为脚本文件，ZTP 执行该脚本。\nZTP Work Flow # ZTP 工作流程如下:\nXR Router 初始化 ZTP,发送 DHCP 请求 DHCP server 返回配置文件或者脚本文件 路由器请求并下载脚本文件或者配置文件 路由器根据脚本文件下载镜像或者 commit 下载的配置文件. 以下流程图仅供参考.\n具体的路由器 ZTP 流程的脚本可以通过以下方式找到:\nRP/0/RSP0/CPU0:ios#describe ztp initiate Spawn the process: ztp -i RP/0/RSP0/CPU0:ios#run Thu Oct 20 19:22:27.500 UTC [xr-vm_node0_RSP0_CPU0:~]$whereis ztp ztp: /pkg/bin/ztp /pkg/bin/ztp.sh [xr-vm_node0_RSP0_CPU0:~]$ cat /pkg/bin/ztp.sh 如何初始化 ZTP # ZTP 在路由器启动时自动在 IOS XR 设备上启动，前提是没有初始配置的用户名。如果检测到配置的用户名，则停止 ZTP 进程。\n(Note: 这一点我没有进行测试，可以尝试清一下配置，执行命令重启一下设备，hw-module location all bootmedia network reload) 或者使用命令， \u0026ldquo;ztp initiate \u0026quot;\n“ztp initiate management dhcp4” will only try ztp under management interface.\n“ztp initiate” will try ztp under management interface first , if management ztp process failed , will try it under data interface. Web Server / DHCP Server Setup # Web Server 服务可以直接使用 Python 快速起一个命令\u0026quot;python -m http.server \u0026ldquo;.\nDHCP Server 可以参考我之前的Centos Setup DHCP的步骤。\nDHCP Server 相关配置 # (Note: 最近只测试了使用 ZTP 加载配置文件，加载脚本进行版本升级目前没机会测试，后续如果有机会再补充)\nDHCP 根据设备管理口 MAC 地址返回配置文件 [root@localhost ~]# grep -v ^$ /etc/dhcp/dhcpd.conf option domain-name \u0026#34;cisco.com\u0026#34;; option domain-name-servers 8.8.8.8, 114.114.114.114; default-lease-time 600; max-lease-time 7200; log-facility local7; subnet 10.124.36.0 netmask 255.255.255.0 { option routers 10.124.36.1; range 10.124.36.201 10.124.36.205; } host xrv9k-1-mgmt { hardware ethernet 00:50:56:bd:28:45; filename http://10.124.36.199:3333/043A70E8330.config; fixed-address 10.124.36.206; option routers 10.124.36.1; } DHCP 根据设备发送的 DHCP 请求报文中 SN 信息，返回以 SN 命名的配置文件。 [root@localhost ~]# grep -v ^# /etc/dhcp/dhcpd.conf | grep -v ^$ option domain-name \u0026#34;cisco.com\u0026#34;; option domain-name-servers 8.8.8.8, 114.114.114.114; option space cisco-vendor-id-vendor-class code width 1 length width 1; option vendor-class.cisco-vendor-id-vendor-class code 9 = {string}; default-lease-time 600; max-lease-time 7200; log-facility local7; shared-network 10-124-36-0 { subnet 10.124.36.0 netmask 255.255.255.0 { option routers 10.124.36.1; option subnet-mask 255.255.255.0; } pool { range 10.124.36.207 10.124.36.208; if exists user-class and option user-class = \u0026#34;xr-config\u0026#34; { filename = concat(“http://10.124.36.199:3333/”, substring(option vendor-class.cisco-vendor-id-vendor-class,3,11), \u0026#34;.config\u0026#34;); } } } 操作日志及抓包 # 路由器日志 # RP/0/RP0/CPU0:changeme(config)# RP/0/RP0/CPU0:changeme(config)#commit replace Mon Oct 24 02:40:36.085 UTC This commit will replace or remove the entire running configuration. This operation can be service affecting. Do you wish to proceed? [no]: yes RP/0/RP0/CPU0:ios(config)#end RP/0/RP0/CPU0:ios#ztp initiate management dhcp4 dhcp4 dhcp4-client-identifier RP/0/RP0/CPU0:ios#ztp initiate management dhcp4 Mon Oct 24 02:41:30.733 UTC Inititaing ZTP may change your configuration. Interfaces might be brought up if they are in shutdown state Would you like to proceed? [no]: yes ZTP will now run in the background. Please use \u0026#34;show logging\u0026#34; or look at /var/log/ztp.log to check progress. RP/0/RP0/CPU0:ios# !!!!! show log RP/0/RP0/CPU0:Oct 24 02:40:41.641 UTC: config[69554]: %MGBL-CONFIG-6-DB_COMMIT : Configuration committed by user \u0026#39;cisco\u0026#39;. Use \u0026#39;show configuration commit changes 1000000061\u0026#39; to view the changes. RP/0/RP0/CPU0:Oct 24 02:41:19.308 UTC: config[69554]: %MGBL-SYS-5-CONFIG_I : Configured from console by cisco RP/0/RP0/CPU0:Oct 24 02:41:34.237 UTC: pyztp2[388]: %INFRA-ZTP-6-START : ZTP has started. Interfaces might be brought up if they are shutdown RP/0/RP0/CPU0:Oct 24 02:41:42.331 UTC: pyztp2[388]: %INFRA-ZTP-6-DISCOVERY_COMPLETED : Discovery successful on MgmtDhcp4Fetcher. Will proceed with fetching. RP/0/RP0/CPU0:Oct 24 02:41:48.049 UTC: config[66456]: %MGBL-CONFIG-6-DB_COMMIT : Configuration committed by user \u0026#39;ZTP\u0026#39;. Use \u0026#39;show configuration commit changes 1000000062\u0026#39; to view the changes. RP/0/RP0/CPU0:Oct 24 02:41:49.344 UTC: pyztp2[388]: %INFRA-ZTP-6-FETCHING_COMPLETED : Provisioning file fetched successfully 0/RP0/ADMIN0:Oct 24 02:41:52.278 UTC: aaad[3141]: %MGBL-AAAD-7-DEBUG : Not allowing to sync from XR VM to Admin VM after first user creation. RP/0/RP0/CPU0:Oct 24 02:41:54.351 UTC: config[67157]: %MGBL-CONFIG-6-DB_COMMIT : Configuration committed by user \u0026#39;ZTP\u0026#39;. Use \u0026#39;show configuration commit changes 1000000063\u0026#39; to view the changes. 0/RP0/ADMIN0:Oct 24 02:41:56.950 UTC: aaad[3141]: %MGBL-AAAD-7-DEBUG : Request for deleting user ztp-user 0/RP0/ADMIN0:Oct 24 02:42:01.531 UTC: aaad[3141]: %MGBL-AAAD-7-DEBUG : Not allowing to sync from XR VM to Admin VM after first user creation. RP/0/RP0/CPU0:Oct 24 02:42:04.122 UTC: config[67377]: %MGBL-CONFIG-6-DB_COMMIT : Configuration committed by user \u0026#39;ZTP\u0026#39;. Use \u0026#39;show configuration commit changes 1000000064\u0026#39; to view the changes. RP/0/RP0/CPU0:Oct 24 02:42:09.811 UTC: pyztp2[388]: %INFRA-ZTP-6-PROVISIONING_COMPLETED : Provisioning successful !!!!!!show ztp log 2022-10-24 02:41:33,693 (624) [DEBU] : Informing sysmgr proc ready 2022-10-24 02:41:33,794 (624) [INFO] : ZTP process role is Primary 2022-10-24 02:41:33,860 (624) [DEBU] : Failed to read PID using platform API. Error: \u0026#39;Subsystem(0)\u0026#39; detected the \u0026#39;fatal\u0026#39; condition \u0026#39;Code(0)\u0026#39; 2022-10-24 02:41:34,003 (624) [DEBU] : Platform Information: {\u0026#34;Chassis Serial\u0026#34;: \u0026#34;2A82C33442A\u0026#34;, \u0026#34;RP Serial\u0026#34;: \u0026#34;FEDA02D0DAE\u0026#34;, \u0026#34;Product ID\u0026#34;: \u0026#34;R-IOSXRV9000-CC\u0026#34;, \u0026#34;Simulation\u0026#34;: false} 2022-10-24 02:41:34,221 (624) [DEBU] : Standy RP does not exist, or has not come up yet 2022-10-24 02:41:34,221 (624) [INFO] : ZTP version 3.1.1 2022-10-24 02:41:34,221 (624) [DEBU] : Command line options passed Namespace(apply=None, clean=None, dataport=False, debug=False, dhclient6ID=None, dhclientID=None, dhcp4=True, dhcp6=False, disable=None, dscp4=None, dscp6=None, enable=None, hostname=None, interface=None, management=True, manual=True, secure=None, sync=None, usb=False, verbose=False, ztp_mode=None) 2022-10-24 02:41:34,236 (624) [DEBU] : ZTP Enabled: True 2022-10-24 02:41:34,237 (624) [DEBU] : Retry forever Enabled: True 2022-10-24 02:41:34,237 (624) [DEBU] : Breakout Enabled: False 2022-10-24 02:41:34,237 (624) [DEBU] : Username check Enabled: True 2022-10-24 02:41:34,237 (624) [INFO] : ZTP Process ID: 624, Process group ID: 624 2022-10-24 02:41:34,237 (624) [DEBU] : Failed to read PID using platform API. Error: \u0026#39;Subsystem(0)\u0026#39; detected the \u0026#39;fatal\u0026#39; condition \u0026#39;Code(0)\u0026#39; 2022-10-24 02:41:34,276 (624) [DEBU] : Platform Information: {\u0026#34;Chassis Serial\u0026#34;: \u0026#34;2A82C33442A\u0026#34;, \u0026#34;RP Serial\u0026#34;: \u0026#34;FEDA02D0DAE\u0026#34;, \u0026#34;Product ID\u0026#34;: \u0026#34;R-IOSXRV9000-CC\u0026#34;, \u0026#34;Simulation\u0026#34;: false} 2022-10-24 02:41:34,397 (624) [DEBU] : Standy RP does not exist, or has not come up yet 2022-10-24 02:41:34,397 (624) [INFO] : \u0026lt;Env\u0026gt;: Fetcher priority {0: \u0026#39;mgmt4\u0026#39;} 2022-10-24 02:41:34,398 (624) [INFO] : Secure ZTP not supported: secure-ztp-not-supported-in-swtam : Hardware not supported for Secure ZTP 2022-10-24 02:41:34,399 (624) [DEBU] : Executing: /pkg/bin/xr_cli -n \u0026#34;show configuration commit list\u0026#34; 2022-10-24 02:41:34,638 (624) [DEBU] : Executing: source /pkg/bin/ztp_helper.sh \u0026amp;\u0026amp; echo -ne | xrcmd \u0026#34;show running-config\u0026#34; (XR Network NS ) Mon Oct 24 02:41:34 UTC 2022: (pid 709) (/pkg/bin/ztp_exec.sh) : Running user cmd: [show running-config] !! IOS XR Configuration 7.4.1 !! Last configuration change at Mon Oct 24 02:40:37 2022 by cisco ! end 2022-10-24 02:41:35,102 (624) [DEBU] : Last commit id 1000000061 2022-10-24 02:41:35,390 (624) [DEBU] : Configured dhclient 2022-10-24 02:41:35,427 (624) [DEBU] : Setting ZTP active tuple 2022-10-24 02:41:35,427 (624) [DEBU] : Writing to file /tmp/ztp2-vbrb5qrb/sysdb_set_tuple.tmp 2022-10-24 02:41:35,576 (624) [INFO] : ZAdmin, current state:idle 2022-10-24 02:41:35,576 (624) [INFO] : ZAdmin, current state:idle: state changed to idle 2022-10-24 02:41:35,576 (624) [DEBU] : ZAdmin, current state:idle: starting event loop 2022-10-24 02:41:35,676 (624) [DEBU] : ZAdmin, current state:idle. Processing work: [privileged] start an engine. done = False 2022-10-24 02:41:35,676 (624) [INFO] : ZAdmin, current state:active: state changed to active 2022-10-24 02:41:35,677 (624) [INFO] : Attempt: 1 2022-10-24 02:41:35,777 (624) [DEBU] : ZAdmin, current state:active. Processing work: epoch work. done = False 2022-10-24 02:41:35,777 (624) [DEBU] : Current epoch attempt: 1. Reset: True. 2022-10-24 02:41:35,777 (624) [DEBU] : Starting fetcher in 2 seconds 2022-10-24 02:41:35,777 (624) [INFO] : ZTP is initiated manually. Will not check for username config 2022-10-24 02:41:35,777 (624) [DEBU] : ZAdmin, current state:active. Processing work: [privileged] getting engine status. done = False 2022-10-24 02:41:35,878 (624) [DEBU] : ZAdmin, current state:active. Processing work: [privileged] getting engine status. done = False 2022-10-24 02:41:37,789 (624) [DEBU] : ZAdmin, current state:active. Processing work: Start fetcher work for ZAdmin. done = False 2022-10-24 02:41:37,789 (624) [INFO] : ZAdmin, current state:active: state tag changed to discover 2022-10-24 02:41:37,790 (624) [INFO] : MgmtDhcp4Fetcher, current state:idle 2022-10-24 02:41:37,790 (624) [INFO] : MgmtDhcp4Fetcher, current state:idle: state changed to idle 2022-10-24 02:41:37,790 (624) [DEBU] : MgmtDhcp4Fetcher, current state:idle: starting event loop 2022-10-24 02:41:37,791 (624) [INFO] : MgmtDhcp4Fetcher fetcher created. 2022-10-24 02:41:37,891 (624) [DEBU] : MgmtDhcp4Fetcher, current state:idle. Processing work: [privileged] start an engine. done = False 2022-10-24 02:41:37,891 (624) [INFO] : MgmtDhcp4Fetcher, current state:active: state changed to active 2022-10-24 02:41:37,892 (624) [DEBU] : ZAdmin, current state:active. Processing work: Monitor fetcher work for ZAdmin. done = False 2022-10-24 02:41:37,992 (624) [DEBU] : MgmtDhcp4Fetcher, current state:active. Processing work: epoch work. done = False 2022-10-24 02:41:37,992 (624) [DEBU] : MgmtDhcp4Fetcher, current state:active. Processing work: [privileged] getting engine status. done = False 2022-10-24 02:41:37,992 (624) [DEBU] : MgmtDhcp4Fetcher, current state:active. Processing work: Bringing up interfaces before next retry. done = False 2022-10-24 02:41:37,993 (624) [DEBU] : \u0026lt;Port count=1\u0026gt;: bringing interface(s) up \u0026#34;eth0\u0026#34; 2022-10-24 02:41:38,216 (624) [DEBU] : Saving 1 interfaces to /disk0:/ztp/xr_config/interface_list 2022-10-24 02:41:38,216 (624) [DEBU] : MgmtDhcp4Fetcher, current state:active. Processing work: Filtering up interfaces for MgmtDhcp4Fetcher. done = False 2022-10-24 02:41:38,216 (624) [DEBU] : \u0026lt;Port count=1\u0026gt;: Interface(s) before filtering down\u0026#34;eth0\u0026#34; 2022-10-24 02:41:38,216 (624) [DEBU] : Filtering interfaces 2022-10-24 02:41:38,245 (624) [DEBU] : Cmd: ip netns exec xrnns ifconfig eth0 Output: eth0 Link encap:Ethernet HWaddr 00:50:56:bd:28:45 inet6 addr: fe80::250:56ff:febd:2845/64 Scope:Link UP BROADCAST RUNNING MULTICAST MTU:1514 Metric:1 RX packets:8067596 errors:0 dropped:0 overruns:0 frame:0 TX packets:56432 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:1000 RX bytes:627258187 (598.2 MiB) TX bytes:20701740 (19.7 MiB) Interrupt:18 Memory:fd5a0000-fd5c0000 2022-10-24 02:41:38,276 (624) [DEBU] : Cmd: ip netns exec xrnns cat /sys/class/net/eth0/operstate Interface state: up 2022-10-24 02:41:38,276 (624) [INFO] : Final interface list: eth0 2022-10-24 02:41:38,276 (624) [DEBU] : Down interface list: 2022-10-24 02:41:38,276 (624) [DEBU] : \u0026lt;Port count=1\u0026gt;: Filtered down interface(s) \u0026#34;eth0\u0026#34; 2022-10-24 02:41:38,276 (624) [DEBU] : MgmtDhcp4Fetcher, current state:active. Processing work: Start Dhclient for MgmtDhcp4Fetcher. done = False 2022-10-24 02:41:38,280 (624) [DEBU] : \u0026lt;Dhclient count=1\u0026gt;: started dhclient using \u0026#34;ip netns exec xrnns /sbin/dhclient -4 -cf /etc/dhcp/dhclient.conf.ztp -lf /var/lib/dhcp/dhclient.leases.ztp -sf /etc/dhcp/dhclient-script.ztp2 eth0\u0026#34; (XR Network NS ) Mon Oct 24 02:41:38 UTC 2022: (pid 807) (/etc/dhcp/dhclient-script.ztp2) : Secure redirect not found in the DHCP response. 2022-10-24 02:41:39,000 (624) [DEBU] : ZAdmin, current state:active. Processing work: Monitor fetcher work for ZAdmin. done = False 2022-10-24 02:41:39,082 (624) [DEBU] : MgmtDhcp4Fetcher, current state:active. Processing work: [privileged] getting engine status. done = False 2022-10-24 02:41:40,084 (624) [DEBU] : ZAdmin, current state:active. Processing work: Monitor fetcher work for ZAdmin. done = False 2022-10-24 02:41:40,184 (624) [DEBU] : MgmtDhcp4Fetcher, current state:active. Processing work: [privileged] getting engine status. done = False 2022-10-24 02:41:40,885 (624) [DEBU] : ZAdmin, current state:active. Processing work: [privileged] getting engine status. done = False 2022-10-24 02:41:41,186 (624) [DEBU] : ZAdmin, current state:active. Processing work: Monitor fetcher work for ZAdmin. done = False 2022-10-24 02:41:41,286 (624) [DEBU] : MgmtDhcp4Fetcher, current state:active. Processing work: [privileged] getting engine status. done = False 2022-10-24 02:41:41,286 (624) [DEBU] : MgmtDhcp4Fetcher, current state:active. Processing work: Monitor dhclient for MgmtDhcp4Fetcher on interface [\u0026#39;eth0\u0026#39;]. done = False 2022-10-24 02:41:41,286 (624) [DEBU] : Received DHCP4 response 2022-10-24 02:41:41,286 (624) [INFO] : (dhclient env) new_domain_name=cisco.com 2022-10-24 02:41:41,286 (624) [INFO] : (dhclient env) new_ip_address=10.124.36.206 2022-10-24 02:41:41,286 (624) [INFO] : (dhclient env) reason=BOUND 2022-10-24 02:41:41,286 (624) [INFO] : (dhclient env) new_domain_name_servers=8.8.8.8 114.114.114.114 2022-10-24 02:41:41,287 (624) [INFO] : (dhclient env) new_routers=10.124.36.1 2022-10-24 02:41:41,287 (624) [INFO] : (dhclient env) interface=eth0 2022-10-24 02:41:41,287 (624) [INFO] : (dhclient env) new_broadcast_address=10.124.36.255 2022-10-24 02:41:41,287 (624) [INFO] : (dhclient env) new_subnet_mask=255.255.255.0 2022-10-24 02:41:41,287 (624) [INFO] : (dhclient env) new_dhcp_server_identifier=10.124.36.199 2022-10-24 02:41:41,287 (624) [INFO] : (dhclient env) new_network_number=10.124.36.0 2022-10-24 02:41:41,287 (624) [INFO] : (dhclient env) new_filename=http://10.124.36.199:3333/043A70E8330.config 2022-10-24 02:41:41,287 (624) [INFO] : MgmtDhcp4Fetcher, current state:active, exit code:success 2022-10-24 02:41:41,309 (624) [DEBU] : Dhclient processes: root 816 0.0 0.1 31100 7308 ? Ss 03:09 0:00 /sbin/dhclient -4 -cf /etc/dhcp/dhclient.conf.ztp -lf /var/lib/dhcp/dhclient.leases.ztp -sf /etc/dhcp/dhclient-script.ztp2 eth0 root 817 0.0 0.0 20324 1592 ? S 03:09 0:00 /bin/sh -c ps aux | grep dhclient root 819 0.0 0.0 16248 948 ? Sl 03:09 0:00 grep dhclient root 23399 0.0 0.1 96636 7868 ? Ss Oct21 0:02 /sbin/dhclient -4 -cf /etc/dhcp/dhclient.conf.ztp -lf /var/lib/dhcp/dhclient.leases.ztp -sf /etc/dhcp/dhclient-script.ztp2 eth0 root 25117 0.0 0.1 31100 7856 ? Ss Oct21 0:02 /sbin/dhclient -4 -cf /etc/dhcp/dhclient.conf.ztp -lf /var/lib/dhcp/dhclient.leases.ztp -sf /etc/dhcp/dhclient-script.ztp2 eth0 2022-10-24 02:41:41,309 (624) [DEBU] : \u0026lt;Dhclient count=1\u0026gt;: dhclient 4 is stopped: keepIpAddress=True 2022-10-24 02:41:41,310 (624) [INFO] : MgmtDhcp4Fetcher, current state:final, exit code:success: state changed to final 2022-10-24 02:41:42,289 (624) [DEBU] : ZAdmin, current state:active. Processing work: Monitor fetcher work for ZAdmin. done = False 2022-10-24 02:41:42,311 (624) [DEBU] : MgmtDhcp4Fetcher, current state:final, exit code:success. Processing work: [privileged] getting engine status. done = False 2022-10-24 02:41:42,411 (624) [DEBU] : MgmtDhcp4Fetcher, current state:final, exit code:success. Processing work: [privileged] prepare engine shutdown. done = False 2022-10-24 02:41:42,512 (624) [DEBU] : MgmtDhcp4Fetcher, current state:final, exit code:success. Processing work: [privileged] shutting down MgmtDhcp4Fetcher engine. done = False 2022-10-24 02:41:42,512 (624) [INFO] : MgmtDhcp4Fetcher, current state:final, exit code:shutdown 2022-10-24 02:41:42,512 (624) [INFO] : MgmtDhcp4Fetcher, exit code:shutdown: state changed to None 2022-10-24 02:41:42,512 (624) [DEBU] : MgmtDhcp4Fetcher, exit code:shutdown: breaking engine loop after shutdown 2022-10-24 02:41:42,512 (624) [DEBU] : MgmtDhcp4Fetcher, exit code:shutdown: end of event loop 2022-10-24 02:41:42,512 (624) [DEBU] : ZAdmin, current state:active. Processing work: Setup fetching. done = False 2022-10-24 02:41:42,513 (624) [DEBU] : No authentication required for Mgmt Interface 2022-10-24 02:41:42,513 (624) [DEBU] : No authentication required when initiated using CLI 2022-10-24 02:41:42,514 (624) [DEBU] : Writing to file /tmp/ztp2-kxggoel7/sysdb_cfg_cmd.tmp 2022-10-24 02:41:42,581 (624) [DEBU] : No inconsistency found in config 2022-10-24 02:41:43,935 (624) [DEBU] : Applying TPA default route 2022-10-24 02:41:43,993 (624) [DEBU] : No IPv4 Address assigned to linux management interface 2022-10-24 02:41:43,993 (624) [DEBU] : Applying IPv4 configuration 2022-10-24 02:41:43,993 (624) [DEBU] : Validating IP Address: 10.124.36.206 2022-10-24 02:41:43,993 (624) [DEBU] : Applying IPv4 gateway route configuration 2022-10-24 02:41:43,993 (624) [DEBU] : Validating DHCP server identifier IP Address: 10.124.36.199 2022-10-24 02:41:43,994 (624) [DEBU] : Validating Gateway IP Address: 10.124.36.1 2022-10-24 02:41:43,994 (624) [DEBU] : Configuring domain name with domain-name-server 8.8.8.8 114.114.114.114 2022-10-24 02:41:43,995 (624) [DEBU] : Config file type is IOS XR config. Replace False 2022-10-24 02:41:43,995 (624) [DEBU] : Applying following config: tpa vrf default address-family ipv4 default-route mgmt address-family ipv6 default-route mgmt interface MgmtEth0/RP0/CPU0/0 no ipv4 address ipv4 address 10.124.36.206 255.255.255.0 no shutdown tpa vrf default address-family ipv4 default-route mgmt router static address-family ipv4 unicast 0.0.0.0/0 10.124.36.1 domain name cisco.com domain name-server 8.8.8.8 domain name-server 114.114.114.114 2022-10-24 02:41:43,995 (624) [DEBU] : Will apply the following: /disk0:/ztp/xr_config/config_snippet (XR Network NS ) Mon Oct 24 02:41:44 UTC 2022: (pid 888) (/pkg/bin/ztp_exec.sh) : Applying configuration (Apply DHCP configuration): (XR Network NS ) Mon Oct 24 02:41:44 UTC 2022: (pid 888) (/pkg/bin/ztp_exec.sh) : + (exec) /pkg/bin/config -p15 -X -f /disk0:/ztp/xr_config/config_snippet -u ZTP -L ZTP -c \u0026#34;Apply DHCP configuration\u0026#34; (XR Network NS ) Mon Oct 24 02:41:48 UTC 2022: (pid 888) (/pkg/bin/ztp_exec.sh) : Output of config apply cmd: Parsing. 422 bytes parsed in 1 sec (421)bytes/sec Committing. Prepared commit in 0 sec . 14 items committed in 2 sec (6)items/sec Updating. Updated Commit database in 1 sec (XR Network NS ) Mon Oct 24 02:41:48 UTC 2022: (pid 888) (/pkg/bin/ztp_exec.sh) : Applying (Apply DHCP configuration) configuration. Done. 2022-10-24 02:41:48,780 (624) [DEBU] : XR Network NS xrnns Interface config: 2022-10-24 02:41:48,795 (624) [DEBU] : eth0 Link encap:Ethernet HWaddr 00:50:56:bd:28:45 inet6 addr: fe80::250:56ff:febd:2845/64 Scope:Link UP BROADCAST RUNNING MULTICAST MTU:1514 Metric:1 RX packets:8067684 errors:0 dropped:0 overruns:0 frame:0 TX packets:56435 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:1000 RX bytes:627264775 (598.2 MiB) TX bytes:20702646 (19.7 MiB) Interrupt:18 Memory:fd5a0000-fd5c0000 eth-vf0 Link encap:Ethernet HWaddr 52:54:00:fe:b8:07 inet6 addr: fe80::5054:ff:fefe:b807/64 Scope:Link UP BROADCAST RUNNING MULTICAST MTU:9000 Metric:1 RX packets:26 errors:0 dropped:0 overruns:0 frame:0 TX packets:18 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:1000 RX bytes:2124 (2.0 KiB) TX bytes:1476 (1.4 KiB) ","date":"9 November 2022","externalUrl":null,"permalink":"/blog/simple-ztp-test-on-xr-router/","section":"Blog","summary":"什么是 ZTP # Zero Touch Provisioning (ZTP) 是一项能够在几分钟内无需任何人工干预部署数千个网络设备的功能。","title":"Simple ZTP Test on XR Router","type":"blog"},{"content":" Update/Upgrade Packet # !!!! important , must be done. rory@rory-22-04:~$ sudo apt update rory@rory-22-04:~$ sudo apt upgrade Modify Config to enable ipv6 support # /etc/ppp/options # !!!! add below under config file rory@rory-22-04:~$ grep ipv6 /etc/ppp/options +ipv6 ipv6cp-use-ipaddr /etc/sysctl.d/10-ipv6-privacy.conf # !!!! Make sure below config exsit under file rory@rory-22-04:~$ grep ipv6 /etc/sysctl.d/10-ipv6-privacy.conf net.ipv6.conf.all.use_tempaddr = 2 net.ipv6.conf.default.use_tempaddr = 2 /etc/sysctl.conf # rory@rory-22-04:~$ grep ipv6 /etc/sysctl.conf net.ipv6.conf.all.forwarding=1 net.ipv6.conf.ppp0.accept_ra=2 After take all above action, reboot your pc to make config take effect.\nrory@rory-22-04:~$ reboot Setup PPP # Step 1: Open NM connection editor # rory@rory-vm:~$ sudo nm-connection-editor Step 2: add pppoe type nm connection # Step 3: complete pppoe config(username/password) # PPPoE connet # ","date":"30 August 2022","externalUrl":null,"permalink":"/blog/ubuntu-22-04-pppoe-get-ipv6-address/","section":"Blog","summary":"Update/Upgrade Packet # !","title":"Ubuntu 22.04 PPPOE GET IPv6 address","type":"blog"},{"content":" IPv6 地址获得方式 # 手动配置: 手动配置 IPv6 地址/前缀即其他网络配置参数（DNS、NIS、SNTP 服务器地址等参数）。 无状态地址地址分配： 由接口 ID (MAC) 生成链路本地地址， 再根据路由通告报文 RA(Router Advertisement) 包含的前缀信息自动配置本机地址. 有状态自动地址分配: 即 DHCPv6 方式， DHCPv6 又分为如下两种： DHCPv6 有状态自动分配： DHCPv6 服务器自动分配 IPv6 地址/RD 前缀以及其他网络配置参数(DNS、NIS、SNTP 服务器地址等参数). DHCPv6 无状态自动分配: 主机 IPv6 地址仍然通过路由器通告方式自动生成，DHCPv6 服务器只分配除 IPv6 地址以外的配置参数，包括 DNS、NIS、SNTP 服务器地址等参数 如上， 路由器会周期的发送 RA， 用来发现与本链路相连的路由器， 并获取与地址自动配置相关的前缀或其它配置参数。\n有很多情况下，主机接入网络后会希望尽快获取前缀进行通信， 会立刻发送 RS 报文，路由器收到后会立刻回应 RA。\nRA(Router advertisement)报文置位情况:\nM-bit 置位: Client 收到 M-bit 置位的 RA 报文， 需要向 DHCPv6 Server 申请地址，DHCPv6 分配什么地址，client 就需要使用什么地址.\nO-bit 置位: 如果 O-bit 没有置位， 则不去 DHCP 申请选项信息；如果置位了，则需要向 DHCPv6 请求 DNS 等其他信息。\nM+O 为 DHCPv6 有状态自动配置， 单独 M 为 DHCPv6 无状态自动配置。\n需要注意的是:\n无论是无状态自动配置还是 DHCPv6 有或者无状态自动配置， ipv6 节点的 default gateway 地址都是 RA 通告得到的， 为通告 RA 信息的路由器的 link-local 地址。\nPPPoE - Stateful Autoconfiguration(DHCPv6)\n","date":"23 August 2022","externalUrl":null,"permalink":"/blog/bng-pppoe-stateful-autoconfigurationdhcpv6/","section":"Blog","summary":"IPv6 地址获得方式 # 手动配置: 手动配置 IPv6 地址/前缀即其他网络配置参数（DNS、NIS、SNTP 服务器地址等参数）。 无状态地址地址分配： 由接口 ID (MAC) 生成链路本地地址， 再根据路由通告报文 RA(Router Advertisement) 包含的前缀信息自动配置本机地址.","title":"BNG PPPoE - Stateful Autoconfiguration(DHCPv6)","type":"blog"},{"content":"","date":"16 August 2022","externalUrl":null,"permalink":"/tags/mvpn/","section":"Tags","summary":"","title":"Mvpn","type":"tags"},{"content":"最近测试了下 NCS55 上面的 MVPN，整理一下防止自己忘记了.\nNCS55 在 MVPN profile 上的支持不如 ASR9K 的种类多，具体哪些 profile 支持需要参考下 NCS55 的配置文档 NCS55 由于芯片的特殊性，有些计数器并不是默认打开的，需要一些特殊的配置，如本文的组播流量的统计上。 Profile 14，据说是 NCS55 上最受欢迎的 profile；这里使用如下的拓扑进行测试。\n拓扑 # 参考文章 # mVPN Profile 14 on NCS55xx - How to configure + verify control plane and data plane\nMulticast Configuration Guide for Cisco NCS 5500 Series Routers, IOS XR Release 7.4.x\nConfiguration # Header(NCS55A2-2 PE) # !!!!! Basic config, setup the mpls core. interface Bundle-Ether12001 mtu 9198 ipv4 address 12.0.0.2 255.255.255.0 load-interval 30 ! interface HundredGigE0/0/2/2 bundle id 12001 mode active load-interval 30 ! interface HundredGigE0/0/2/3 bundle id 12001 mode active load-interval 30 ! interface Loopback0 ipv4 address 2.2.2.2 255.255.255.255 ! router isis core is-type level-2-only net 49.1234.2222.2222.00 log adjacency changes address-family ipv4 unicast metric-style wide ! interface Bundle-Ether12001 point-to-point address-family ipv4 unicast ! ! interface Loopback0 passive address-family ipv4 unicast ! ! ! !!!!!! Conifg mvpn vrf vrf mvpn200 address-family ipv4 unicast import route-target 200:1 ! export route-target 200:1 ! ! ! !!!! enable mvpn address family between PE, enable ipv4 mvpn for vrf router bgp 100 nsr bgp router-id 2.2.2.2 bgp graceful-restart address-family vpnv4 unicast ! address-family ipv4 mvpn ! neighbor 1.1.1.1 remote-as 100 update-source Loopback0 address-family vpnv4 unicast ! address-family ipv4 mvpn ! ! vrf mvpn200 rd 200:20 address-family ipv4 unicast label mode per-prefix redistribute connected ! address-family ipv4 mvpn ! ! ! !!!!! create route-policy for rpf check purposes then apply under pim. route-policy mldp-partitioned-p2mp set core-tree mldp-partitioned-p2mp end-policy ! router pim vrf mvpn200 address-family ipv4 rpf topology route-policy mldp-partitioned-p2mp mdt c-multicast-routing bgp ! interface TenGigE0/0/0/0.200 enable ! ! ! ! !!!!!! enable partitioned mdt for the vrf and use bgp auto-discovery to discover the PE\u0026#39;s participating in the tree multicast-routing address-family ipv4 interface Loopback0 enable ! ! vrf mvpn200 address-family ipv4 mdt source Loopback0 multipath rate-per-route interface all enable accounting per-prefix bgp auto-discovery mldp ! mdt partitioned mldp ipv4 p2mp ! ! ! !!!!!! enable mLDP for core tree signalling mpls ldp discovery targeted-hello interval 10 ! mldp address-family ipv4 ! ! router-id 2.2.2.2 address-family ipv4 discovery targeted-hello accept ! interface Bundle-Ether12001 ! ! !!!!! configure source connection. interface TenGigE0/0/0/0.200 description to R200 (MPVN) vrf mvpn200 ipv4 address 200.2.2.1 255.255.255.0 encapsulation dot1q 200 ! End (NCS55A2-1 PE) # !!!!! Basic config, setup the mpls core. interface Bundle-Ether12002 mtu 9198 ipv4 address 12.0.0.1 255.255.255.0 load-interval 30 ! interface HundredGigE0/0/2/2 bundle id 12002 mode active load-interval 30 ! interface HundredGigE0/0/2/3 bundle id 12002 mode active load-interval 30 ! ! interface Loopback0 ipv4 address 1.1.1.1 255.255.255.255 ! router isis core is-type level-2-only net 49.1234.1111.1111.00 log adjacency changes address-family ipv4 unicast metric-style wide ! interface Bundle-Ether12002 point-to-point address-family ipv4 unicast ! ! interface Loopback0 passive address-family ipv4 unicast ! ! !!!!!! Conifg mvpn vrf vrf mvpn200 address-family ipv4 unicast import route-target 200:1 ! export route-target 200:1 ! ! ! !!!! enable mvpn address family between PE, enable ipv4 mvpn for vrf router bgp 100 nsr bgp router-id 1.1.1.1 bgp graceful-restart address-family vpnv4 unicast ! address-family ipv4 mvpn ! neighbor 2.2.2.2 remote-as 100 update-source Loopback0 address-family vpnv4 unicast ! address-family ipv4 mvpn ! ! vrf mvpn200 rd 200:10 address-family ipv4 unicast label mode per-prefix redistribute connected ! address-family ipv4 mvpn ! ! ! !!!!! create route-policy for rpf check purposes then apply under pim. route-policy mldp-partitioned-p2mp set core-tree mldp-partitioned-p2mp end-policy ! router pim vrf mvpn200 address-family ipv4 rpf topology route-policy mldp-partitioned-p2mp mdt c-multicast-routing bgp ! interface TenGigE0/0/0/0.200 enable ! ! ! ! !!!!!! enable partitioned mdt for the vrf and use bgp auto-discovery to discover the PE\u0026#39;s participating in the tree multicast-routing address-family ipv4 interface Loopback0 enable ! mdt source Loopback0 ! vrf mvpn200 address-family ipv4 mdt source Loopback0 multipath ssm range ssm-range rate-per-route interface all enable accounting per-prefix bgp auto-discovery mldp ! mdt partitioned mldp ipv4 p2mp ! ! ! !!!!!! enable mLDP for core tree signalling mpls ldp discovery targeted-hello interval 10 ! mldp address-family ipv4 ! ! router-id 1.1.1.1 address-family ipv4 discovery targeted-hello accept ! interface Bundle-Ether12002 ! ! !!!!! configure receiver connection. interface TenGigE0/0/0/0.200 description to R200 (MPVN) vrf mvpn200 ipv4 address 200.1.1.1 255.255.255.0 load-interval 30 encapsulation dot1q 200 ! Receiver # router igmp interface TenGigE0/0/0/6.200 join-group 232.0.0.3 200.2.2.2 ! ! ! BGP Signalling # route type 1 (Intra-AS I-PMSI AD) route type 3 (S-PMSI AD) route type 7 (Source Tree Join) 三类路由， 下面的输出是在连接接收者的 PE 采集的，其中 Type 7 的路由只有在收到下游的\u0026lt;S*G\u0026gt; Join 才会产生\nRP/0/RP0/CPU0:NC55A2-01#show bgp ipv4 mvpn Tue Aug 16 12:07:56.080 UTC BGP router identifier 1.1.1.1, local AS number 100 BGP generic scan interval 60 secs Non-stop routing is enabled BGP table state: Active Table ID: 0x0 RD version: 0 BGP main routing table version 10 BGP NSR Initial initsync version 4 (Reached) BGP NSR/ISSU Sync-Group versions 0/0 BGP scan interval 60 secs Status codes: s suppressed, d damped, h history, * valid, \u0026gt; best i - internal, r RIB-failure, S stalet, N Nexthop-discard Origin codes: i - IGP, e - EGP, ? - incomplete Network Next Hop Metric LocPrf Weight Path Route Distinguisher: 200:10 (default for vrf mvpn200) *\u0026gt; [1][1.1.1.1]/40 0.0.0.0 0 i *\u0026gt;i[1][2.2.2.2]/40 2.2.2.2 100 0 i *\u0026gt; [3][0][0.0.0.0][0][0.0.0.0][1.1.1.1]/120 0.0.0.0 0 i *\u0026gt;i[3][0][0.0.0.0][0][0.0.0.0][2.2.2.2]/120 2.2.2.2 100 0 i *\u0026gt; [7][200:20][100][32][200.2.2.2][32][232.0.0.3]/184 0.0.0.0 0 i Route Distinguisher: 200:20 *\u0026gt;i[1][2.2.2.2]/40 2.2.2.2 100 0 i *\u0026gt;i[3][0][0.0.0.0][0][0.0.0.0][2.2.2.2]/120 2.2.2.2 100 0 i Processed 7 prefixes, 7 paths mLDP Signalling # RP/0/RP0/CPU0:NC55A2-02#show mpls mldp bindings Tue Aug 16 11:35:22.304 UTC mLDP MPLS Bindings database LSP-ID: 0x00001 Paths: 2 Flags: Pk 0x00001 P2MP 2.2.2.2 [global-id 1] Local Label: 24000 Remote: 1048577 Inft: Lmdtmvpn200 RPF-ID: 0 TIDv4/v6: 0xE0000002/0xE0800002 Remote Label: 24007 NH: 12.0.0.1 Inft: Bundle-Ether12001 RP/0/RP0/CPU0:NC55A2-01#show mpls mldp bindings Tue Aug 16 12:15:10.292 UTC mLDP MPLS Bindings database LSP-ID: 0x00001 Paths: 1 Flags: Pk 0x00001 P2MP 1.1.1.1 [global-id 1] Local Label: 24000 Remote: 1048577 Inft: Lmdtmvpn200 RPF-ID: 0 TIDv4/v6: 0xE0000002/0xE0800002 LSP-ID: 0x00002 Paths: 2 Flags: Pk 0x00002 P2MP 2.2.2.2 [global-id 1] Local Label: 24007 Active Remote Label: 1048577 Inft: Lmdtmvpn200 RPF-ID: 3 TIDv4/v6: 0xE0000002/0xE0800002 mrib verify # RP/0/RP0/CPU0:NC55A2-02#show mrib vrf mvpn200 route Tue Aug 16 11:38:52.980 UTC IP Multicast Routing Information Base Entry flags: L - Domain-Local Source, E - External Source to the Domain, C - Directly-Connected Check, S - Signal, IA - Inherit Accept, IF - Inherit From, D - Drop, ME - MDT Encap, EID - Encap ID, MD - MDT Decap, MT - MDT Threshold Crossed, MH - MDT interface handle CD - Conditional Decap, MPLS - MPLS Decap, EX - Extranet MoFE - MoFRR Enabled, MoFS - MoFRR State, MoFP - MoFRR Primary MoFB - MoFRR Backup, RPFID - RPF ID Set, X - VXLAN Interface flags: F - Forward, A - Accept, IC - Internal Copy, NS - Negate Signal, DP - Don\u0026#39;t Preserve, SP - Signal Present, II - Internal Interest, ID - Internal Disinterest, LI - Local Interest, LD - Local Disinterest, DI - Decapsulation Interface EI - Encapsulation Interface, MI - MDT Interface, LVIF - MPLS Encap, EX - Extranet, A2 - Secondary Accept, MT - MDT Threshold Crossed, MA - Data MDT Assigned, LMI - mLDP MDT Interface, TMI - P2MP-TE MDT Interface IRMI - IR MDT Interface, TRMI - TREE SID MDT Interface, MH - Multihome Interface (*,224.0.0.0/4) RPF nbr: 200.2.2.1 Flags: L C RPF P Up: 3d09h Outgoing Interface List Decapstunnel0 Flags: NS DI, Up: 3d09h (*,224.0.0.0/24) Flags: D P Up: 3d09h (*,224.0.1.39) Flags: S P Up: 3d09h (*,224.0.1.40) Flags: S P Up: 3d09h Outgoing Interface List TenGigE0/0/0/0.200 Flags: II LI, Up: 3d09h (*,232.0.0.0/8) Flags: D P Up: 3d09h (200.2.2.2,232.0.0.3) RPF nbr: 200.2.2.2 Flags: RPF Up: 3d09h Incoming Interface List TenGigE0/0/0/0.200 Flags: A, Up: 3d09h Outgoing Interface List Lmdtmvpn200 Flags: F LMI TR, Up: 3d09h RP/0/RP0/CPU0:NC55A2-01#show mrib vrf mvpn200 route Tue Aug 16 12:17:52.769 UTC IP Multicast Routing Information Base Entry flags: L - Domain-Local Source, E - External Source to the Domain, C - Directly-Connected Check, S - Signal, IA - Inherit Accept, IF - Inherit From, D - Drop, ME - MDT Encap, EID - Encap ID, MD - MDT Decap, MT - MDT Threshold Crossed, MH - MDT interface handle CD - Conditional Decap, MPLS - MPLS Decap, EX - Extranet MoFE - MoFRR Enabled, MoFS - MoFRR State, MoFP - MoFRR Primary MoFB - MoFRR Backup, RPFID - RPF ID Set, X - VXLAN Interface flags: F - Forward, A - Accept, IC - Internal Copy, NS - Negate Signal, DP - Don\u0026#39;t Preserve, SP - Signal Present, II - Internal Interest, ID - Internal Disinterest, LI - Local Interest, LD - Local Disinterest, DI - Decapsulation Interface EI - Encapsulation Interface, MI - MDT Interface, LVIF - MPLS Encap, EX - Extranet, A2 - Secondary Accept, MT - MDT Threshold Crossed, MA - Data MDT Assigned, LMI - mLDP MDT Interface, TMI - P2MP-TE MDT Interface IRMI - IR MDT Interface, TRMI - TREE SID MDT Interface, MH - Multihome Interface (*,224.0.0.0/24) Flags: D P Up: 3d09h (*,224.0.1.39) Flags: S P Up: 3d09h (*,224.0.1.40) Flags: S P Up: 3d09h Outgoing Interface List TenGigE0/0/0/0.200 Flags: II LI, Up: 3d09h (*,230.0.0.0/24) Flags: D P Up: 3d09h (*,232.0.0.0/24) Flags: D P Up: 3d09h (200.2.2.2,232.0.0.3) RPF nbr: 2.2.2.2 Flags: RPF Up: 3d09h Incoming Interface List Lmdtmvpn200 Flags: A LMI, Up: 3d09h Outgoing Interface List TenGigE0/0/0/0.200 Flags: F NS LI, Up: 3d09h enable multicast route statistic # Config # ipv4 access-list mcast-counter 10 permit ipv4 host 200.2.2.2 232.0.0.0/24 ! hw-module route-stats l3mcast vrf mvpn200 ipv4 ingress mcast-counter end Verify # RP/0/RP0/CPU0:NC55A2-02#show mfib vrf mvpn200 route rate Tue Aug 9 02:11:52.553 UTC IP Multicast Forwarding Rates (Source Address, Group Address) Incoming rate: Node: (Incoming node) : pps/bps Outgoing rate: Node: (Outgoing node) : pps/bps (200.2.2.2,232.0.0.3) Incoming rate : Node : 0/0/CPU0 : 1 / 20862 \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; Outgoing rate : MDT RP/0/RP0/CPU0:NC55A2-01#show mfib vrf mvpn200 route rate Tue Aug 9 02:49:02.700 UTC IP Multicast Forwarding Rates (Source Address, Group Address) Incoming rate: Node: (Incoming node) : pps/bps Outgoing rate: Node: (Outgoing node) : pps/bps (200.2.2.2,230.0.0.3) Incoming rate : MDT Outgoing rate : (200.2.2.2,232.0.0.3) Incoming rate : MDT Node : 0/0/CPU0 : 1 / 20862 \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; Outgoing rate : Limitation # 来源\n","date":"16 August 2022","externalUrl":null,"permalink":"/blog/mvpn-profile-14-ncs55xx/","section":"Blog","summary":"最近测试了下 NCS55 上面的 MVPN，整理一下防止自己忘记了.","title":"mVPN Profile 14 | NCS55xx","type":"blog"},{"content":"","date":"16 August 2022","externalUrl":null,"permalink":"/tags/ncs55/","section":"Tags","summary":"","title":"Ncs55","type":"tags"},{"content":"","date":"16 August 2022","externalUrl":null,"permalink":"/tags/xr/","section":"Tags","summary":"","title":"Xr","type":"tags"},{"content":" Step1: Yum install # [root@server1 ~]# yum -y install dhcp Step2: modify config # [root@server1 ~]#cp /usr/share/doc/dhcp-4.2.5/dhcpd.conf.example /etc/dhcp/dhcpd.conf [root@server1 ~]#cat /etc/dhcp/dhcpd.conf [root@server1 ~]# grep -v ^# /etc/dhcp/dhcpd.conf option domain-name \u0026#34;xxxx.com\u0026#34;; option domain-name-servers x.x.x.x, x.x.x.x; default-lease-time 3600; max-lease-time 7200; log-facility local7; subnet 10.70.79.128 netmask 255.255.255.128 { \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; make sure the subnet same with you centos server\u0026#39;s subnet, otherwise dhcp service start will has issue option routers 10.70.79.254; range 10.70.79.134 10.70.79.187; } host win11{ hardware ethernet 00:50:56:98:78:21; fixed-address 10.70.79.x; } subnet 10.124.36.0 netmask 255.255.255.0 { option routers 10.124.36.1; range 10.124.36.109 10.124.36.111; } host 8201{ hardware ethernet xx:xx:xx:xx:xx; fixed-address 10.124.36.x; } Step3: Other config files need pay attention to # [root@server1 ~]# grep -v ^# /etc/sysconfig/dhcpd DHCPDARGS=eth32 [root@server1 ~]# cat /etc/systemd/system/dhcpd.service [Unit] Description=DHCPv4 Server Daemon Documentation=man:dhcpd(8) man:dhcpd.conf(5) Wants=network-online.target After=network-online.target After=time-sync.target [Service] Type=notify ExecStart=/usr/sbin/dhcpd -f -cf /etc/dhcp/dhcpd.conf -user dhcpd -group dhcpd --no-pid ens32 [Install] WantedBy=multi-user.target Step4: start DHCP service # [root@server1 ~]#systemctl restart dhcpd.service [root@server1 ~]#systemctl status dhcpd.service Step 5: check dhcp server log # /var/log/messages \u0026lt;\u0026lt;\u0026lt;\u0026lt; /var/lib/dhcpd/dhcpd.leases ","date":"2 August 2022","externalUrl":null,"permalink":"/blog/dhcp-server-setup-steps-in-centos7/","section":"Blog","summary":"Step1: Yum install # [root@server1 ~]# yum -y install dhcp Step2: modify config # [root@server1 ~]#cp /usr/share/doc/dhcp-4.","title":"DHCP Server Setup steps In Centos7","type":"blog"},{"content":"最近尝试了下使用 Golden ISO 升级了下设备，发现其比使用官方提供的 mini 的 ISO 镜像更方便，时间更短，属实是太方便了。\n什么是 Golden ISO 呢，GISO 属于自定义的镜像文件，可以选择性的将 mini iso + option rpm + smu + config file 等定制成一个镜像文件，这样我们在升级的时候只需要安装一个文件，可以省略之前很多很多的步骤。\nGISO 分为以下两种:\nOptimised GISO (目前只能由官方提供) Non-optimised GISO （使用 github 上 public 的 python 脚本自己自定义） Non-optimised GISO 的缺点:\n如果使用 python 脚本自定义的 GISO，无法用于 PXE 安装，即使 PXE 安装了也只会成功安装 mini iso，其它的自定义的 oprion rpm/config 文件不会被加载。文章最后会说一下如何解决这个问题。\n本文主要来介绍，如何使用 Github 上的脚本自己在本地定制化 GISO 文件。\n方法会有很多，以下会从简单到复杂记录一下：\nOption 1:使用 Docker Hub 镜像 # 解决依赖关系 # Python 脚本需要解决依赖关系的问题，目前 Docker Hub 上传了已经解决依赖关系的镜像，我们可以直接 pull 下来使用。\nciscogisobuild/cisco-xr-gisobuild\n截至到目前已经发布的版本是 2.2.0，所以这里 pull 一个最新的版本:\n[root@server1 ~]# docker pull ciscogisobuild/cisco-xr-gisobuild:2.2.0 镜像文件准备 # 将 github 上的项目 clone 一份下来，将其中的 src 文件夹整个 copy 一份到一个新的自定义的文件夹（rorygiso）\n[root@server1 ~]# git clone https://github.com/ios-xr/gisobuild Cloning into \u0026#39;gisobuild\u0026#39;... remote: Enumerating objects: 267, done. remote: Counting objects: 100% (159/159), done. remote: Compressing objects: 100% (104/104), done. remote: Total 267 (delta 77), reused 131 (delta 54), pack-reused 108 Receiving objects: 100% (267/267), 6.06 MiB | 5.75 MiB/s, done. Resolving deltas: 100% (138/138), done. [root@server1 ~]# [root@server1 ~]# [root@server1 ~]# cd gisobuild/ [root@server1 gisobuild]# ls Dockerfile gisobuild_options.yaml LICENSE README.md sample_yaml setup src 在自定义的文件夹下需要准备好 mini 文件，需要安装的 rpm，以及路由器的配置文件(可选)\n[root@server1 ~]# ls -al | grep giso drwxr-xr-x. 7 root root 165 Jul 21 03:54 gisobuild drwxr-xr-x. 3 root root 4096 Jul 21 03:53 rorygiso [root@server1 ~]# [root@server1 ~]# [root@server1 ~]# [root@server1 ~]# cd rorygiso/ [root@server1 rorygiso]# [root@server1 rorygiso]# ls -al total 1950276 drwxr-xr-x. 3 root root 4096 Jul 21 03:53 . dr-xr-x---. 38 root root 4096 Jul 21 03:48 .. -rw-------. 1 root root 2333 Jul 19 21:03 5501cfgbak.cfg -rw-r--r--. 1 root root 676216 Jul 21 03:53 ncs5500-eigrp-1.0.0.0-r742.x86_64.rpm -rw-r--r--. 1 root root 3545911 Jul 21 03:53 ncs5500-isis-2.1.0.0-r742.x86_64.rpm -rwxr-x---. 1 root root 1800502 Jul 21 03:53 ncs5500-k9sec-3.1.0.0-r742.x86_64.rpm -rw-r--r--. 1 root root 343452 Jul 21 03:53 ncs5500-li-1.0.0.0-r742.x86_64.rpm -rw-r--r--. 1 root root 12604135 Jul 21 03:53 ncs5500-mcast-3.0.0.0-r742.x86_64.rpm -rw-r--r--. 1 root root 21228080 Jul 21 03:53 ncs5500-mgbl-3.0.0.0-r742.x86_64.rpm -rw-r--r--. 1 root root 1941411840 Jul 19 04:16 ncs5500-mini-x-7.4.2.iso -rw-r--r--. 1 root root 2372186 Jul 21 03:53 ncs5500-mpls-2.1.0.0-r742.x86_64.rpm -rw-r--r--. 1 root root 9056898 Jul 21 03:53 ncs5500-mpls-te-rsvp-3.1.0.0-r742.x86_64.rpm -rw-r--r--. 1 root root 4002140 Jul 21 03:54 ncs5500-ospf-3.0.0.0-r742.x86_64.rpm drwxr-xr-x. 7 root root 94 Jul 19 22:43 src 启动一个 docker，并将本地存储镜像文件目录与 docker 内的工作目录做个映射，如下:\n[root@server1 guest]# docker run -itd -v /root/rorygiso:/app/gisobuild ciscogisobuild/cisco-xr-gisobuild:2.2.0 1ba553454ae5952c8736e540c83a371e86be8e1c876466a7c8387ba53c6de6d3 [root@server1 guest]# [root@server1 guest]# [root@server1 guest]# docker exec -it 1ba5534 /bin/bash [root@1ba553454ae5 gisobuild]# [root@1ba553454ae5 gisobuild]# ls -al total 1945356 drwxr-xr-x. 3 root root 4096 Jul 20 07:39 . drwxr-xr-x. 3 root root 23 Jul 20 01:27 .. -rw-------. 1 root root 2333 Jul 20 01:03 5501cfgbak.cfg -rw-r--r--. 1 root root 3545911 Jul 19 08:09 ncs5500-isis-2.1.0.0-r742.x86_64.rpm -rwxr-x---. 1 root root 1800502 Jul 19 08:09 ncs5500-k9sec-3.1.0.0-r742.x86_64.rpm -rw-r--r--. 1 root root 12604135 Jul 19 08:09 ncs5500-mcast-3.0.0.0-r742.x86_64.rpm -rw-r--r--. 1 root root 21228080 Jul 19 08:09 ncs5500-mgbl-3.0.0.0-r742.x86_64.rpm -rw-r--r--. 1 root root 1941411840 Jul 19 08:16 ncs5500-mini-x-7.4.2.iso -rw-r--r--. 1 root root 2372186 Jul 19 08:16 ncs5500-mpls-2.1.0.0-r742.x86_64.rpm -rw-r--r--. 1 root root 9056898 Jul 19 08:16 ncs5500-mpls-te-rsvp-3.1.0.0-r742.x86_64.rpm drwxr-xr-x. 7 root root 94 Jul 20 02:43 src 生成 GISO # 命令行如下:\n[root@718e07564191 gisobuild]# ./src/gisobuild.py --iso ncs5500-mini-x-7.4.2.iso --xrconfig 5501cfgbak.cfg --repo /app/gisobuild/ --label rory --clean System requirements check [PASS] Platform: ncs5500 Version: 7.4.2 XR-Config file (/app/gisobuild/5501cfgbak.cfg) will be encapsulated in Golden ISO. Scanning repository [/app/gisobuild]... Building RPM Database... Total 6 RPM(s) present in the repository path provided in CLI [ 1] ncs5500-mgbl-3.0.0.0-r742.x86_64.rpm [ 2] ncs5500-mpls-2.1.0.0-r742.x86_64.rpm [ 3] ncs5500-mpls-te-rsvp-3.1.0.0-r742.x86_64.rpm [ 4] ncs5500-mcast-3.0.0.0-r742.x86_64.rpm [ 5] ncs5500-isis-2.1.0.0-r742.x86_64.rpm [ 6] ncs5500-k9sec-3.1.0.0-r742.x86_64.rpm Following XR x86_64 rpm(s) will be used for building Golden ISO: (+) ncs5500-mgbl-3.0.0.0-r742.x86_64.rpm (+) ncs5500-mpls-2.1.0.0-r742.x86_64.rpm (+) ncs5500-mpls-te-rsvp-3.1.0.0-r742.x86_64.rpm (+) ncs5500-mcast-3.0.0.0-r742.x86_64.rpm (+) ncs5500-isis-2.1.0.0-r742.x86_64.rpm (+) ncs5500-k9sec-3.1.0.0-r742.x86_64.rpm ...RPM signature check [PASS] ...RPM compatibility check [PASS] Building Golden ISO... Summary ..... XR rpms: ncs5500-mgbl-3.0.0.0-r742.x86_64.rpm ncs5500-mpls-2.1.0.0-r742.x86_64.rpm ncs5500-mpls-te-rsvp-3.1.0.0-r742.x86_64.rpm ncs5500-mcast-3.0.0.0-r742.x86_64.rpm ncs5500-isis-2.1.0.0-r742.x86_64.rpm ncs5500-k9sec-3.1.0.0-r742.x86_64.rpm XR Config file: router.cfg ...Golden ISO creation SUCCESS. Golden ISO Image Location: /app/gisobuild/output_gisobuild/ncs5500-goldenk9-x-7.4.2-rory.iso [root@718e07564191 gisobuild]# [root@718e07564191 gisobuild]# 如上你就得到了自己定义的镜像文件”ncs5500-goldenk9-x-7.4.2-rory.iso”,可以用于 install/pxe 升级。\nOption 2:使用 Docker File 自行生成 Docker 镜像 # 这种方法属于方法 1 的变种，其实你将 gisobuild 项目 clone 下来后就会发现其中包含一个 Dockerfile，我们可以根据这个文件自己创建 Docker 镜像，不去使用 Docker Hub 中别人上传的。\n[root@server1 ~]# git clone https://github.com/ios-xr/gisobuild [root@server1 ~]# cd gisobuild/ [root@server1 gisobuild]# ls Dockerfile gisobuild_options.yaml LICENSE README.md sample_yaml setup src [root@server1 gisobuild]# cat Dockerfile # Dockerfile for base image towards satisfying gisobuild # dependencies. # FROM almalinux:8 COPY setup/prep_dependency.sh /tmp WORKDIR /app/gisobuild RUN /tmp/prep_dependency.sh \u0026amp;\u0026amp; rm /tmp/prep_dependency.sh [root@server1 gisobuild]# [root@server1 gisobuild]# 创建 gisobuild Docker image # [root@server1 gisobuild]# docker build -t gisobuild . Sending build context to Docker daemon 2.004GB Step 1/4 : FROM almalinux:8 8: Pulling from library/almalinux Digest: sha256:6e08f659ac9f0c5db661d7f748ac687b4cec0cfbbc9dbc440a28d9f64f577e54 Status: Downloaded newer image for almalinux:8 ---\u0026gt; 4580d9e4bab7 Step 2/4 : COPY setup/prep_dependency.sh /tmp ---\u0026gt; df1c565075e8 Step 3/4 : WORKDIR /app/gisobuild ---\u0026gt; Running in 747b532a9548 Removing intermediate container 747b532a9548 ---\u0026gt; 5f45860087bb Step 4/4 : RUN /tmp/prep_dependency.sh \u0026amp;\u0026amp; rm /tmp/prep_dependency.sh ---\u0026gt; Running in caf7ebac69b5 AlmaLinux 8 - BaseOS 327 kB/s | 4.7 MB 00:14 AlmaLinux 8 - AppStream 1.0 MB/s | 9.5 MB 00:09 AlmaLinux 8 - Extras 6.6 kB/s | 18 kB 00:02 Last metadata expiration check: 0:00:01 ago on Wed Jul 20 01:27:39 2022. Package python3-rpm-4.14.3-23.el8.x86_64 is already installed. Package rpm-4.14.3-23.el8.x86_64 is already installed. Dependencies resolved. \u0026lt;snip\u0026gt; [root@server1 gisobuild]# [root@server1 gisobuild]# docker image ls REPOSITORY TAG IMAGE ID CREATED SIZE gisobuild latest a796c4dd20fd 16 seconds ago 250MB 除此之外，剩下的生成 GISO 的步骤和方法一相同:\n[root@server1 gisobuild]# docker run -itd --name rorygisotest -v /root/rorygiso:/app/gisobuild gisobuild 9973b836965651fd063fd78057d921bc6d7360d8f76ca21d1bfd33f69c3278be [root@server1 gisobuild]# [root@server1 gisobuild]# [root@server1 gisobuild]# docker exec -it rorygisotest /bin/bash [root@9973b8369656 gisobuild]# ls Option 3:使用 local server，自行解决依赖关系 # [root@server1 ~]# git clone https://github.com/ios-xr/gisobuild [root@server1 ~]# cd gisobuild/ [root@server1 gisobuild]# ls Dockerfile gisobuild_options.yaml LICENSE README.md sample_yaml setup src [root@server1 gisobuild]# ./setup/prep_dependency.sh \u0026lt;snip\u0026gt; Package cpio-2.12-11.el8.x86_64 is already installed. Package createrepo_c-0.17.7-5.el8.x86_64 is already installed. Package file-5.33-20.el8.x86_64 is already installed. Package genisoimage-1.1.11-39.el8.x86_64 is already installed. Package libcdio-2.0.0-3.el8.x86_64 is already installed. Package openssl-1:1.1.1k-6.el8_5.x86_64 is already installed. Package python36-3.6.8-38.module_el8.5.0+2569+5c5719bc.x86_64 is already installed. Package python3-pip-9.0.3-22.el8.noarch is already installed. Package python3-rpm-4.14.3-23.el8.x86_64 is already installed. Package rpm-4.14.3-23.el8.x86_64 is already installed. Package squashfs-tools-4.3-20.el8.x86_64 is already installed. Dependencies resolved. Complete! \u0026lt;snip\u0026gt; 解决完 local server 的依赖关系后，就可以使用 python 脚本生成 GISO，示例如下:\n[root@server1 gisobuild]# ./src/gisobuild.py --iso /root/rorygiso/ncs5500-mini-x-7.4.2.iso --repo /root/rorygiso/ --xrconfig /root/rorygiso/5501cfgbak.cfg --clean --label v2 创建 USB 启动文件 # 按上面所说对于 Non-optimised GISO 或者说是自己通过 python 脚本创建的 GISO 无法通过 BIOS PXE 启动(BIOS 限制），除了 PXE 启动，我们可以选择在已经创建好的 GISO 上创建 USB 启动文件，使用 USB 启动设备。USB 启动可以加载 option 的 RPM 和 config file.\n具体的步骤参考文章， 使用的是下面的脚本.\nUSB BOOT\n步骤如下:\n[root@server1 ]# git clone https://github.com/venkateswarannagarajan/usbboot [root@server1 usbboot]# ls -al total 16 drwxr-xr-x. 3 root root 40 Jul 21 22:59 . dr-xr-x---. 39 root root 4096 Jul 21 22:59 .. -rw-r--r--. 1 root root 5552 Jul 21 22:59 create_usb_zip drwxr-xr-x. 8 root root 163 Jul 21 22:59 .git [root@server1 usbboot]# chmod +x create_usb_zip [root@server1 usbboot]# [root@server1 usbboot]# ./create_usb_zip ncs5500 /home/guest/guest/ncs5500-goldenk9-x-7.4.2-v2.iso adding: boot/ (stored 0%) adding: boot/install-image.iso (deflated 0%) adding: EFI/ (stored 0%) adding: EFI/boot/ (stored 0%) adding: EFI/boot/grub.cfg (deflated 66%) adding: EFI/boot/bootx64.efi (deflated 67%) Zip file created - ncs5500-usb_boot.zip [root@server1 usbboot]# test@123:/usbboot$ ./create_usb_zip ncs5500 /gisobuild/output_gisobuild/ncs5500-goldenk9-x-7.4.2-iso.iso ./create_usb_zip: 16: Syntax error: \u0026#34;(\u0026#34; unexpected 如果你遇到上述报错，你可以复用之前所提到的 docker image cisco-xr-gisobuild， 在该 docker image 中执行：\nPath /home/guest/guest/giso contain scrip and giso image. #docker run -itd -v /home/guest/guest/giso:/app/gisobuild ciscogisobuild/cisco-xr-gisobuild:2.2.0 #docker exec -it \u0026lt;ID\u0026gt; /bin/bash [root@718e07564191 gisobuild]# yum -y install zip [root@718e07564191 gisobuild]# ./create_usb_zip ncs5500 ncs5500-goldenk9-x-7.4.2-v2.iso 使用 PXE 安装 GISO 安装过程 # RP/0/RP0/CPU0:ios#admin Tue Jul 19 07:18:58.896 UTC cisco connected from 127.0.0.1 using console on sysadmin-vm:0_RP0 sysadmin-vm:0_RP0# sysadmin-vm:0_RP0# sysadmin-vm:0_RP0# reload rack 0 Tue Jul 19 07:19:01.867 UTC+00:00 Reload node ? [no,yes] yes result Rack graceful reload request on 0 acknowledged. sysadmin-vm:0_RP0# 0/RP0/ADMIN0:Jul 19 07:19:14.972 UTC: vm_manager[2971]: %INFRA-VM_MANAGER-4-INFO : Info: vm_manager brought down VM default-sdr--2 Preparing system for backup. This may take a few minutes especially for large configurations. Status report: node0_RP0_CPU0: BACKUP INPROGRESS Status report: node0_RP0_CPU0: BACKUP HAS COMPLETED SUCCESSFULLY [Done] Disconnecting from \u0026#39;default-sdr--1\u0026#39; console. Continue(Y/N)? Connecting to \u0026#39;host\u0026#39; console host login: Stoping cgroup-init Stopping OpenBSD Secure Shell server: sshdinitctl: Unknown instance: Stopping system message bus: dbus. Stopping random number generator daemon. Stopping system log daemon...0 Stopping kernel log daemon...0 Stopping internet superserver: xinetd. Stopping crond: OK Stopping rpcbind daemon... done. Stopping S.M.A.R.T. daemon: smartd. Stopping Lighttpd Web Server: stopped /usr/sbin/lighttpd (pid 4359) lighttpd. Stopping libvirtd daemon: [ OK ] Deconfiguring network interfaces... done. Sending all processes the KILL signal... Unmounting remote filesystems... Deactivating swap... Unmounting local filesystems... mount: can\u0026#39;t find /mnt/ram in /etc/fstab Rebooting... [ 721.147122] obfl_rb_notify_cb: reboot notifier called [ 721.152776] writing reset reason 1, (null) [ 721.340132] Requesting IOFPGA for system wide cold reset operation [ 721.882173] Disabling IRQ #18 [ 724.332118] Succesfully wrote mtdoops at 262144 size 32768 [ 724.338343] pstore: Successfully logged oops info. Size 32740 ≡ Booting CISCO Route Processor Module IOFPGA Information: Booted from : Primary FPGA Revison : 0x10019 ID : 0x20171FD3 Date : 0x20190924 Fab Revision : 0x5 Base Board Presence : 0x80000015 Board is : Turin CPU Board Booting from Primary BIOS BIOS secure boot verification results: PASS BIOS version: 1.22.0 Selected Boot Option: Harddisk Version 2.18.1260. Copyright (C) 2019 American Megatrends, Inc. BIOS Date: 11/02/2019 03:24:06 Ver: 1.22 Press \u0026lt;DEL\u0026gt; or \u0026lt;ESC\u0026gt; to enter setup. Entering Setup... A9 Aptio Setup Utility - Copyright (C) 2019 American Megatrends, Inc. Security Cisco Boot Manager ┌────────────────────────────────────────────────────┬─────────────────────────┐ │ │ │ │ List of Boot Options │ │ │ UEFI: Micron_M600_MTFDDAT064MBF, Partition 4 │ │ │ UEFI: Built-in iPXE │ │ │ UEFI: Built-in Grub │ │ │ UEFI: Built-in Shell │ │ │ P0: Micron_M600_MTFDDAT064MBF │ │ │ │ │ │ │ │ │ │─────────────────────────│ │ │\u0026gt;\u0026lt;: Select Screen │ │ │: Select Item │ │ │Enter: Select │ │ │+/-: Change Opt. │ │ │F1: General Help │ │ │ESC: Exit │ │ │ │ │ │ │ │ │ │ └────────────────────────────────────────────────────┴─────────────────────────┘ Version 2.18.1260. Copyright (C) 2019 American Megatrends, Inc. AB iPXE initialising devices...ok iPXE 1.0.0+ (c451) -- Open Source Network Boot Firmware -- http://ipxe.org Features: DNS HTTP HTTPS TFTP VLAN EFI ISO9660 NBI Menu iPXE\u0026gt; ifopen net0 iPXE\u0026gt; set net0/netmask 255.255.255.0 iPXE\u0026gt; set net0/ip 10.124.36.60 iPXE\u0026gt; set net0/gateway 10.124.36.1 iPXE\u0026gt; boot http://10.124.36.199:3333/ncs5500-goldenk9-x-7.4.2-iso.iso http://10.124.36.199:3333/ncs5500-goldenk9-x-7.4.2-iso.iso... ok Memory required for image[ncs5500-goldenk9-x-7.4.2-iso.iso]: 1991798784, available: 2146422784 Certificate parsing success Root Certificate found. Successfully got public key from issuer cert Image verified successfully. Booting... Booting iso-image@0x7d9479000(1991798784), bzImage@0x7d94c2800(6288206) Certificate parsing success Root Certificate found. Successfully got public key from issuer cert Image verified successfully. Booting.. **** PASS: secure boot verification of image: bzImage**** [ 0.736776] Allocating netns hash table Expanding ISO image 4234522 blocks /iso/iosxrwbd-ddc.installer does not exist Skip labeling of root when start with root on non-persistent storage Starting udev udevd[244]: unknown key \u0026#39;RUN{builtin}\u0026#39; in /lib/udev/rules.d/64-btrfs-dm.rules:8 udevd[244]: invalid rule \u0026#39;/lib/udev/rules.d/64-btrfs-dm.rules:8\u0026#39; Running postinst /etc/rpm-postinsts/100-dnsmasq... Running postinst /etc/rpm-postinsts/101-nfs-utils-client... Running postinst /etc/rpm-postinsts/102-nfs-utils... update-rc.d: /etc/init.d/run-postinsts exists during rc.d purge (continuing) Removing any system startup links for run-postinsts ... /etc/rcS.d/S99run-postinsts Configuring network interfaces... done. Starting system message bus: dbus. Starting OpenBSD Secure Shell server: sshd generating ssh RSA key... generating ssh ECDSA key... generating ssh DSA key... generating ssh ED25519 key... sshd start/running, process 1296 Starting rpcbind daemon...done. Starting random number generator daemon. Starting system log daemon...0 Starting kernel log daemon...0 tftpd-hpa disabled in /etc/default/tftpd-hpa Starting internet superserver: xinetd. Starting S.M.A.R.T. daemon: smartd. Tue Jul 19 07:24:23 UTC 2022: Detected /iso/host.iso mount: /dev/loop0 is write-protected, mounting read-only Tue Jul 19 07:24:23 UTC 2022: Mounted /iso/host.iso to /tmp/isomnt.QbFpps Tue Jul 19 07:24:23 UTC 2022: Found /tmp/isomnt.QbFpps/rpm/ncs5500-sysadmin-hostos-7.4.2-r742.host.x86_64.rpm in host.iso Tue Jul 19 07:24:23 UTC 2022: Installing /tmp/isomnt.QbFpps/rpm/ncs5500-sysadmin-hostos-7.4.2-r742.host.x86_64.rpm warning: /tmp/isomnt.QbFpps/rpm/ncs5500-sysadmin-hostos-7.4.2-r742.host.x86_64.rpm: Header V4 RSA/SHA256 signature: NOKEY, key ID 5746bd08 Preparing packages for installation... ncs5500-sysadmin-hostos-7.4.2-r742.host.x86_64 ****Zermatt**** ls: cannot access /opt/cisco/hostos/etc/usb-install/cisco-instance/zermatt: No such file or directory ls: cannot access /etc/dhcp/cisco-instance/zermatt: No such file or directory Tue Jul 19 07:24:24 UTC 2022: Passing control to /etc/rc.d/init.d/pxe_install.sh start Logging started at Tue Jul 19 07:24:24 UTC 2022... Tue Jul 19 07:24:25 UTC 2022: Sourcing /etc/init.d/pi_grub_and_menu_lst_update.sh PI script Tue Jul 19 07:24:25 UTC 2022: Sourcing /etc/init.d/mount_pd_fs.sh PI script cmdline = bzImage root=/dev/ram install=/dev/sda console=ttyS0,115200 prod=1 crashkernel=192M@0 bigphysarea=10M quiet pci=assign-busses noissu aer=off pci=hpmemsize=0M,hpiosize=0M giso_boot initrd=initrd.img Tue Jul 19 07:24:25 UTC 2022: Preparing disk for PLATFORM=zermatt: Tue Jul 19 07:24:25 UTC 2022: In collect_archive_interrupted_bake_logs function.... Tue Jul 19 07:24:25 UTC 2022: Debug partition exist and is getting mounted.. Tue Jul 19 07:24:25 UTC 2022: Debug partition mounted on /tmp/bakelog Tue Jul 19 07:24:25 UTC 2022: Found 0 log files in debug partition Tue Jul 19 07:24:25 UTC 2022: Previous bake was successful Tue Jul 19 07:24:25 UTC 2022: Secondary disk is not present pd_punch_watchdog Punching IOFPGA watchdog Tue Jul 19 07:24:25 UTC 2022: Installer will install image on sda Tue Jul 19 07:24:25 UTC 2022: Checking disks: sda Tue Jul 19 07:24:25 UTC 2022: Primary disk /dev/sda health check failed Tue Jul 19 07:24:25 UTC 2022: Removing old boot partition Tue Jul 19 07:24:26 UTC 2022: Preparing debug partition zermatt Logging started at Tue Jul 19 07:24:26 UTC 2022... Tue Jul 19 07:24:26 UTC 2022: Removing old volumes Tue Jul 19 07:24:26 UTC 2022: Inside Volume-Cleaning Function Tue Jul 19 07:24:26 UTC 2022: Removed LVM /dev/panini_vol_grp/host_lv0 for Panini Tue Jul 19 07:24:26 UTC 2022: Removed LVM /dev/panini_vol_grp/host_data_scratch_lv0 for Panini Tue Jul 19 07:24:26 UTC 2022: Removed LVM /dev/panini_vol_grp/host_data_log_lv0 for Panini Tue Jul 19 07:24:26 UTC 2022: Removed LVM /dev/panini_vol_grp/host_data_config_lv0 for Panini Tue Jul 19 07:24:26 UTC 2022: Removed LVM /dev/panini_vol_grp/calvados_lv0 for Panini Tue Jul 19 07:24:26 UTC 2022: Removed LVM /dev/panini_vol_grp/calvados_data_lv0 for Panini Tue Jul 19 07:24:26 UTC 2022: Removed LVM /dev/panini_vol_grp/xr_lv0 for Panini Tue Jul 19 07:24:26 UTC 2022: Removed LVM /dev/panini_vol_grp/xr_lcp_lv0 for Panini Tue Jul 19 07:24:27 UTC 2022: Removed LVM /dev/app_vol_grp/app_lv0 for App-Host Tue Jul 19 07:24:27 UTC 2022: Removed App-Vol Grp app_vol_grp Tue Jul 19 07:24:27 UTC 2022: Removed Panini Vol-Grp panini_vol_grp Tue Jul 19 07:24:27 UTC 2022: Removed PV Tue Jul 19 07:24:27 UTC 2022: Exiting from the Volume Cleaning Section Tue Jul 19 07:24:27 UTC 2022 (/etc/rc.d/init.d/pxe_install.sh): Golden ISO type = 1.1 and PKG_VER = 1.0 Tue Jul 19 07:24:27 UTC 2022 (/etc/rc.d/init.d/pxe_install.sh): Additional RPMS embedded in system_image.iso Tue Jul 19 07:24:28 UTC 2022: Going to copy GISO files... Tue Jul 19 07:24:28 UTC 2022: Starting of copy_giso_files function Tue Jul 19 07:24:34 UTC 2022: Ending of copy_giso_files function Tue Jul 19 07:24:34 UTC 2022: Copied Golden ISO files... Tue Jul 19 07:24:42 UTC 2022: Md5sum verification succeeded Tue Jul 19 07:24:42 UTC 2022: ---Starting to prepare mb_disk--- Tue Jul 19 07:24:42 UTC 2022: Tue Jul 19 07:24:42 UTC 2022: ---Starting to prepare sda--- Tue Jul 19 07:24:43 UTC 2022: /dev/sda disk size is 64023MB Tue Jul 19 07:24:43 UTC 2022: Using remaining disk space 21109 MB for secondary disk functions Tue Jul 19 07:24:43 UTC 2022: LVM size (31744 MB) DEBUG part size (10 MB) Tue Jul 19 07:24:43 UTC 2022: Creating partitions, BOOT=900MB, LVM=31744MB, EFI=20MB Tue Jul 19 07:24:43 UTC 2022: Created partition of size 21109 for use as secondary disk Tue Jul 19 07:24:43 UTC 2022: Created Partition of size 4096 for use of App-Volume Tue Jul 19 07:24:43 UTC 2022: Partition creation on /dev/sda took 1 seconds Tue Jul 19 07:24:43 UTC 2022: File system creation on /dev/sda1 took 0 seconds Tue Jul 19 07:24:43 UTC 2022: Partitioning PCI block device /dev/sda5 Tue Jul 19 07:24:43 UTC 2022: /dev/sda5 disk size is 21109MB Tue Jul 19 07:24:44 UTC 2022: Final return val 0 .... Tue Jul 19 07:24:44 UTC 2022: Retaining Volume Group pci_disk1 Tue Jul 19 07:24:44 UTC 2022: Install boot image on /dev/sda1 Tue Jul 19 07:25:00 UTC 2022: Starting Calvados patch for lxc for hostos Tue Jul 19 07:25:00 UTC 2022: Uninstalling rpm gdb Tue Jul 19 07:25:00 UTC 2022 (/etc/init.d/calvados_patch_lxc_iso.sh): ZERMATT: Patch host Tue Jul 19 07:25:01 UTC 2022 (/etc/init.d/calvados_patch_lxc_iso.sh): ZERMATT: Patch host done Enable selinux to relabel filesystem from initramfs Checking SELinux security contexts: * First booting, filesystem will be relabeled... Tue Jul 19 07:25:06 UTC 2022: Finished Calvados patch for lxc Tue Jul 19 07:25:07 UTC 2022: Installing host image size of 498M took 23 seconds Tue Jul 19 07:25:07 UTC 2022: Tue Jul 19 07:25:07 UTC 2022: ---Starting to prepare host logical volume--- Tue Jul 19 07:25:07 UTC 2022 (/etc/rc.d/init.d/pxe_install.sh): Create app volume on sda Physical volume \u0026#34;/dev/sda6\u0026#34; successfully created Tue Jul 19 07:25:23 UTC 2022 (/etc/rc.d/init.d/pxe_install.sh): card_value is 0x20171FD3 Tue Jul 19 07:25:23 UTC 2022 (/etc/rc.d/init.d/pxe_install.sh): ZERMATT: card_inst=TURIN-RP,TURIN-SYNC-RP card_type=RP Tue Jul 19 07:25:25 UTC 2022: Starting Calvados patch for lxc for hostos Tue Jul 19 07:25:25 UTC 2022: Uninstalling rpm gdb Tue Jul 19 07:25:26 UTC 2022 (/etc/init.d/calvados_patch_lxc_iso.sh): ZERMATT: Patch host Tue Jul 19 07:25:26 UTC 2022 (/etc/init.d/calvados_patch_lxc_iso.sh): ZERMATT: Patch host done Enable selinux to relabel filesystem from initramfs Checking SELinux security contexts: * First booting, filesystem will be relabeled... Tue Jul 19 07:25:31 UTC 2022: Finished Calvados patch for lxc Tue Jul 19 07:25:33 UTC 2022: Tue Jul 19 07:25:33 UTC 2022: ---Starting to prepare calvados logical volume--- Tue Jul 19 07:25:33 UTC 2022: Create sub partition on /dev/panini_vol_grp/calvados_lv0 Tue Jul 19 07:25:34 UTC 2022: Create data sub partition on /dev/panini_vol_grp/calvados_data_lv0 Tue Jul 19 07:25:43 UTC 2022: File system creation on /dev/panini_vol_grp/calvados_lv0 took 10 seconds Tue Jul 19 07:25:43 UTC 2022: Install sysadmin-vm image on /dev/panini_vol_grp/calvados_lv0 Tue Jul 19 07:25:56 UTC 2022 (/etc/rc.d/init.d/pxe_install.sh): card_value is 0x20171FD3 Tue Jul 19 07:25:56 UTC 2022 (/etc/rc.d/init.d/pxe_install.sh): ZERMATT: card_inst=TURIN-RP,TURIN-SYNC-RP card_type=RP Tue Jul 19 07:25:56 UTC 2022: sysadmin-vm: RP based installation Tue Jul 19 07:26:53 UTC 2022: Starting Calvados patch for lxc for sysadmin-vm Tue Jul 19 07:26:53 UTC 2022: Uninstalling rpm gdb Tue Jul 19 07:26:54 UTC 2022: Uninstalling rpm smartmontools Tue Jul 19 07:26:54 UTC 2022 (/etc/init.d/calvados_patch_lxc_iso.sh): ZERMATT: Patch calvados Tue Jul 19 07:26:54 UTC 2022 (/etc/init.d/calvados_patch_lxc_iso.sh): Cleaning up LXC Tue Jul 19 07:26:54 UTC 2022 (/etc/init.d/calvados_patch_lxc_iso.sh): ZERMATT: Patch calvados done Enable selinux to relabel filesystem from initramfs Checking SELinux security contexts: * First booting, filesystem will be relabeled... Tue Jul 19 07:27:01 UTC 2022: Finished Calvados patch for lxc Tue Jul 19 07:27:04 UTC 2022: Installing sysadmin-vm image size of 1.3G took 81 seconds Tue Jul 19 07:27:06 UTC 2022: ---Starting to prepare repository--- Tue Jul 19 07:27:14 UTC 2022: File system creation on /dev/sda2 took 7 seconds Tue Jul 19 07:27:16 UTC 2022 (/etc/rc.d/init.d/pxe_install.sh): Check for unwanted iso and remove if required. Tue Jul 19 07:27:16 UTC 2022: Copying /iso/host.iso to repository /iso directory Tue Jul 19 07:27:18 UTC 2022: Copying /iso/ncs5500-sysadmin.iso to repository /iso directory Tue Jul 19 07:27:22 UTC 2022: Copy XR rpms to repository Tue Jul 19 07:27:24 UTC 2022: Copy giso_info.txt to repository Tue Jul 19 07:27:24 UTC 2022: Copying /iso/ncs5500-xr.iso to repository /iso directory Tue Jul 19 07:27:34 UTC 2022: Copying all ISOs to repository took 18 seconds Tue Jul 19 07:27:34 UTC 2022: Install EFI on /dev/sda4 Zermatt/Turin: Hardware Revision: 00000005 Tue Jul 19 07:27:34 UTC 2022 (/etc/rc.d/init.d/pxe_install.sh): ZERMATT: Patch grub. card_index=27016 Tue Jul 19 07:27:34 UTC 2022: Install finished on sda pd_reset_bios_boot_mode Resetting RP BIOS_BOOT_MODE register Automatic rebooting system after installation ... [ 244.576775] Requesting IOFPGA for system-wide warm reset operation [ 244 Booting CISCO Route Processor Module IOFPGA Information: Booted from : Primary FPGA Revison : 0x10019 ID : 0x20171FD3 Date : 0x20190924 Fab Revision : 0x5 Base Board Presence : 0x80000015 Board is : Turin CPU Board Booting from Primary BIOS BIOS secure boot verification results: PASS BIOS version: 1.22.0 Selected Boot Option: Harddisk Version 2.18.1260. Copyright (C) 2019 American Megatrends, Inc. BIOS Date: 11/02/2019 03:24:06 Ver: 1.22 Press \u0026lt;DEL\u0026gt; or \u0026lt;ESC\u0026gt; to enter setup. Image Name = \\EFI\\BOOT\\BOOTX64.EFI Image Size = 926750 Bytes ----------- Cisco Secure Boot: Begin ------------ ----------- Cisco Secure Boot: Verifying -------- Certificate parsing success Root Certificate found. Successfully got public key from issuer cert Image verified successfully. Booting.. ----------- Cisco Secure Boot: End -------------- GNU GRUB version 2.00 Press F2 to goto grub Menu.. Booting from Disk.. Loading Kernel.. Kernel Secure Boot Validation Result: PASSED Loading initrd.. Initrd Secure Boot Validation Result: PASSED [ 0.177495] Allocating netns hash table Enable selinux to relabel filesystem from initramfs Load IMA appraise policy: OK Switching to new root and running init. Sourcing /etc/sysconfig/udev Starting udev: udevd[481]: unknown key \u0026#39;RUN{builtin}\u0026#39; in /lib/udev/rules.d/64-btrfs-dm.rules:8 udevd[481]: invalid rule \u0026#39;/lib/udev/rules.d/64-btrfs-dm.rules:8\u0026#39; [ OK ] Running postinst /etc/rpm-postinsts/100-dnsmasq... Running postinst /etc/rpm-postinsts/101-nfs-utils-client... Running postinst /etc/rpm-postinsts/102-nfs-utils... update-rc.d: /etc/init.d/run-postinsts exists during rc.d purge (continuing) Removing any system startup links for run-postinsts ... /etc/rcS.d/S99run-postinsts Configuring network interfaces... done. Starting system message bus: dbus. Tue Jul 19 07:28:44 UTC 2022: in hostos !!!!!!!!! /etc/rc3.d/S08check-flash: line 487: pd_is_hdd_partition_needed: command not found UBI device number 3, total 144 LEBs (18855936 bytes, 18.0 MiB), available 0 LEBs (0 bytes), LEB size 130944 bytes (127.9 KiB) Punching IOFPGA watchdog UBI device number 5, total 32 LEBs (4190208 bytes, 4.0 MiB), available 0 LEBs (0 bytes), LEB size 130944 bytes (127.9 KiB) Punching IOFPGA watchdog Starting OpenBSD Secure Shell server: sshd generating ssh RSA key... generating ssh ECDSA key... generating ssh DSA key... generating ssh ED25519 key... sshd start/running, process 4020 Starting rpcbind daemon...done. Starting kdump:[ OK ] Starting random number generator daemon. Starting system log daemon...0 Starting kernel log daemon...0 tftpd-hpa disabled in /etc/default/tftpd-hpa Starting internet superserver: xinetd. Starting S.M.A.R.T. daemon: smartd. Starting Lighttpd Web Server: lighttpd. Starting libvirtd daemon: [ OK ] Starting crond: OK Starting cgroup-init Network ieobc_br defined from /etc/init/ieobc_br_network.xml Network local_br defined from /etc/init/local_br_network.xml Network xr_local_br defined from /etc/init/xr_local_br_network.xml Network ieobc_br started Network local_br started Network xr_local_br started mcelog start/running, process 6081 diskmon start/running, process 6083 Creating default host password file initctl: Unknown instance: /dev/ Starting host access on TTY /dev/ttyS1 serial (/dev/ttyS1) start/running, process 6386 Connecting to \u0026#39;default-sdr--1\u0026#39; console √ √ √ ²bootlogd: ioctl(/dev/pts/2, TIOCCONS): Device or resource busy Running postinst /etc/rpm-postinsts/100-dnsmasq... Running postinst /etc/rpm-postinsts/101-nfs-utils-client... Running postinst /etc/rpm-postinsts/102-nfs-utils... update-rc.d: /etc/init.d/run-postinsts exists during rc.d purge (continuing) Removing any system startup links for run-postinsts ... /etc/rcS.d/S99run-postinsts Configuring network interfaces... done. Starting system message bus: dbus. Starting OpenBSD Secure Shell server: sshd generating ssh RSA key... generating ssh ECDSA key... generating ssh DSA key... generating ssh ED25519 key... sshd start/running, process 2326 Starting rpcbind daemon...done. Starting random number generator daemon. Starting system log daemon...0 Starting kernel log daemon...0 tftpd-hpa disabled in /etc/default/tftpd-hpa Starting internet superserver: xinetd. Libvirt not initialized for container instance Starting crond: OK SIOCADDRT: File exists ios con0/RP0/CPU0 is now available Press RETURN to get started. RP/0/RP0/CPU0:Jul 19 07:34:09.199 UTC: fpd-serv[195]: %PKT_INFRA-FM-3-FAULT_MAJOR : ALARM_MAJOR :FPD-NEED-UPGRADE :DECLARE :0/RP0: 0/RP0/ADMIN0:Jul 19 07:34:13.722 UTC: inst_agent[3016]: %INFRA-INSTAGENT-4-XR_PART_PREP_IMG : SDR/XR image baking in progress 0/RP0/ADMIN0:Jul 19 07:35:02.762 UTC: inst_agent[3016]: %INFRA-INSTAGENT-4-XR_PART_PREP_RPM : SDR/XR additional RPM installation is in progress This product contains cryptographic features and is subject to United States and local country laws governing import, export, transfer and use. Delivery of Cisco cryptographic products does not imply third-party authority to import, export, distribute or use encryption. Importers, exporters, distributors and users are responsible for compliance with U.S. and local country laws. By using this product you agree to comply with applicable laws and regulations. If you are unable to comply with U.S. and local laws, return this product immediately. A summary of U.S. laws governing Cisco cryptographic products may be found at: http://www.cisco.com/wwl/export/crypto/tool/stqrg.html If you require further assistance please contact us by sending email to export@cisco.com. RP/0/RP0/CPU0:Jul 19 07:35:44.049 UTC: smartlicserver[166]: %LICENSE-SMART_LIC-3-EVAL_EXPIRED : Evaluation period expired RP/0/RP0/CPU0:Jul 19 07:35:44.052 UTC: smartlicserver[166]: %LICENSE-SMART_LIC-3-EVAL_EXPIRED : Evaluation period expired 0/RP0/ADMIN0:Jul 19 07:37:07.420 UTC: inst_agent[3016]: %INFRA-INSTAGENT-4-XR_PART_PREP_RESP : SDR/XR partition preparation completed successfully !!!!!!!!!!!!!!!!!!!! NO root-system username is configured. Need to configure root-system username. !!!!!!!!!!!!!!!!!!!! --- Administrative User Dialog --- Enter root-system username: RP/0/RP0/CPU0:Jul 19 07:37:14.556 UTC: smartlicserver[166]: %LICENSE-SMART_LIC-3-COMM_FAILED : Communications failure with the Cisco Smart Software Manager (CSSM) : Communications init failure 0/RP0/ADMIN0:Jul 19 07:37:25.251 UTC: vm_manager[3107]: %INFRA-VM_MANAGER-4-INFO : Info: vm_manager started VM default-sdr--2 % Entry must not be null. Enter root-system username: RP/0/RP0/CPU0:Jul 19 07:37:44.630 UTC: smartlicserver[166]: %LICENSE-SMART_LIC-3-COMM_FAILED : Communications failure with the Cisco Smart Software Manager (CSSM) : Communications init failure % Entry must not be null. Enter root-system username: cisco Enter secret: Enter secret again: 使用 install replace 安装 GISO 过程 # RP/0/RP0/CPU0:ios# install replace http://10.124.36.199:3333/ncs5500-goldenk9-x-7.4.2-v2.iso synchronous Thu Jul 21 14:53:54.563 UTC ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ Jul 21 14:54:04 Install operation 2 started by cisco: Jul 21 14:54:04 install replace source http://10.124.36.199:3333/ncs5500-goldenk9-x-7.4.2-v2.iso synchronous Jul 21 14:54:04 No install operation in progress at this moment Jul 21 14:54:04 Checking system is ready for install operation Jul 21 14:54:06 \u0026#39;install replace\u0026#39; in progress Jul 21 14:54:06 Label = v2 Jul 21 14:54:06 ISO ncs5500-goldenk9-x-7.4.2-v2.iso in input package list. Going to upgrade the system to version 7.4.2. Jul 21 14:54:06 Scheme : http Jul 21 14:54:06 Hostname : 10.124.36.199:3333 Jul 21 14:54:06 Collecting software state.. Jul 21 14:54:06 Getting platform Jul 21 14:54:06 Getting supported architecture Jul 21 14:54:06 Getting active packages from XR Jul 21 14:54:07 Getting inactive packages from XR Jul 21 14:54:10 Getting list of RPMs in local repo Jul 21 14:54:11 Getting list of provides of all active packages Jul 21 14:54:11 Getting provides of each rpm in repo Jul 21 14:54:11 Getting requires of each rpm in repo Jul 21 14:54:11 Fetching .... ncs5500-goldenk9-x-7.4.2-v2.iso Jul 21 14:55:15 Adding packages ncs5500-goldenk9-x-7.4.2-v2.iso Jul 21 14:55:15 Allocated operation ID 3 for install add RP/0/RP0/CPU0:Jul 21 14:55:44.148 UTC: fib_mgr[158]: %ROUTING-FIB-4-RETRYDB_NONEMPTY : One or more FIB object(s) have been in IPv4 retry queue for at least 120 seconds Jul 21 14:55:59 Activating ncs5500-goldenk9-x-7.4.2-v2 This install operation will reload the system, continue? [yes:no]:[yes] yes Jul 21 14:56:37 Optimized list to prepare after sanitizing input list for superseded packages: ncs5500-goldenk9-x-7.4.2-v2 Jul 21 14:56:37 Package list: Jul 21 14:56:37 ncs5500-goldenk9-x-7.4.2-v2 Jul 21 14:56:37 Action 1: install prepare action started Jul 21 14:56:37 Triggering prepare operation. This may take a while... RP/0/RP0/CPU0:Jul 21 14:59:44.149 UTC: fib_mgr[158]: %ROUTING-FIB-4-RETRYDB_NONEMPTY : One or more FIB object(s) have been in IPv4 retry queue for at least 240 seconds Jul 21 15:00:39 Action 1: install prepare action completed successfully Jul 21 15:00:41 Prepare operation completed. Trigger activate. This may take a while... Jul 21 15:00:41 Prepare completed. A new operation ID 4 will be taken up for activate operation Jul 21 15:00:41 Activate operation ID is: 4 for \u0026#39;install source\u0026#39; ID:2 Jul 21 15:00:43 Install operation 4 started by cisco: install activate noprompt synchronous Jul 21 15:00:45 Action 1: install activate action started Jul 21 15:00:45 The software will be activated with reload upgrade Jul 21 15:00:47 Following nodes are available for System Upgrade activate: Jul 21 15:00:47 0/RP0 Jul 21 15:03:06 Action 1: install activate action completed successfully Jul 21 15:03:17 Install operation 4 finished successfully RP/0/RP0/CPU0:Jul 21 15:03:17.122 UTC: sdr_instmgr[1204]: %INSTALL-INSTMGR-2-OPERATION_SUCCESS : Install operation 4 finished successfully Jul 21 15:03:17 Ending operation 4 RP/0/RP0/CPU0:Jul 21 15:03:17.475 UTC: sdr_instmgr[1204]: %INSTALL-INSTMGR-2-SYSTEM_RELOAD_INFO : The whole system will be reloaded to complete install operation 4 RP/0/RP0/CPU0:ios# 0/RP0/ADMIN0:Jul 21 15:04:16.931 UTC: shelf_mgr[3042]: %INFRA-SHELF_MGR-4-CARD_RELOAD : Reloading card 0/RP0 0/RP0/ADMIN0:Jul 21 15:04:26.901 UTC: vm_manager[3054]: %INFRA-VM_MANAGER-4-INFO : Info: vm_manager brought down VM default-sdr--2 0/RP0/ADMIN0:Jul 21 15:04:26.999 UTC: card_mgr[2955]: %DRIVER-CARD_MGR-4-IOFPGA_GREEN_MODE_PWR_UPDT : CARD_MGR MB-IOFPGA Green Mode Power Interrupt (Slice 0 DOWN:PWR_INT_JER_0:PWR_OFF) Stoping cgroup-init Stopping OpenBSD Secure Shell server: sshdinitctl: Unknown instance: Stopping system message bus: dbus. Stopping random number generator daemon. Stopping system log daemon...0 Stopping kernel log daemon...0 Stopping internet superserver: xinetd. Stopping crond: OK Stopping rpcbind daemon... done. Stopping S.M.A.R.T. daemon: smartd. Stopping Lighttpd Web Server: stopped /usr/sbin/lighttpd (pid 4458) lighttpd. Stopping libvirtd daemon: [ OK ] Deconfiguring network interfaces... done. Sending all processes the KILL signal... Unmounting remote filesystems... Deactivating swap... Unmounting local filesystems... mount: can\u0026#39;t find /mnt/ram in /etc/fstab Rebooting... [ 1313.386178] obfl_rb_notify_cb: reboot notifier called [ 1313.391835] writing reset reason 1, (null) [ 1314.213470] Requesting IOFPGA for system wide cold reset operation [ 1317.164827] Succesfully wrote mtdoops at 163840 size 32768 [ 1317.171254] pstore: Successfully logged oops info. Size 32740 Booting CISCO Route Processor Module ME Firmware Status #1: 0x000F0345 ME Firmware Status #2: 0x38004000 ME Current State: Operational ME Error Code: No Error ME Operational Firmware Version: 06:3.0.3.27 Baseboard IOFPGA Information: Revision = 0xF ID = 0xD4171FD3 Creation Date = 0x20180626 CPU Board IOFPGA Information: Revision = 0x10012 ID = 0xD0171FD3 Creation Date = 0x20180518 Fab Revision = P7 Baseboard Present! Board is : PeytoCR I-Temp CPU Board Booting from Upgrade Bios Code Signing Results:(0xC0) 0x0 Using Upgrade FPGA Product: XR OS PRODUCT Base Board IOFPGA found at PCI Bus: 0x0A Base Board MIFPGA found at PCI Bus: 0x0C CPU Board IOFPGA found at PCI Bus: 0x0D All FPGA devices are up and running. SATA Port 0: Micron_M500IT_ - 128.0 GB DISK Boot Partition = UEFI: Micron_M500IT_MTFDDAT256MBD, Partition 4 XR OS Boot Mode = 0x0 Selected Boot Option: XROS: Harddisk Boot Version 2.18.1260. Copyright (C) 2018 American Megatrends, Inc. Winterfell BIOS: v1.10.1 Date: 05/31/2018 22:19:51 Press \u0026lt;ESC\u0026gt; to enter setup. Image Name = \\EFI\\BOOT\\BOOTX64.EFI Image Size = 927262 Bytes ------------Cisco Secure Boot: Begin ------------ -----------Cisco Secure Boot: Verifying----------- Image verified successfully. Booting.. ------------Cisco Secure Boot: End ------------ GNU GRUB version 2.00 Press F2 to goto grub Menu.. Booting from Disk.. Loading Kernel.. Kernel Secure Boot Validation Result: PASSED Loading initrd.. Initrd Secure Boot Validation Result: PASSED [ 0.188892] Allocating netns hash table Enable selinux to relabel filesystem from initramfs Load IMA appraise policy: OK Switching to new root and running init. Sourcing /etc/sysconfig/udev Starting udev: udevd[496]: unknown key \u0026#39;RUN{builtin}\u0026#39; in /lib/udev/rules.d/64-btrfs-dm.rules:8 udevd[496]: invalid rule \u0026#39;/lib/udev/rules.d/64-btrfs-dm.rules:8\u0026#39; [ OK ] Running postinst /etc/rpm-postinsts/100-dnsmasq... Running postinst /etc/rpm-postinsts/101-nfs-utils-client... Running postinst /etc/rpm-postinsts/102-nfs-utils... update-rc.d: /etc/init.d/run-postinsts exists during rc.d purge (continuing) Removing any system startup links for run-postinsts ... /etc/rcS.d/S99run-postinsts Configuring network interfaces... done. Starting system message bus: dbus. Thu Jul 21 15:06:02 UTC 2022: in hostos !!!!!!!!! /etc/rc3.d/S08check-flash: line 487: pd_is_hdd_partition_needed: command not found UBI device number 3, total 144 LEBs (18855936 bytes, 18.0 MiB), available 0 LEBs (0 bytes), LEB size 130944 bytes (127.9 KiB) Punching IOFPGA watchdog UBI device number 5, total 32 LEBs (4190208 bytes, 4.0 MiB), available 0 LEBs (0 bytes), LEB size 130944 bytes (127.9 KiB) Punching IOFPGA watchdog Starting OpenBSD Secure Shell server: sshd generating ssh RSA key... generating ssh ECDSA key... generating ssh DSA key... generating ssh ED25519 key... sshd start/running, process 4112 Starting rpcbind daemon...done. Starting kdump:[ OK ] Starting random number generator daemon. Starting system log daemon...0 Starting kernel log daemon...0 tftpd-hpa disabled in /etc/default/tftpd-hpa Starting internet superserver: xinetd. Starting S.M.A.R.T. daemon: smartd. Starting Lighttpd Web Server: lighttpd. Starting libvirtd daemon: [ OK ] Starting crond: OK Starting cgroup-init Network ieobc_br defined from /etc/init/ieobc_br_network.xml Network local_br defined from /etc/init/local_br_network.xml Network xr_local_br defined from /etc/init/xr_local_br_network.xml Network ieobc_br started Network local_br started Network xr_local_br started mcelog start/running, process 6117 diskmon start/running, process 6118 Creating default host password file initctl: Unknown instance: /dev/ttyS0 /etc/rc.d/init.d/pd-functions: line 142: /bin: Is a directory Connecting to \u0026#39;default-sdr--1\u0026#39; console ootlogd: ioctl(/dev/pts/2, TIOCCONS): Device or resource busy Running postinst /etc/rpm-postinsts/100-dnsmasq... Running postinst /etc/rpm-postinsts/101-nfs-utils-client... Running postinst /etc/rpm-postinsts/102-nfs-utils... update-rc.d: /etc/init.d/run-postinsts exists during rc.d purge (continuing) Removing any system startup links for run-postinsts ... /etc/rcS.d/S99run-postinsts Configuring network interfaces... done. Starting system message bus: dbus. Starting OpenBSD Secure Shell server: sshd generating ssh RSA key... generating ssh ECDSA key... generating ssh DSA key... generating ssh ED25519 key... sshd start/running, process 2398 Starting rpcbind daemon...done. Starting random number generator daemon. Starting system log daemon...0 Starting kernel log daemon...0 tftpd-hpa disabled in /etc/default/tftpd-hpa Starting internet superserver: xinetd. Libvirt not initialized for container instance Starting crond: OK SIOCADDRT: File exists ios con0/RP0/CPU0 is now available Press RETURN to get started. 0/RP0/ADMIN0:Jul 21 15:08:11.826 UTC: envmon[3128]: %PKT_INFRA-FM-3-FAULT_MAJOR : ALARM_MAJOR :Power Module Fault (PM_VOUT_VOLT_OOR) :DECLARE :0/PM1: Power module is under HW_VOUT_OUT_OF_RANGE condition. 0/RP0/ADMIN0:Jul 21 15:08:11.826 UTC: envmon[3128]: %PKT_INFRA-FM-3-FAULT_MAJOR : ALARM_MAJOR :Power Module Error (PM_VIN_VOLT_OOR) :DECLARE :0/PM1: Power module is under HW_VIN_OUT_OF_RANGE condition. 0/RP0/ADMIN0:Jul 21 15:08:11.826 UTC: envmon[3128]: %PKT_INFRA-FM-3-FAULT_MAJOR : ALARM_MAJOR :Power Group redundancy lost :DECLARE :0: 0/RP0/ADMIN0:Jul 21 15:08:11.830 UTC: shelf_mgr[3160]: %INFRA-SHELF_MGR-3-HW_FAILURE_EVENT : HW failure event HW_EVENT_FAILURE, event_reason_str \u0026#39;No Input or HW Power Failure\u0026#39; for card 0/PM1 0/RP0/ADMIN0:Jul 21 15:08:11.830 UTC: shelf_mgr[3160]: %INFRA-SHELF_MGR-3-CARD_HW_FAILED : Card: 0/PM1 hardware state going to FAILED 0/RP0/ADMIN0:Jul 21 15:08:11.844 UTC: shelf_mgr[3160]: %INFRA-SHELF_MGR-3-HW_FAILURE_EVENT : HW failure event HW_EVENT_FAILURE, event_reason_str \u0026#39;No Input or HW Power Failure\u0026#39; for card 0/PM1 0/RP0/ADMIN0:Jul 21 15:08:11.845 UTC: shelf_mgr[3160]: %INFRA-SHELF_MGR-3-HW_FAILURE_EVENT : HW failure event HW_EVENT_FAILURE, event_reason_str \u0026#39;No Input or HW Power Failure\u0026#39; for card 0/PM1 0/RP0/ADMIN0:Jul 21 15:08:13.480 UTC: envmon[3128]: %PKT_INFRA-FM-3-FAULT_MAJOR : ALARM_MAJOR :Power Module Output Disabled (PM_OUTPUT_EN_PIN_HI) :DECLARE :0/PM1: Power module is under HW_OUTPUT_DISABLED condition. 0/RP0/ADMIN0:Jul 21 15:08:13.480 UTC: shelf_mgr[3160]: %INFRA-SHELF_MGR-3-HW_FAILURE_EVENT : HW failure event HW_EVENT_FAILURE, event_reason_str \u0026#39;No Input or HW Power Failure\u0026#39; for card 0/PM1 RP/0/RP0/CPU0:Jul 21 15:08:15.074 UTC: fpd-serv[260]: %PKT_INFRA-FM-3-FAULT_MAJOR : ALARM_MAJOR :FPD-NEED-UPGRADE :DECLARE :0/RP0: 0/RP0/ADMIN0:Jul 21 15:08:23.181 UTC: vm_manager[3190]: %INFRA-VM_MANAGER-4-INFO : Info: vm_manager started VM default-sdr--2 This product contains cryptographic features and is subject to United States and local country laws governing import, export, transfer and use. Delivery of Cisco cryptographic products does not imply third-party authority to import, export, distribute or use encryption. Importers, exporters, distributors and users are responsible for compliance with U.S. and local country laws. By using this product you agree to comply with applicable laws and regulations. If you are unable to comply with U.S. and local laws, return this product immediately. A summary of U.S. laws governing Cisco cryptographic products may be found at: http://www.cisco.com/wwl/export/crypto/tool/stqrg.html If you require further assistance please contact us by sending email to export@cisco.com. RP/0/RP0/CPU0:Jul 21 15:09:10.443 UTC: ifmgr[123]: %PKT_INFRA-LINK-3-UPDOWN : Interface MgmtEth0/RP0/CPU0/0, changed state to Down RP/0/RP0/CPU0:Jul 21 15:09:10.449 UTC: ifmgr[123]: %PKT_INFRA-LINK-3-UPDOWN : Interface MgmtEth0/RP0/CPU0/0, changed state to Up RP/0/RP0/CPU0:Jul 21 15:09:10.520 UTC: ifmgr[123]: %PKT_INFRA-LINK-3-UPDOWN : Interface MgmtEth0/RP0/CPU0/0, changed state to Down RP/0/RP0/CPU0:Jul 21 15:09:14.324 UTC: ifmgr[123]: %PKT_INFRA-LINK-3-UPDOWN : Interface MgmtEth0/RP0/CPU0/0, changed state to Up RP/0/RP0/CPU0:Jul 21 15:09:32.590 UTC: fpd-serv[260]: %PKT_INFRA-FM-3-FAULT_MAJOR : ALARM_MAJOR :FPD-NEED-UPGRADE :DECLARE :0/RP0: User Access Verification Username: cisco Password: RP/0/RP0/CPU0:5501-SE#show version Thu Jul 21 15:09:43.131 UTC Cisco IOS XR Software, Version 7.4.2 Copyright (c) 2013-2022 by Cisco Systems, Inc. Build Information: Built By : ingunawa Built On : Wed Feb 16 03:23:21 PST 2022 Built Host : iox-ucs-067 Workspace : /auto/srcarchive15/prod/7.4.2/ncs5500/ws Version : 7.4.2 Location : /opt/cisco/XR/packages/ Label : 7.4.2-v2 cisco NCS-5500 () processor System uptime is 1 minute RP/0/RP0/CPU0:5501-SE# RP/0/RP0/CPU0:5501-SE# RP/0/RP0/CPU0:5501-SE#show install active summary Thu Jul 21 15:09:46.030 UTC Label : 7.4.2-v2 Active Packages: 10 ncs5500-xr-7.4.2 version=7.4.2 [Boot image] ncs5500-mpls-2.1.0.0-r742 ncs5500-li-1.0.0.0-r742 ncs5500-ospf-3.0.0.0-r742 ncs5500-mcast-3.0.0.0-r742 ncs5500-eigrp-1.0.0.0-r742 ncs5500-isis-2.1.0.0-r742 ncs5500-mgbl-3.0.0.0-r742 ncs5500-mpls-te-rsvp-3.1.0.0-r742 ncs5500-k9sec-3.1.0.0-r742 RP/0/RP0/CPU0:5501-SE# 使用 USB 安装 GISO 的过程 # Aptio Setup Utility - Copyright (C) 2019 American Megatrends, Inc. Security Cisco Boot Manager ┌────────────────────────────────────────────────────┬─────────────────────────┐ │ │ │ │ List of Boot Options │ │ │ UEFI: Micron_M600_MTFDDAT064MBF, Partition 4 │ │ │ UEFI: Built-in iPXE │ │ │ UEFI: Built-in Grub │ │ │ UEFI: Built-in Shell │ │ │ UEFI: SanDisk, Partition 1 │ │ │ P0: Micron_M600_MTFDDAT064MBF │ │ │ │ │ │ │─────────────────────────│ │ │\u0026gt;\u0026lt;: Select Screen │ │ │: Select Item │ │ │Enter: Select │ │ │+/-: Change Opt. │ │ │F1: General Help │ │ │ESC: Exit │ │ │ │ │ │ │ │ │ │ └────────────────────────────────────────────────────┴─────────────────────────┘ Version 2.18.1260. Copyright (C) 2019 American Megatrends, Inc. AB Image Name = \\EFI\\BOOT\\BOOTX64.EFI Image Size = 926750 Bytes ----------- Cisco Secure Boot: Begin ------------ ----------- Cisco Secure Boot: Verifying -------- Certificate parsing success Root Certificate found. Successfully got public key from issuer cert Image verified successfully. Booting.. ----------- Cisco Secure Boot: End -------------- GNU GRUB version 2.00 Press F2 to goto grub Menu.. Booting from USB.. Loading Kernel.. Kernel Secure Boot Validation Result: PASSED Loading initrd.. Initrd Secure Boot Validation Result: PASSED [ 0.668033] Allocating netns hash table Expanding ISO image 4126418 blocks /iso/iosxrwbd-ddc.installer does not exist Skip labeling of root when start with root on non-persistent storage Starting udev udevd[247]: unknown key \u0026#39;RUN{builtin}\u0026#39; in /lib/udev/rules.d/64-btrfs-dm.rules:8 udevd[247]: invalid rule \u0026#39;/lib/udev/rules.d/64-btrfs-dm.rules:8\u0026#39; Running postinst /etc/rpm-postinsts/100-dnsmasq... Running postinst /etc/rpm-postinsts/101-nfs-utils-client... Running postinst /etc/rpm-postinsts/102-nfs-utils... update-rc.d: /etc/init.d/run-postinsts exists during rc.d purge (continuing) Removing any system startup links for run-postinsts ... /etc/rcS.d/S99run-postinsts Configuring network interfaces... done. Starting system message bus: dbus. Starting OpenBSD Secure Shell server: sshd generating ssh RSA key... generating ssh ECDSA key... generating ssh DSA key... generating ssh ED25519 key... sshd start/running, process 1309 Starting rpcbind daemon...done. Starting random number generator daemon. Starting system log daemon...0 Starting kernel log daemon...0 tftpd-hpa disabled in /etc/default/tftpd-hpa Starting internet superserver: xinetd. Starting S.M.A.R.T. daemon: smartd. Mon Jul 25 13:01:34 UTC 2022: Detected /iso/host.iso mount: /dev/loop0 is write-protected, mounting read-only Mon Jul 25 13:01:34 UTC 2022: Mounted /iso/host.iso to /tmp/isomnt.hrlJuO Mon Jul 25 13:01:34 UTC 2022: Found /tmp/isomnt.hrlJuO/rpm/ncs5500-sysadmin-hostos-7.4.2-r742.host.x86_64.rpm in host.iso Mon Jul 25 13:01:34 UTC 2022: Installing /tmp/isomnt.hrlJuO/rpm/ncs5500-sysadmin-hostos-7.4.2-r742.host.x86_64.rpm warning: /tmp/isomnt.hrlJuO/rpm/ncs5500-sysadmin-hostos-7.4.2-r742.host.x86_64.rpm: Header V4 RSA/SHA256 signature: NOKEY, key ID 5746bd08 Preparing packages for installation... ncs5500-sysadmin-hostos-7.4.2-r742.host.x86_64 ****Zermatt**** ls: cannot access /opt/cisco/hostos/etc/usb-install/cisco-instance/zermatt: No such file or directory ls: cannot access /etc/dhcp/cisco-instance/zermatt: No such file or directory Mon Jul 25 13:01:35 UTC 2022: Passing control to /etc/rc.d/init.d/pxe_install.sh start Logging started at Mon Jul 25 13:01:35 UTC 2022... Mon Jul 25 13:01:36 UTC 2022: Sourcing /etc/init.d/pi_grub_and_menu_lst_update.sh PI script Mon Jul 25 13:01:36 UTC 2022: Sourcing /etc/init.d/mount_pd_fs.sh PI script cmdline = BOOT_IMAGE=(loop)/boot/bzImage root=/dev/ram install=/dev/sda console=ttyS0,115200 prod=1 crashkernel=192M@0 bigphysarea=10M quiet pci=assign-busses noissu aer=off pci=hpmemsize=0M,hpiosize=0M giso_boot boot_mode=4 Mon Jul 25 13:01:36 UTC 2022: Preparing disk for PLATFORM=zermatt: Mon Jul 25 13:01:36 UTC 2022: In collect_archive_interrupted_bake_logs function.... Mon Jul 25 13:01:36 UTC 2022: Debug partition exist and is getting mounted.. Mon Jul 25 13:01:36 UTC 2022: Debug partition mounted on /tmp/bakelog Mon Jul 25 13:01:36 UTC 2022: Found 0 log files in debug partition Mon Jul 25 13:01:36 UTC 2022: Previous bake was successful Mon Jul 25 13:01:36 UTC 2022: Secondary disk is not present pd_punch_watchdog Punching IOFPGA watchdog Mon Jul 25 13:01:36 UTC 2022: Installer will install image on sda Mon Jul 25 13:01:36 UTC 2022: Checking disks: sda Mon Jul 25 13:01:36 UTC 2022: Primary disk /dev/sda health check failed Mon Jul 25 13:01:37 UTC 2022: Removing old boot partition Mon Jul 25 13:01:37 UTC 2022: Preparing debug partition zermatt Logging started at Mon Jul 25 13:01:37 UTC 2022... Mon Jul 25 13:01:37 UTC 2022: Removing old volumes Mon Jul 25 13:01:37 UTC 2022: Inside Volume-Cleaning Function Mon Jul 25 13:01:37 UTC 2022: Removed LVM /dev/panini_vol_grp/host_lv0 for Panini Mon Jul 25 13:01:37 UTC 2022: Removed LVM /dev/panini_vol_grp/host_data_scratch_lv0 for Panini Mon Jul 25 13:01:37 UTC 2022: Removed LVM /dev/panini_vol_grp/host_data_log_lv0 for Panini Mon Jul 25 13:01:37 UTC 2022: Removed LVM /dev/panini_vol_grp/host_data_config_lv0 for Panini Mon Jul 25 13:01:37 UTC 2022: Removed LVM /dev/panini_vol_grp/calvados_lv0 for Panini Mon Jul 25 13:01:37 UTC 2022: Removed LVM /dev/panini_vol_grp/calvados_data_lv0 for Panini Mon Jul 25 13:01:38 UTC 2022: Removed LVM /dev/panini_vol_grp/xr_lv0 for Panini Mon Jul 25 13:01:38 UTC 2022: Removed LVM /dev/panini_vol_grp/xr_lcp_lv0 for Panini Mon Jul 25 13:01:38 UTC 2022: Removed LVM /dev/app_vol_grp/app_lv0 for App-Host Mon Jul 25 13:01:38 UTC 2022: Removed App-Vol Grp app_vol_grp Mon Jul 25 13:01:38 UTC 2022: Removed Panini Vol-Grp panini_vol_grp Mon Jul 25 13:01:39 UTC 2022: Removed PV Mon Jul 25 13:01:39 UTC 2022: Exiting from the Volume Cleaning Section Mon Jul 25 13:01:39 UTC 2022 (/etc/rc.d/init.d/pxe_install.sh): Golden ISO type = 1.1 and PKG_VER = 1.0 Mon Jul 25 13:01:39 UTC 2022 (/etc/rc.d/init.d/pxe_install.sh): Current Boot: USB Mon Jul 25 13:01:39 UTC 2022 (/etc/rc.d/init.d/pxe_install.sh): USB path: /dev/sdb1 Mon Jul 25 13:02:49 UTC 2022: Going to copy GISO files... Mon Jul 25 13:02:49 UTC 2022: Starting of copy_giso_files function Mon Jul 25 13:02:55 UTC 2022: Ending of copy_giso_files function Mon Jul 25 13:02:55 UTC 2022: Copied Golden ISO files... Mon Jul 25 13:03:02 UTC 2022: Md5sum verification succeeded Mon Jul 25 13:03:02 UTC 2022: ---Starting to prepare mb_disk--- Mon Jul 25 13:03:02 UTC 2022: Mon Jul 25 13:03:02 UTC 2022: ---Starting to prepare sda--- Mon Jul 25 13:03:03 UTC 2022: /dev/sda disk size is 64023MB Mon Jul 25 13:03:03 UTC 2022: Using remaining disk space 21109 MB for secondary disk functions Mon Jul 25 13:03:03 UTC 2022: LVM size (31744 MB) DEBUG part size (10 MB) Mon Jul 25 13:03:03 UTC 2022: Creating partitions, BOOT=900MB, LVM=31744MB, EFI=20MB Mon Jul 25 13:03:03 UTC 2022: Created partition of size 21109 for use as secondary disk Mon Jul 25 13:03:03 UTC 2022: Created Partition of size 4096 for use of App-Volume Mon Jul 25 13:03:03 UTC 2022: Partition creation on /dev/sda took 1 seconds Mon Jul 25 13:03:03 UTC 2022: File system creation on /dev/sda1 took 0 seconds Mon Jul 25 13:03:03 UTC 2022: Partitioning PCI block device /dev/sda5 Mon Jul 25 13:03:03 UTC 2022: /dev/sda5 disk size is 21109MB Mon Jul 25 13:03:04 UTC 2022: Final return val 0 .... Mon Jul 25 13:03:04 UTC 2022: Retaining Volume Group pci_disk1 Mon Jul 25 13:03:04 UTC 2022: Install boot image on /dev/sda1 Mon Jul 25 13:03:20 UTC 2022: Starting Calvados patch for lxc for hostos Mon Jul 25 13:03:20 UTC 2022: Uninstalling rpm gdb Mon Jul 25 13:03:21 UTC 2022 (/etc/init.d/calvados_patch_lxc_iso.sh): ZERMATT: Patch host Mon Jul 25 13:03:21 UTC 2022 (/etc/init.d/calvados_patch_lxc_iso.sh): ZERMATT: Patch host done Enable selinux to relabel filesystem from initramfs Checking SELinux security contexts: * First booting, filesystem will be relabeled... Mon Jul 25 13:03:27 UTC 2022: Finished Calvados patch for lxc Mon Jul 25 13:03:28 UTC 2022: Installing host image size of 498M took 24 seconds Mon Jul 25 13:03:28 UTC 2022: Mon Jul 25 13:03:28 UTC 2022: ---Starting to prepare host logical volume--- Mon Jul 25 13:03:28 UTC 2022 (/etc/rc.d/init.d/pxe_install.sh): Create app volume on sda Physical volume \u0026#34;/dev/sda6\u0026#34; successfully created Mon Jul 25 13:03:44 UTC 2022 (/etc/rc.d/init.d/pxe_install.sh): card_value is 0x20171FD3 Mon Jul 25 13:03:44 UTC 2022 (/etc/rc.d/init.d/pxe_install.sh): ZERMATT: card_inst=TURIN-RP,TURIN-SYNC-RP card_type=RP Mon Jul 25 13:03:46 UTC 2022: Starting Calvados patch for lxc for hostos Mon Jul 25 13:03:47 UTC 2022: Uninstalling rpm gdb Mon Jul 25 13:03:47 UTC 2022 (/etc/init.d/calvados_patch_lxc_iso.sh): ZERMATT: Patch host Mon Jul 25 13:03:47 UTC 2022 (/etc/init.d/calvados_patch_lxc_iso.sh): ZERMATT: Patch host done Enable selinux to relabel filesystem from initramfs Checking SELinux security contexts: * First booting, filesystem will be relabeled... Mon Jul 25 13:03:53 UTC 2022: Finished Calvados patch for lxc Mon Jul 25 13:03:54 UTC 2022: Mon Jul 25 13:03:54 UTC 2022: ---Starting to prepare calvados logical volume--- Mon Jul 25 13:03:54 UTC 2022: Create sub partition on /dev/panini_vol_grp/calvados_lv0 Mon Jul 25 13:03:55 UTC 2022: Create data sub partition on /dev/panini_vol_grp/calvados_data_lv0 Mon Jul 25 13:04:04 UTC 2022: File system creation on /dev/panini_vol_grp/calvados_lv0 took 10 seconds Mon Jul 25 13:04:05 UTC 2022: Install sysadmin-vm image on /dev/panini_vol_grp/calvados_lv0 Mon Jul 25 13:04:17 UTC 2022 (/etc/rc.d/init.d/pxe_install.sh): card_value is 0x20171FD3 Mon Jul 25 13:04:17 UTC 2022 (/etc/rc.d/init.d/pxe_install.sh): ZERMATT: card_inst=TURIN-RP,TURIN-SYNC-RP card_type=RP Mon Jul 25 13:04:17 UTC 2022: sysadmin-vm: RP based installation Mon Jul 25 13:05:15 UTC 2022: Starting Calvados patch for lxc for sysadmin-vm Mon Jul 25 13:05:15 UTC 2022: Uninstalling rpm gdb Mon Jul 25 13:05:15 UTC 2022: Uninstalling rpm smartmontools Mon Jul 25 13:05:15 UTC 2022 (/etc/init.d/calvados_patch_lxc_iso.sh): ZERMATT: Patch calvados Mon Jul 25 13:05:16 UTC 2022 (/etc/init.d/calvados_patch_lxc_iso.sh): Cleaning up LXC Mon Jul 25 13:05:16 UTC 2022 (/etc/init.d/calvados_patch_lxc_iso.sh): ZERMATT: Patch calvados done Enable selinux to relabel filesystem from initramfs Checking SELinux security contexts: * First booting, filesystem will be relabeled... Mon Jul 25 13:05:23 UTC 2022: Finished Calvados patch for lxc Mon Jul 25 13:05:26 UTC 2022: Installing sysadmin-vm image size of 1.3G took 81 seconds Mon Jul 25 13:05:28 UTC 2022: ---Starting to prepare repository--- Mon Jul 25 13:05:36 UTC 2022: File system creation on /dev/sda2 took 8 seconds Mon Jul 25 13:05:38 UTC 2022 (/etc/rc.d/init.d/pxe_install.sh): Check for unwanted iso and remove if required. Mon Jul 25 13:05:38 UTC 2022: Copying /iso/host.iso to repository /iso directory Mon Jul 25 13:05:39 UTC 2022: Copying /iso/ncs5500-sysadmin.iso to repository /iso directory Mon Jul 25 13:05:43 UTC 2022: Copy XR rpms to repository Mon Jul 25 13:05:45 UTC 2022: Copy XR Config to repository Mon Jul 25 13:05:45 UTC 2022: Copy giso_info.txt to repository Mon Jul 25 13:05:45 UTC 2022: Copying /iso/ncs5500-xr.iso to repository /iso directory Mon Jul 25 13:05:55 UTC 2022: Copying all ISOs to repository took 17 seconds Mon Jul 25 13:05:55 UTC 2022: Install EFI on /dev/sda4 Zermatt/Turin: Hardware Revision: 00000005 Mon Jul 25 13:05:55 UTC 2022 (/etc/rc.d/init.d/pxe_install.sh): ZERMATT: Patch grub. card_index=27016 Mon Jul 25 13:05:55 UTC 2022: Install finished on sda pd_reset_bios_boot_mode Resetting RP BIOS_BOOT_MODE register Automatic rebooting system after installation ... [ 305.677968] Requesting IOFPGA for system-wide warm reset operation [ 305.6 Booting CISCO Route Processor Module IOFPGA Information: Booted from : Primary FPGA Revison : 0x10019 ID : 0x20171FD3 Date : 0x20190924 Fab Revision : 0x5 Base Board Presence : 0x80000015 Board is : Turin CPU Board Booting from Primary BIOS BIOS secure boot verification results: PASS BIOS version: 1.22.0 Selected Boot Option: Harddisk Version 2.18.1260. Copyright (C) 2019 American Megatrends, Inc. BIOS Date: 11/02/2019 03:24:06 Ver: 1.22 Press \u0026lt;DEL\u0026gt; or \u0026lt;ESC\u0026gt; to enter setup. Image Name = \\EFI\\BOOT\\BOOTX64.EFI Image Size = 926750 Bytes ----------- Cisco Secure Boot: Begin ------------ ----------- Cisco Secure Boot: Verifying -------- Certificate parsing success Root Certificate found. Successfully got public key from issuer cert Image verified successfully. Booting.. ----------- Cisco Secure Boot: End -------------- GNU GRUB version 2.00 Press F2 to goto grub Menu.. Booting from Disk.. Loading Kernel.. Kernel Secure Boot Validation Result: PASSED Loading initrd.. Initrd Secure Boot Validation Result: PASSED [ 0.177604] Allocating netns hash table Enable selinux to relabel filesystem from initramfs Load IMA appraise policy: OK Switching to new root and running init. Sourcing /etc/sysconfig/udev Starting udev: udevd[483]: unknown key \u0026#39;RUN{builtin}\u0026#39; in /lib/udev/rules.d/64-btrfs-dm.rules:8 udevd[483]: invalid rule \u0026#39;/lib/udev/rules.d/64-btrfs-dm.rules:8\u0026#39; [ OK ] Running postinst /etc/rpm-postinsts/100-dnsmasq... Running postinst /etc/rpm-postinsts/101-nfs-utils-client... Running postinst /etc/rpm-postinsts/102-nfs-utils... update-rc.d: /etc/init.d/run-postinsts exists during rc.d purge (continuing) Removing any system startup links for run-postinsts ... /etc/rcS.d/S99run-postinsts Configuring network interfaces... done. Starting system message bus: dbus. Mon Jul 25 13:07:06 UTC 2022: in hostos !!!!!!!!! /etc/rc3.d/S08check-flash: line 487: pd_is_hdd_partition_needed: command not found UBI device number 3, total 144 LEBs (18855936 bytes, 18.0 MiB), available 0 LEBs (0 bytes), LEB size 130944 bytes (127.9 KiB) Punching IOFPGA watchdog UBI device number 5, total 32 LEBs (4190208 bytes, 4.0 MiB), available 0 LEBs (0 bytes), LEB size 130944 bytes (127.9 KiB) Punching IOFPGA watchdog Starting OpenBSD Secure Shell server: sshd generating ssh RSA key... generating ssh ECDSA key... generating ssh DSA key... generating ssh ED25519 key... sshd start/running, process 4086 Starting rpcbind daemon...done. Starting kdump:[ OK ] Starting random number generator daemon. Starting system log daemon...0 Starting kernel log daemon...0 tftpd-hpa disabled in /etc/default/tftpd-hpa Starting internet superserver: xinetd. Starting S.M.A.R.T. daemon: smartd . Starting Lighttpd Web Server: lighttpd. Starting libvirtd daemon: [ OK ] Starting crond: OK Starting cgroup-init Network ieobc_br defined from /etc/init/ieobc_br_network.xml Network local_br defined from /etc/init/local_br_network.xml Network xr_local_br defined from /etc/init/xr_local_br_network.xml Network ieobc_br started Network local_br started Network xr_local_br started mcelog start/running, process 6146 diskmon start/running, process 6149 Creating default host password file initctl: Unknown instance: /dev/ Starting host access on TTY /dev/ttyS1 serial (/dev/ttyS1) start/running, process 6451 Connecting to \u0026#39;default-sdr--1\u0026#39; console √ √ √ ²bootlogd: ioctl(/dev/pts/2, TIOCCONS): Device or resource busy Running postinst /etc/rpm-postinsts/100-dnsmasq... Running postinst /etc/rpm-postinsts/101-nfs-utils-client... Running postinst /etc/rpm-postinsts/102-nfs-utils... update-rc.d: /etc/init.d/run-postinsts exists during rc.d purge (continuing) Removing any system startup links for run-postinsts ... /etc/rcS.d/S99run-postinsts Configuring network interfaces... done. Starting system message bus: dbus. Starting OpenBSD Secure Shell server: sshd generating ssh RSA key... generating ssh ECDSA key... generating ssh DSA key... generating ssh ED25519 key... sshd start/running, process 2326 Starting rpcbind daemon...done. Starting random number generator daemon. Starting system log daemon...0 Starting kernel log daemon...0 tftpd-hpa disabled in /etc/default/tftpd-hpa Starting internet superserver: xinetd. Libvirt not initialized for container instance Starting crond: OK SIOCADDRT: File exists osSignalTask: started ios con0/RP0/CPU0 is now available Press RETURN to get started. RP/0/RP0/CPU0:Jul 25 13:12:46.164 UTC: fpd-serv[300]: %PKT_INFRA-FM-3-FAULT_MAJOR : ALARM_MAJOR :FPD-NEED-UPGRADE :DECLARE :0/RP0: 0/RP0/ADMIN0:Jul 25 13:12:51.060 UTC: inst_agent[3016]: %INFRA-INSTAGENT-4-XR_PART_PREP_IMG : SDR/XR image baking in progress 0/RP0/ADMIN0:Jul 25 13:13:39.276 UTC: inst_agent[3016]: %INFRA-INSTAGENT-4-XR_PART_PREP_RPM : SDR/XR additional RPM installation is in progress This product contains cryptographic features and is subject to United States and local country laws governing import, export, transfer and use. Delivery of Cisco cryptographic products does not imply third-party authority to import, export, distribute or use encryption. Importers, exporters, distributors and users are responsible for compliance with U.S. and local country laws. By using this product you agree to comply with applicable laws and regulations. If you are unable to comply with U.S. and local laws, return this product immediately. A summary of U.S. laws governing Cisco cryptographic products may be found at: http://www.cisco.com/wwl/export/crypto/tool/stqrg.html If you require further assistance please contact us by sending email to export@cisco.com. RP/0/RP0/CPU0:Jul 25 13:14:21.091 UTC: smartlicserver[244]: %LICENSE-SMART_LIC-3-EVAL_EXPIRED : Evaluation period expired RP/0/RP0/CPU0:Jul 25 13:14:21.094 UTC: smartlicserver[244]: %LICENSE-SMART_LIC-3-EVAL_EXPIRED : Evaluation period expired 0/RP0/ADMIN0:Jul 25 13:16:00.865 UTC: inst_agent[3016]: %INFRA-INSTAGENT-4-XR_PART_PREP_RESP : SDR/XR partition preparation completed successfully Note # NCS5501 PXE upgrade from 6.6.25 to 7.4.2 cost almost 20mins. NCS55A2 install replaces upgrade from 7.1.2 to 7.4.2 cost almost 15mins. NCS5501 USB upgrade to 742 cost almost 20mins ","date":"21 July 2022","externalUrl":null,"permalink":"/blog/giso/","section":"Blog","summary":"最近尝试了下使用 Golden ISO 升级了下设备，发现其比使用官方提供的 mini 的 ISO 镜像更方便，时间更短，属实是太方便了。","title":"Use Golden Image to upgrade your eXR router | NCS55/ASR9K","type":"blog"},{"content":"思科 SP 系列高端路由器都是由引擎 RP/线卡（业务卡/LC）/矩阵卡 FC（fabric card）等组成，但是只有引擎 RP 上存在 console 口，其他的板卡都是没有物理的 console 线路，所以在排查业务板卡等系列没有物理 console 线路的板卡启动失败的问题时，往往都只能 login 设备采集业务板卡的启动 log，而往往这些 log 都很简单，并不能告诉我们这个板卡出了什么问题，那其实我们有内置的 console 线路，可以让我们能够跳转到其他板卡的 console 口，查看启动的详细 log。方法如下:\nCRS # CRS 使用的 32bit 的系统，我们也称之为 cXR，而且有且只有 32bit 版本的系统，并且最有一个软件版本为 6.7.4，后续不会再有软件更新。一般来说 CRS 的硬件故障很容易从 log 中识别出来原因，所以下面跳转到板卡 console 的方式并不常用，了解即可，退出符为CTRL+/\nRP/0/RP0/CPU0:CRS-D# run console_tunneling 0/0/cpu0 Thu Jun 23 15:46:27.360 EDT Trying to connect to node 0/0/CPU0... Connected to node 0/0/CPU0. Escape character is \u0026#39;^_\u0026#39;. Connection to node 0/0/CPU0 closed. ASR9000 # cXR(32 bit) # 命令为run attachCon,退出符为detach,即需要敲出这个单词退出 console.\nRP/0/RSP0/CPU0:ASR-9006-A#run attachCon 0/0/CPU0 Thu Jun 23 15:42:15.600 UTC attachCon: Starting console session to node 0/0/CPU0 attachCon: To quit console session type \u0026#39;detach\u0026#39; attachCon: WARNING - Type only \u0026#39;detach\u0026#39; in the shell. Do not combine other keys. TESTING enabling interrupt for uart: mask 0x40, enable 1 reg_val 0x40 Current Baud 115200 Setting Baud to 9600 # # detach Terminating console to node 0/0/CPU0.. TESTING enabling interrupt for uart: mask 0x40, enable 0 reg_val 0x0 RP/0/RSP0/CPU0:ASR-9006-A# RP/0/RSP0/CPU0:ASR-9006-A#run attachCon 0/0/CPU0 115200 Thu Jun 23 15:42:51.083 UTC attachCon: Starting console session to node 0/0/CPU0 attachCon: To quit console session type \u0026#39;detach\u0026#39; attachCon: WARNING - Type only \u0026#39;detach\u0026#39; in the shell. Do not combine other keys. TESTING enabling interrupt for uart: mask 0x40, enable 1 reg_val 0x40 Current Baud 115200 Setting Baud to 115200 Terminating console to node 0/0/CPU0.. TESTING enabling interrupt for uart: mask 0x40, enable 0 reg_val 0x0 RP/0/RSP0/CPU0:ASR-9006-A# eXR(64 bit) # 命令为attachCon,CTRL+W 退出\nRP/0/RP0/CPU0:ASR-9912-A#admin sysadmin-vm:0_RP0# run [sysadmin-vm:0_RP0:~]$ [sysadmin-vm:0_RP0:~]$chvrf 0 bash [sysadmin-vm:0_RP0:~]$attachCon 0/1 =============================================== ==== Connecting to Line Card ===== =============================================== Line Card: No 1 Press \u0026lt;Ctrl-W\u0026gt; to disconnect Enabling 16550 on UART 1 baud rate 115200 NCS55 # sysadmin-vm:0_RP0# run Thu Jun 23 16:27:28.804 UTC+00:00 [sysadmin-vm:0_RP0:~]$ [sysadmin-vm:0_RP0:~]$ [sysadmin-vm:0_RP0:~]$.attach_console 1 MASTER-RP:Proceding to remote console of Slot: 1 old data: 0 new data: 80010000 Escape character is \u0026#39;^x\u0026#39; [control+x] host:0_LC0 login: host:0_LC0 login: host:0_LC0 login: Exited [sysadmin-vm:0_RP0:~]$ Or sysadmin-vm:0_RP0# sysadmin-vm:0_RP0# sysadmin-vm:0_RP0# run /opt/cisco/calvados/sbin/rconsole -l 0/SC0 NCS6000 # NCS6008: sysadmin-vm:0_RP0# run Thu Jun 23 17:35:39.459 UTC [sysadmin-vm:0_RP0:~]$ [sysadmin-vm:0_RP0:~]$ [sysadmin-vm:0_RP0:~]$ [sysadmin-vm:0_RP0:~]$chvrf 0 /opt/cisco/calvados/sbin/rconsole -l 0/0 Connecting to location 0/0 (backplane-slotid 16, console 0) Escape sequence is \u0026#34;end\u0026#34; Cisco 8000 # Cisco 8000 上使用的是 rconsole, slot 0 代表 0/0/cpu0,这个命令无法连接到 FC 卡。\nRP/0/RP0/CPU0:8808-A#run rconsole -s 0 Tue Aug 8 16:43:43.894 UTC ---------------------------------------------------------- 8 slot chassis Target slot # : Logical=0 Physical=2 Target slot board_id status register (0x10BC): 0x2420017a Source slot # : Logical=0 Physical=30 Source slot board_id status register (0x10BC): 0x22000177 Source slot type : 0x20 Setting up required configs on source slot (RP0) .. Setting up required configs on target slot (0) .. ---------------------------------------------------------- Launching rconsole to slot 0x2, Use Ctrl-x to quit ASR9000 eXR LC console log # 按ESC可以中断板卡其他,如下为 boot 菜单的顺序,第一个为XR EOBC BOOT,可以理解为 PXE 从主引擎 copy image 启动.\nBuild-in Shell, 选项可以进行一些特殊镜像的引导.\nimage-20220624021002985 如过不中断板卡启动,板卡会自动选择 XR EOBC BOOT,开始从主引擎引导镜像,如下:\n板卡执行 PXE 启动,设置自己的 IP 地址为 127.1.2.2, 改地址为自己 host vm 一个网口地址;\n127.1.1.27 为主引擎 Host vm 中的一个网口;\n板卡会通过该网段去主引擎 copy 镜像,\n------------XR EOBC Boot------------ Brdcm_bringup_active_loop_free_links---efi Trying LOCAL SC Path ..Enabling port 34 Disabling port 35 Port [23] (0-base, flag:0x00000200): no_lpbk link_up 2.5G full duplex Port [34] (0-base, flag:0x00000200): no_lpbk link_up 1G full duplex Port [35] (0-base, flag:0x00000000): no_lpbk link_down 2.5G full duplex \u0026gt;\u0026gt;Checking Media Presence...... \u0026gt;\u0026gt;Media Present...... \u0026gt;\u0026gt;Start PXE over IPv4. Station IP address is 127.1.2.2 XR-EOBC get boot file size request . Server IP address is 127.1.1.27 NBP filename is ipxe-lc.efi NBP filesize is 280446 Bytes \u0026gt;\u0026gt;Checking Media Presence...... \u0026gt;\u0026gt;Media Present...... Downloading NBP file... Downloading NBP file-Mtftp: . Succeed to download NBP file. PXE Image Name = ipxe-lc.efi PXE Image Size = 280446 Bytes ------------Cisco Secure Boot: Begin ------------ -----------Cisco Secure Boot: Verifing----------- Certificate parsing success Root Certificate found. Successfully got public key from issuer cert Image verified successfully. Booting.. ------------Cisco Secure Boot: End ------------ iPXE initialising devices... GBE0 NetBoot Installed GBE0 NetBoot Installed Sysconf checksum failed. Using default values Fail to retrieve boot mode ok iPXE 1.0.0+ (a59e9a) -- Open Source Network Boot Firmware -- http://ipxe.org Features: DNS HTTP HTTPS TFTP VLAN EFI ISO9660 NBI Menu Trying net0... net0: 00:00:01:02:00:00 using NII on NII-PCI00:14.0 (open) [Link:down, TX:0 TXE:0 RX:0 RXE:0] [Link status: Unknown (http://ipxe.org/1a086194)] Configuring (net0 00:00:01:02:00:00).................. ok net0: 127.1.2.2/255.255.0.0 net0: fe80::200:1ff:fe02:0/64 Next server: 127.1.1.27 Filename: http://127.1.1.27/ipxe-lc.ipxe.slot26 http://127.1.1.27/ipxe-lc.ipxe.slot26... ok http://127.1.1.27/system_image.iso... ok Memory required for image[system_image.iso]: 1739829248, available: 2145112064 Certificate parsing success Root Certificate found. Successfully got public key from issuer cert Image verified sucessfully. Booting... Booting iso-image@0x3d84c5000(1739829248), bzImage@0x3d8502800(6276814) Certificate parsing success Root Certificate found. Successfully got public key from issuer cert Image verified successfully. Booting.. **** PASS: secure boot verification of image: bzImage**** [ 0.000000] Initializing cgroup subsys cpuset [ 0.000000] Initializing cgroup subsys cpu [ 0.000000] Initializing cgroup subsys cpuacct [ 0.000000] Linux version 3.14.23-WR7.0.0.2_standard (hetsoi@calcium-99.cisco.com) (gcc version 4.9.1 (Wind River Linux 4.9.1-7) ) #1 SMP Tue Jun 30 22:17:10 PDT 2020 [ 0.000000] Command line: bzImage root=/dev/ram platform=fretta install=/dev/sda boardtype=LC vmtype=hostos prod=1 crashkernel=192M@0 bigphysarea=10M pci=assign-busses noissu pci=hpmemsize=0M,hpiosize=0M console=ttyS1,115200 initrd=initrd.img [ 0.000000] e820: BIOS-provided physical RAM map: [ 0.000000] BIOS-e820: [mem 0x0000000000000000-0x000000000009ffff] usable [ 0.000000] BIOS-e820: [mem 0x0000000000100000-0x00000000be0a5fff] usable [ 0.000000] BIOS-e820: [mem 0x00000000be0a6000-0x00000000bed49fff] reserved [ 0.000000] BIOS-e820: [mem 0x00000000bed4a000-0x00000000bed59fff] ACPI data [ 0.000000] BIOS-e820: [mem 0x00000000bed5a000-0x00000000bf42afff] ACPI NVS [ 0.000000] BIOS-e820: [mem 0x00000000bf42b000-0x00000000bf639fff] reserved [ 0.000000] BIOS-e820: [mem 0x00000000bf63a000-0x00000000bf7fffff] usable [ 0.000000] BIOS-e820: [mem 0x00000000e0000000-0x00000000e3ffffff] reserved [ 0.000000] BIOS-e820: [mem 0x00000000fed01000-0x00000000fed03fff] reserved [ 0.000000] BIOS-e820: [mem 0x00000000fed08000-0x00000000fed08fff] reserved [ 0.000000] BIOS-e820: [mem 0x00000000fed0c000-0x00000000fed0ffff] reserved [ 0.000000] BIOS-e820: [mem 0x00000000fed1c000-0x00000000fed1cfff] reserved [ 0.000000] BIOS-e820: [mem 0x00000000fef00000-0x00000000feffffff] reserved [ 0.000000] BIOS-e820: [mem 0x00000000ff800000-0x00000000ffffffff] reserved [ 0.000000] BIOS-e820: [mem 0x0000000100000000-0x000000043fffffff] usable [ 0.000000] NX (Execute Disable) protection: active [ 0.000000] extended physical RAM map: [ 0.000000] reserve setup_data: [mem 0x0000000000000000-0x000000000009ffff] usable [ 0.000000] reserve setup_data: [mem 0x0000000000100000-0x00000000bb3fb017] usable [ 0.000000] reserve setup_data: [mem 0x00000000bb3fb018-0x00000000bb40b657] usable [ 0.000000] reserve setup_data: [mem 0x00000000bb40b658-0x00000000bb40c017] usable [ 0.000000] reserve setup_data: [mem 0x00000000bb40c018-0x00000000bb41c657] usable [ 0.000000] reserve setup_data: [mem 0x00000000bb41c658-0x00000000bb41d017] usable [ 0.000000] reserve setup_data: [mem 0x00000000bb41d018-0x00000000bb42d657] usable [ 0.000000] reserve setup_data: [mem 0x00000000bb42d658-0x00000000bb42e017] usable [ 0.000000] reserve setup_data: [mem 0x00000000bb42e018-0x00000000bb43e657] usable [ 0.000000] reserve setup_data: [mem 0x00000000bb43e658-0x00000000be0a5fff] usable [ 0.000000] reserve setup_data: [mem 0x00000000be0a6000-0x00000000bed49fff] reserved [ 0.000000] reserve setup_data: [mem 0x00000000bed4a000-0x00000000bed59fff] ACPI data [ 0.000000] reserve setup_data: [mem 0x00000000bed5a000-0x00000000bf42afff] ACPI NVS [ 0.000000] reserve setup_data: [mem 0x00000000bf42b000-0x00000000bf639fff] reserved [ 0.000000] reserve setup_data: [mem 0x00000000bf63a000-0x00000000bf7fffff] usable [ 0.000000] reserve setup_data: [mem 0x00000000e0000000-0x00000000e3ffffff] reserved ","date":"23 June 2022","externalUrl":null,"permalink":"/blog/lc-console/","section":"Blog","summary":"思科 SP 系列高端路由器都是由引擎 RP/线卡（业务卡/LC）/矩阵卡 FC（fabric card）等组成，但是只有引擎 RP 上存在 console 口，其他的板卡都是没有物理的 console 线路，所以在排查业务板卡等系列没有物理 console 线路的板卡启动失败的问题时，往往都只能 login 设备采集业务板卡的启动 log，而往往这些 log 都很简单，并不能告诉我们这个板卡出了什么问题，那其实我们有内置的 console 线路，可以让我们能够跳转到其他板卡的 console 口，查看启动的详细 log。方法如下:","title":"如何使用业务板卡console排查板卡启动问题","type":"blog"},{"content":" image-20220602024556354 image-20220602024457745 参考HDMI 的 wiki 百科\n最近咸鱼收了一个 dell U2419HS，1080p ；相对于我之前的 ThinkVisin X24-20 （1080p）来说感觉色彩上效果上更好一点，但是 Dell 的这台显示器感觉存在视频拖影的问题，让我一度怀疑是不是我的 HDMI 线速率不够导致的（咸鱼收的时候卖家没送 HDMI 线，在家里找到了当时买 switch 送的，勉强用上了）。后来搜了下，switch 配备的这根 HDMI 线已经是 2.0 的标准，所以不是线的问题。虽然拖影问题的根因没找到，但还是记录下查到的 HDMI 线的一些资料，以备后续查阅。\nHDMI 2.1 # 如果需要更好的支持 4K/8K 的视频是需要选购支持 2.1 标准的线缆，关键字:\nHDMI 2.1 48.0 Gbit/s The Ultra High Speed HDMI® Cable 8k@60 and 4K@120 image-20220602030927972 参考 HDMI CABLE OVERVIEW\nHDMI 2.0 # 如果需要输出 4K 60HZ 的视频，HDMI 2.0 已经够用了；而且是目前电商平台上卖的最主流的线缆，关键字:\nHDMI 2.0 14.4Gbit/s High Speed HDMI® Cable 10.2Gbps bandwidth; UP to 4K@30Hz, Best 1080p Premium High Speed HDMI® Cable 18Gbps bandwidth; Up to 4K60HZ image-20220602030357188 image-20220602030412574 image-20220602030436206 所以如果需要识别这类线缆，除了查看商家描述的规格外，也可以参考下线身的描述是否有 High Speed 或者 Premium High Speed 字样。\nHDMI 1.4 # 标准 HDMI 线， 用来输出 1080p 和 720p。现在应该是不多见了,关键字:\nStandard HDMI Cable image-20220602031250085 ","date":"1 June 2022","externalUrl":null,"permalink":"/blog/hdmi/","section":"Blog","summary":"image-20220602024556354 image-20220602024457745 参考HDMI 的 wiki 百科","title":"HDMI 线缆 2.1/2.0/1.4","type":"blog"},{"content":"最近抽空在 EVE 上配置测试了下 Cisco BNG，把 IPoE 和 PPPoE 的功能验证下，记录下来，后续如果遇到排查 BNG 故障的问题可以借助模拟器验证一些命令和配置之类的。\n实验准备 # XRv9K: xrv9k-fullk9-x-6.6.3 vBNG 好像不支持在 xrv 的镜像上运行，不支持 RP base 的 session,所以这里用 XRv9K 这个镜像。 CSR 1000v: csr1000vng-universalk9.17.03.02-serial CRS 1000v 用来当 DHCP server/DHCP Client/PPPoE Client, 版本没什么特殊的要求。 Freeradius 这里我桥接一个网卡到我的一个 linux 主机上，上面用 docker 起了一个 freeradius。有关 Freeradius 相关的配置过程可以参考我的另一篇文章，Configure ASR9K AAA with Freeradius 实验拓扑 # image-20220527223117714 Radius Server 相关配置 # vBNG 配置 # hostname vBNG radius-server host 10.70.79.197 auth-port 1812 acct-port 1813 key cisco aaa group server radius xuxing server 10.70.79.197 auth-port 1812 acct-port 1813 source-interface GigabitEthernet0/0/0/2 ! interface GigabitEthernet0/0/0/2 ipv4 address 10.70.79.136 255.255.255.128 ! aaa authentication subscriber default group xuxing ! Freeradius # [root@server1 freeradius]# cat authorize ### 定义pppoe 认证用户名和密码 xuxing Cleartext-Password := \u0026#34;xuxing\u0026#34; Service-Type = Framed-User, Framed-Protocol = PPP [root@server1 freeradius]# [root@server1 freeradius]# [root@server1 freeradius]# cat clients.conf ### 定义路由器key client 10.70.79.136 { ipv4addr = 10.70.79.136/32 secret = cisco nastype = cisco shortname = vBNG } PPPoE # PPPoE Client 配置 # Router#show run int gigabitEthernet 1 Building configuration... Current configuration : 157 bytes ! interface GigabitEthernet1 no ip address negotiation auto pppoe enable group global pppoe-client dial-pool-number 1 no mop enabled no mop sysid end Router# Router#show run int Dialer 0 Building configuration... Current configuration : 266 bytes ! interface Dialer0 mtu 1492 ip address negotiated encapsulation ppp dialer pool 1 dialer idle-timeout 0 dialer persistent ppp mtu adaptive ppp authentication chap pap callin ppp chap hostname xuxing ppp chap password 0 xuxing ppp ipcp route default end Router# vBNG 配置 # pool vrf default ipv4 PPP address-range 20.10.79.1 20.10.79.253 ! interface Loopback0 ipv4 address 20.10.79.254 255.255.255.255 ! interface GigabitEthernet0/0/0/1.200 service-policy type control subscriber POL_PPP pppoe enable encapsulation dot1q 200 ! dynamic-template type ppp PPPoE ppp authentication chap pap ppp ipcp dns 117.75.20.238 117.75.20.254 ppp ipcp mask 255.255.255.255 ppp ipcp peer-address pool PPP ipv4 unnumbered Loopback0 ! class-map type control subscriber match-any PPP match protocol ppp end-class-map ! policy-map type control subscriber POL_PPP event session-start match-first class type control subscriber PPP do-until-failure 10 activate dynamic-template PPPoE ! ! event session-activate match-first class type control subscriber PPP do-until-failure 10 authenticate aaa list default ! ! end-policy-map ! PPPoE 会话验证 # RP/0/RP0/CPU0:vBNG#show subscriber session filter username xuxing detail Fri May 27 14:43:27.242 UTC Interface: GigabitEthernet0/0/0/1.200.pppoe62 \u0026lt;\u0026lt;\u0026lt;\u0026lt; Circuit ID: Unknown Remote ID: Unknown Type: PPPoE:PTA IPv4 State: Up, Fri May 27 08:47:35 2022 IPv4 Address: 20.10.79.3, VRF: default Mac Address: 5000.0007.0000 Account-Session Id: 0400005a Nas-Port: Unknown User name: xuxing Formatted User name: unknown Client User name: unknown Outer VLAN ID: 200 Subscriber Label: 0x04000018 Created: Fri May 27 08:47:31 2022 State: Activated, Fri May 27 08:47:35 2022 Authentication: authenticated Authorization: unauthorized Access-interface: GigabitEthernet0/0/0/1.200 Policy Executed: policy-map type control subscriber POL_PPP event Session-Start match-first [at Fri May 27 08:47:31 2022] class type control subscriber PPP do-until-failure [Succeeded] 10 activate dynamic-template PPPoE [Succeeded] event Session-Activate match-first [at Fri May 27 08:47:34 2022] class type control subscriber PPP do-until-failure [Succeeded] 10 authenticate aaa list default [Succeeded] Session Accounting: disabled Last COA request received: unavailable [Last IPv6 down] Disconnect Reason: IPoE-DHCP proxy # DHCP Server # interface GigabitEthernet1 ip address 10.100.100.1 255.255.255.0 negotiation auto no mop enabled no mop sysid ! ip dhcp excluded-address 10.10.79.254 ! ip dhcp pool ipoe network 10.10.79.0 255.255.255.0 default-router 10.10.79.254 dns-server 8.8.8.8 ! ! ! ip route 10.10.79.0 255.255.255.0 10.100.100.2 ! IPoE Client # interface GigabitEthernet1 ip address dhcp \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; negotiation auto no mop enabled no mop sysid ! vBNG 配置 # dhcp ipv4 profile IPSUB proxy helper-address vrf default 10.100.100.1 giaddr 0.0.0.0 ! interface GigabitEthernet0/0/0/1.100 proxy profile IPSUB ! interface Loopback1 ipv4 address 10.10.79.254 255.255.255.255 ! interface GigabitEthernet0/0/0/0 ipv4 address 10.100.100.2 255.255.255.0 ! interface GigabitEthernet0/0/0/1.100 ipv4 point-to-point ipv4 unnumbered Loopback1 service-policy type control subscriber POL_IPSUB encapsulation dot1q 100 ipsubscriber ipv4 l2-connected initiator dhcp ! ! dynamic-template type ipsubscriber IPSUB ipv4 unnumbered Loopback1 ! ! class-map type control subscriber match-any CLASS_IPSUB match protocol dhcpv4 end-class-map ! policy-map type control subscriber POL_IPSUB event session-start match-first class type control subscriber CLASS_IPSUB do-until-failure 1 activate dynamic-template IPSUB ! ! end-policy-map ! end IPoE 会话验证 # RP/0/RP0/CPU0:vBNG#show dhcp ipv4 proxy binding Fri May 27 14:50:43.652 UTC Lease MAC Address IP Address State Remaining Interface VRF Sublabel -------------- -------------- --------- --------- ------------------- --------- ---------- 5000.0003.0000 10.10.79.2 BOUND 86373 Gi0/0/0/1.100 default 0x4000083 RP/0/RP0/CPU0:vBNG# RP/0/RP0/CPU0:vBNG#show subscriber session all brief location 0/0/CPU0 Fri May 27 14:51:11.430 UTC Codes: IN - Initialize, CN - Connecting, CD - Connected, AC - Activated, ID - Idle, DN - Disconnecting, ED - End Type Interface State MAC-Address SubLabel CreateTime Subscriber IP Addr / Prefix LNS Address (Vrf) ----------------------------------------------------------------------------------------------------------------------------------- PPPoE:PTA Gi0/0/0/1.200.pppoe62 AC 5000.0007.0000 4000018 Fri May 27 08:47:31 2022 20.10.79.3 (default) IP:DHCP Gi0/0/0/1.100.ip1 AC 5000.0003.0000 4000083 Fri May 27 14:50:16 2022 10.10.79.2 (default) Switch 配置备份 # interface GigabitEthernet0/0 switchport trunk allowed vlan 100,200 switchport trunk encapsulation dot1q switchport mode trunk media-type rj45 negotiation auto ! interface GigabitEthernet0/1 switchport access vlan 100 switchport mode access media-type rj45 negotiation auto ! ","date":"27 May 2022","externalUrl":null,"permalink":"/blog/vbng-on-xrv-9000/","section":"Blog","summary":"最近抽空在 EVE 上配置测试了下 Cisco BNG，把 IPoE 和 PPPoE 的功能验证下，记录下来，后续如果遇到排查 BNG 故障的问题可以借助模拟器验证一些命令和配置之类的。","title":"vBNG on XRv 9000","type":"blog"},{"content":"最近有在考 DevNet 的认证，所以 Mark 一下如何去查认证考试代码。\n参考一下思科certification的介绍页面， Associate -\u0026gt; NA, Professional -\u0026gt; NP, Expert -\u0026gt; Expert.\nimage-20220520001247684 主要记录下 DevNet 各个考试的代码，以便后续查找.\nDevNet Associate（100 题） # Name Price 200-901 DEVASC DevNet Associate Exam v1.0 300$ DevNet Professinal # Professinal 对应的是 NP, 需要 2 门考试才为 NP; 两门考试一门为 Core Exam, 一门 Concentration Exam; Concentation Exam 有多个方向， 选择一个方向的考试考过即可。\nCore Exam（100 题） # Name Price 350-901 DEVCOR Developing Applications using Cisco Core Platforms \u0026amp; APIs 400$ Concentration Exam （50 题） # Name Price 300-435 ENAUTO Automating and Programming Cisco Enterprise Solutions v1.0 300$ 300-835 CLAUTO Automating Cisco Collaboration Solutions 300$ 300-635 DCAUTO Automating and Programming Cisco Data Center Solutions v1.0 300$ 300-535 SPAUTO Automating and Programming Cisco Service Provider Solutions 300$ 300-735 SAUTO Automating and Programming Cisco Security Solutions v1 300$ 300-910 DEVOPS Implementing DevOps Solutions and Practices using Cisco Platforms 300$ 300-915 DEVIOT Developing Solutions using Cisco IoT \u0026amp; Edge Platforms 300$ 300-920 DEVWBX Developing Applications for Cisco Webex and Webex Devices 300$ DevNet Expert # 需要先行通过 350-901 Core Examp, 然后需要通过 8h Lab Exam 才可获得。\nNote # DevNet Associate （200-901） DevNet Professinal Core Exam （350-901） Concentration Exam （To Cont…） ","date":"19 May 2022","externalUrl":null,"permalink":"/blog/devnet/","section":"Blog","summary":"最近有在考 DevNet 的认证，所以 Mark 一下如何去查认证考试代码。","title":"思科认证体系(Mark DevNet 考试代码)","type":"blog"},{"content":"使用的MIB 库为CISCO-PING-MIB, 具体步骤如下:\n# 清除之前操作 [root@server1 ~]# snmpset -v 2c -c cisco 172.18.120.183 1.3.6.1.4.1.9.9.16.1.1.1.16.111 i 6 SNMPv2-SMI::enterprises.9.9.16.1.1.1.16.111 = INTEGER: 6 #创建实例编号为 111 的条目 [root@server1 ~]# snmpset -v 2c -c cisco 172.18.120.183 1.3.6.1.4.1.9.9.16.1.1.1.16.111 i 5 SNMPv2-SMI::enterprises.9.9.16.1.1.1.16.111 = INTEGER: 5 #设置ping 的name [root@server1 ~]# snmpset -v 2c -c cisco 172.18.120.183 1.3.6.1.4.1.9.9.16.1.1.1.15.111 s test SNMPv2-SMI::enterprises.9.9.16.1.1.1.15.111 = STRING: \u0026#34;test\u0026#34; # 设置 ping的包位IP 包 [root@server1 ~]# snmpset -v 2c -c cisco 172.18.120.183 1.3.6.1.4.1.9.9.16.1.1.1.2.111 i 1 SNMPv2-SMI::enterprises.9.9.16.1.1.1.2.111 = INTEGER: 1 # 设置ping的地址位 9.1.0.6 \u0026gt; hex 09010006 [root@server1 ~]# snmpset -v 2c -c cisco 172.18.120.183 1.3.6.1.4.1.9.9.16.1.1.1.3.111 x 09010006 SNMPv2-SMI::enterprises.9.9.16.1.1.1.3.111 = Hex-STRING: 09 01 00 06 #设置ping的个数 [root@server1 ~]# snmpset -v 2c -c cisco 172.18.120.183 1.3.6.1.4.1.9.9.16.1.1.1.4.111 i 5 SNMPv2-SMI::enterprises.9.9.16.1.1.1.4.111 = INTEGER: 5 #设置vrf name [root@server1 ~]# snmpset -v 2c -c cisco 172.18.120.183 1.3.6.1.4.1.9.9.16.1.1.1.17.111 s 123 SNMPv2-SMI::enterprises.9.9.16.1.1.1.17.111 = STRING: \u0026#34;123\u0026#34; [root@server1 ~]# [root@server1 ~]# #检查设置的参数 [root@server1 ~]# snmpwalk -v 2c -c cisco 172.18.120.183 1.3.6.1.4.1.9.9.16.1.1.1 SNMPv2-SMI::enterprises.9.9.16.1.1.1.2.111 = INTEGER: 1 SNMPv2-SMI::enterprises.9.9.16.1.1.1.3.111 = Hex-STRING: 09 01 00 06 SNMPv2-SMI::enterprises.9.9.16.1.1.1.4.111 = INTEGER: 5 SNMPv2-SMI::enterprises.9.9.16.1.1.1.5.111 = INTEGER: 100 SNMPv2-SMI::enterprises.9.9.16.1.1.1.6.111 = INTEGER: 2000 SNMPv2-SMI::enterprises.9.9.16.1.1.1.7.111 = INTEGER: 0 SNMPv2-SMI::enterprises.9.9.16.1.1.1.8.111 = INTEGER: 2 SNMPv2-SMI::enterprises.9.9.16.1.1.1.14.111 = INTEGER: 2 SNMPv2-SMI::enterprises.9.9.16.1.1.1.15.111 = STRING: \u0026#34;test\u0026#34; SNMPv2-SMI::enterprises.9.9.16.1.1.1.16.111 = INTEGER: 2 SNMPv2-SMI::enterprises.9.9.16.1.1.1.17.111 = STRING: \u0026#34;123\u0026#34; [root@server1 ~]# [root@server1 ~]# # 执行Ping 操作 [root@server1 ~]# snmpset -v 2c -c cisco 172.18.120.183 1.3.6.1.4.1.9.9.16.1.1.1.16.111 i 1 SNMPv2-SMI::enterprises.9.9.16.1.1.1.16.111 = INTEGER: 1 [root@server1 ~]# #检查ping的结果 [root@server1 ~]# snmpwalk -v 2c -c cisco 172.18.120.183 1.3.6.1.4.1.9.9.16.1.1.1 SNMPv2-SMI::enterprises.9.9.16.1.1.1.2.111 = INTEGER: 1 SNMPv2-SMI::enterprises.9.9.16.1.1.1.3.111 = Hex-STRING: 09 01 00 06 SNMPv2-SMI::enterprises.9.9.16.1.1.1.4.111 = INTEGER: 5 SNMPv2-SMI::enterprises.9.9.16.1.1.1.5.111 = INTEGER: 100 SNMPv2-SMI::enterprises.9.9.16.1.1.1.6.111 = INTEGER: 2000 SNMPv2-SMI::enterprises.9.9.16.1.1.1.7.111 = INTEGER: 0 SNMPv2-SMI::enterprises.9.9.16.1.1.1.8.111 = INTEGER: 2 SNMPv2-SMI::enterprises.9.9.16.1.1.1.9.111 = Counter32: 5 \u0026lt;\u0026lt;\u0026lt;\u0026lt; send packet SNMPv2-SMI::enterprises.9.9.16.1.1.1.10.111 = Counter32: 5 \u0026lt;\u0026lt;\u0026lt;\u0026lt; receive packet SNMPv2-SMI::enterprises.9.9.16.1.1.1.11.111 = INTEGER: 1 \u0026lt;\u0026lt;\u0026lt;\u0026lt; Minrtt SNMPv2-SMI::enterprises.9.9.16.1.1.1.12.111 = INTEGER: 1 \u0026lt;\u0026lt;\u0026lt;\u0026lt;Avgrtt SNMPv2-SMI::enterprises.9.9.16.1.1.1.13.111 = INTEGER: 1 \u0026lt;\u0026lt;\u0026lt;\u0026lt;Maxrtt SNMPv2-SMI::enterprises.9.9.16.1.1.1.14.111 = INTEGER: 1 SNMPv2-SMI::enterprises.9.9.16.1.1.1.15.111 = STRING: \u0026#34;test\u0026#34; SNMPv2-SMI::enterprises.9.9.16.1.1.1.16.111 = INTEGER: 1 SNMPv2-SMI::enterprises.9.9.16.1.1.1.17.111 = STRING: \u0026#34;123\u0026#34; #删除ping 实例 [root@server1 ~]# snmpset -v 2c -c cisco 172.18.120.183 1.3.6.1.4.1.9.9.16.1.1.1.16.111 i 6 SNMPv2-SMI::enterprises.9.9.16.1.1.1.16.111 = INTEGER: 6 ","date":"26 April 2022","externalUrl":null,"permalink":"/blog/cisco-ios-xr-snmp-ping/","section":"Blog","summary":"使用的MIB 库为CISCO-PING-MIB, 具体步骤如下:","title":"Cisco IOS XR设备SNMP Ping操作","type":"blog"},{"content":"In general, the structure of the syslog messages generated by IOS-XR has the following format:\n: :: []: %--: messageid: The ID number of the message. hostname: The device that generated the message. linecard: The linecard slot. datetime: The time when the message was generated in the format: MMM dd hh:mm:ss.fff or MMM dd hh:mm:ss.fff ZZZ. process-name: The name of the process that generated the mesage. process-id The PID of the process that generated the message. facility-name: The name of the Facility. severify: The value of the Severity. tag: The syslog message tag. # 包含两个内容 5 bit Facility 和 3 bit Log Level.\nFacility 用来表示 log 信息的来源或者说是 log 信息的类别，默认 IOS XR 设备使用的是 LOCAL 7 ， id 23。\n我们可以在 log server 上进行定义不同 Facility 存储在不同文件中，或者具有不同的 format 格式, 如下。\n[root@server1 ~]# grep local /etc/rsyslog.conf local7.* /var/log/boot.log local6.* /var/log/syslog IOS XR 中可以修改 facility , 命令如下\nRP/0/RP0/CPU0:CRS-L(config)#logging facility ? auth Authorization system cron Cron/at facility daemon System daemons kern Kernel local0 Local use local1 Local use local2 Local use local3 Local use local4 Local use local5 Local use local6 Local use local7 Local use lpr Line printer system mail Mail system news USENET news sys10 System use sys11 System use sys12 System use sys13 System use sys14 Systemcode use sys9 System use syslog Syslog itself user User process uucp Unix-to-Unix copy system \u0026lt;cr\u0026gt; # 默认传递的 syslog 中是不包含设备的 hostname 的，如下是在 log server 上记录的 log，第一行中不包含 hostname; 通过在 IOS XR 设备上添加配置\u0026quot;logging hostname \u0026ldquo;可以传递自己自定义的 hostname，见第二行输出。\nApr 14 23:34:38 10.1.1.1 462388: LC/0/6/CPU0:Apr 15 09:02:48 : plim_xge[301]: %L2-PLIM-4-XFP_WARN_RX_PWR : Interface TenGigE0/6/0/9, RX Low power warning occurred Apr 14 23:50:04 10.1.1.1 462620: CRS-L RP/0/RP0/CPU0:Apr 15 09:18:13 : config[65956]: %MGBL-CONFIG-6-DB_COMMIT : Configuration committed by user \u0026#39;xuxing\u0026#39;. Use \u0026#39;show configuration commit changes 1000000229\u0026#39; to view the changes. ","date":"15 April 2022","externalUrl":null,"permalink":"/blog/ios-xr-syslog-messages-sent-to-syslog-servers-format/","section":"Blog","summary":"In general, the structure of the syslog messages generated by IOS-XR has the following format:","title":"IOS XR Syslog Messages Sent to Syslog Servers Format","type":"blog"},{"content":"TWAMP（Two-Way Active Measurement Protocol，双向主动测量协议）是一种用于 IP 链路的网络质量测量技术，它使用 UDP 报文测量网络双向路径时延、抖动及丢包率。TWAMP-light 是 TWAMP 协议的轻量级架构，简化了建立性能测量会话的控制协议，提高了测试性能。\n如下 TWAMP 与 TWAMP light 主要区别在于 Twamp 需要先使用 TCP 建立控制层面。\nTWAMP # rfc5357\nTWAMP light # rfc5357\nTWAMP 配置 # Cisco XR 的路由器目前只支持作为 Server， 不支持作为 Client, 也就是说它只能进行测量报文的反射, 而测量报文的主动发起方是 Control-Client 端。\nControl-Client 端我们选择使用 github 上的一个基于 python 的脚本twampy.\n!!!!! Router as TWAMP Resonder ipsla responder twamp ! server twamp ! ! !!!!! TWAMP controller [root@server1 twampy]# ./twampy.py controller 172.18.87.49 =============================================================================== Direction Min Max Avg Jitter Loss ------------------------------------------------------------------------------- Outbound: 0us 0us 0us 0us 0.0% Inbound: 17.0min 17.0min 17.0min 148us 0.0% Roundtrip: 185.39ms 187.59ms 186.12ms 217us 0.0% ------------------------------------------------------------------------------- Jitter Algorithm [RFC1889] =============================================================================== 如上图, 首先 TCP 建立控制层面，再由 Control-Client 发送 UDP 探针，携带 Tx timeslot; Router 收到后添加 Revieve Timeslot， 反射探针.\nTWAMP light 配置 # !!!!! Router as TWAMP-Light Responder ipsla responder ! twamp-light test-session 1 local-ip 172.18.87.49 local-port 862 remote-ip 10.70.79.197 remote-port 777 vrf default ! ! server twamp ! ! !!!!! TWAMP Light Controller [root@server1 twampy]# ./twampy.py sender 172.18.87.49:862 10.70.79.197:777 =============================================================================== Direction Min Max Avg Jitter Loss ------------------------------------------------------------------------------- Outbound: 0us 0us 0us 0us 0.0% Inbound: 17.0min 17.0min 17.0min 136us -2.0% Roundtrip: 173.09ms 180.26ms 174.47ms 344us -2.0% ------------------------------------------------------------------------------- Jitter Algorithm [RFC1889] =============================================================================== !!!!!!!Command to check packet received (version 7.1.3) RP/0/RSP0/CPU0:ASR-9006-F#show ipsla twamp session Wed Nov 3 08:14:59.110 UTC ***** TWAMP Sessions ***** IP SLAs Responder TWAMP is: Enabled Recvr Addr: 172.18.87.49 Recvr Port: 20001 Sender Addr: 10.70.79.197 Sender Port: 20000 Sender VRF Name: default Session Id: 172.18.87.49:1635927288.140734154578682:0x394a9afa Connection Id: 0xea Mode: Unauthenticated DSCP: 0 Pad Length: 0 Number of Packets Received: 91 ***** TWAMP-LIGHT Sessions ***** Session status: Active Recvr Addr: 172.18.87.49 Recvr Port: 862 Sender Addr: 10.70.79.197 Sender Port: 777 Sender VRF Name: default Session ID: 1 Mode: Unauthenticated Number of Packets Received: 500 Session timeout: 0 如上图，twamp light 无 control 层面，只通过交互 UDP 探针;使用的端口号可以自己定义.\nTWAMP 和 TWAMP light 相关抓包 # TWAMP\nPerformance Measurement # SR PM 这个 feature 支持采用 TWAMP Light encoding 的方式进行直连链路的延迟性检测, 参考文章Configure Performance Measurement。\n相关配置:\n!!!!!!!! Sender RP/0/RP0/CPU0:P-2#show run performance-measurement Tue Mar 1 04:07:48.011 UTC performance-measurement interface TenGigE0/0/0/14 next-hop ipv4 10.10.12.1 delay-measurement advertise-delay 1000 ! ! protocol twamp-light measurement delay unauthenticated querier-dst-port 11000 ! ! ! ! !!!!!!! Reflector RP/0/RP0/CPU0:ios#show run performance-measurement Tue Mar 1 03:59:25.056 UTC performance-measurement protocol twamp-light \u0026lt;\u0026lt;\u0026lt;\u0026lt; 如果Sender使用默认端口862 , 则Reflector 只用配置\u0026#34;performance-measurement\u0026#34; 即可； 如果sender使用其他端口， 则reflector 需要配置一样的port,即额外添加以下配置 measurement delay unauthenticated querier-dst-port 11000 ! ! ! ! Sender: RP/0/RP0/CPU0:P-2#show performance-measurement interfaces tenGigE 0/0/0/14 det$ Tue Mar 1 03:25:50.486 UTC ------------------------------------------------------------------------------- 0/0/CPU0 ------------------------------------------------------------------------------- Interface Name: TenGigE0/0/0/14 (ifh: 0x88) Delay-Measurement : Enabled Loss-Measurement : Disabled Configured IPv4 Address : 10.10.12.2 Configured IPv6 Address : :: Link Local IPv6 Address : :: Configured Next-hop Address : 10.10.12.1 Local MAC Address : 00bc.6062.2c38 Next-hop MAC Address : 00bc.6030.a838 Primary VLAN Tag : None Secondary VLAN Tag : None State : Up Delay Measurement session: Session ID : 1 Last advertisement: Advertised at: Feb 28 2022 16:31:45.428 (39245.136 seconds ago) Advertised reason: Advertise delay config Advertised delays (uSec): avg: 1000, min: 1000, max: 1000, variance: 0 Next advertisement: Threshold check scheduled in 3 more probes (roughly every 120 seconds) No probes completed Rolling average (uSec): 1 Current Probe: Started at: Mar 01 2022 03:25:33.122 (17.442 seconds ago) Packets Sent: 6, received: 6 Measured delays (uSec): avg: 1, min: 1, max: 1, variance: 0 Next probe scheduled at: Mar 01 2022 03:26:03.121 (in 12.557 seconds) Next burst packet will be sent in 0.557 seconds Burst packet sent every 3.0 seconds Responder IP : 10.10.12.1 Number of Hops : 1 Probe samples: Packet Rx Timestamp Measured Delay (nsec) Mar 01 2022 03:25:21.124 1530 Mar 01 2022 03:25:24.124 1522 Mar 01 2022 03:25:27.124 1528 Mar 01 2022 03:25:30.124 1532 Mar 01 2022 03:25:33.125 1528 Mar 01 2022 03:25:36.125 1532 ","date":"14 April 2022","externalUrl":null,"permalink":"/blog/twamp-and-twamp-light/","section":"Blog","summary":"TWAMP（Two-Way Active Measurement Protocol，双向主动测量协议）是一种用于 IP 链路的网络质量测量技术，它使用 UDP 报文测量网络双向路径时延、抖动及丢包率。TWAMP-light 是 TWAMP 协议的轻量级架构，简化了建立性能测量会话的控制协议，提高了测试性能。","title":"TWAMP and TWAMP light","type":"blog"},{"content":"Will Update soon \u0026hellip;\u0026hellip;\n","date":"28 March 2022","externalUrl":null,"permalink":"/about/","section":"","summary":"Will Update soon \u0026hellip;\u0026hellip;","title":"About","type":"page"},{"content":"在上篇文章中使用了 ISE 作为 AAA server，ISE 功能上虽然较多，但是对于新手操作起来还是有些繁琐。所以我在想是否能找到 AAA server 替代品，只需要简单的配置就可以满足我认证测试的需求，然后我就找到 freeradius。所以本文就介绍下我在测试 freeradius 时遇到的一些坑以及排错。\nfreeradius/freeradius-server\nStarting the server # docker run --rm --name my-radius -d freeradius/freeradius-server 使用上述命令就可以快速创建一个 radius server，添加“\u0026ndash;rm”使容器停止后自动删除.\n由于这个容器中没 vi/nano command,我无法去编辑配置文件，所以在将 docker run 起来后进去将配置文件 copy 出来一份,在本地进行修改。\n[root@server1 ~]# docker exec -it my-radius /bin/bash root@3c05e2ec2770:/# cd /etc/raddb root@3c05e2ec2770:/etc/raddb# ls -al total 148 drwxr-s--x. 9 freerad freerad 4096 Oct 7 19:58 . drwxr-xr-x. 1 root root 66 Feb 22 02:21 .. -rw-r--r--. 1 root root 20819 Oct 7 17:00 README.rst drwxr-s--x. 2 freerad freerad 4096 Oct 7 20:00 certs -rw-r-----. 1 root freerad 8323 Oct 7 17:00 clients.conf -rw-r--r--. 1 root freerad 1440 Oct 7 17:00 dictionary -rw-r-----. 1 root freerad 2661 Oct 7 17:00 experimental.conf lrwxrwxrwx. 1 root root 28 Oct 7 17:00 hints -\u0026gt; mods-config/preprocess/hints lrwxrwxrwx. 1 root root 33 Oct 7 17:00 huntgroups -\u0026gt; mods-config/preprocess/huntgroups drwxr-xr-x. 2 root root 4096 Oct 7 19:58 mods-available drwxr-xr-x. 9 root root 126 Oct 7 19:58 mods-config drwxr-xr-x. 2 root root 4096 Oct 7 19:58 mods-enabled -rw-r--r--. 1 root root 52 Oct 7 17:00 panic.gdb drwxr-s--x. 2 freerad freerad 205 Oct 7 19:58 policy.d -rw-r-----. 1 root freerad 28825 Oct 7 17:00 proxy.conf -rw-r-----. 1 root freerad 31521 Oct 7 17:00 radiusd.conf drwxr-s--x. 2 freerad freerad 4096 Oct 7 19:58 sites-available drwxr-s--x. 2 freerad freerad 41 Oct 7 19:58 sites-enabled -rw-r--r--. 1 root root 3470 Oct 7 17:00 templates.conf -rw-r--r--. 1 root root 8536 Oct 7 17:00 trigger.conf lrwxrwxrwx. 1 root root 27 Oct 7 17:00 users -\u0026gt; mods-config/files/authorize root@3c05e2ec2770:/etc/raddb# root@3c05e2ec2770:/etc/raddb# root@3c05e2ec2770:/etc/raddb# cat clients.conf root@3c05e2ec2770:/etc/raddb# cat mods-config/files/authorize root@3c05e2ec2770:/etc/raddb# cat /etc/freeradius/sites-enabled/default root@3c05e2ec2770:/etc/raddb# exit exit [root@server1 ~]# docker stop my-radius \u0026lt;\u0026lt;\u0026lt; 停止容器，因为后面我们要使用自己定义的配置文件启动 my-radius [root@server1 ~]# 一共三个文件，“clients.conf”用于存储网络设备信息，“mods-config/files/authorize”用于存储认证授权信息，还有一个“/etc/freeradius/sites-enabled/default” 属于配置信息。\n下面我们在本地新建三个文件，default 文件是我们从 docker 中 copy 出来的，client.conf 和 authorize 可以使用从 docker 中 copy 出来然后新增如下配置， 或者直接自己新建。\n[root@server1 freeradius]# ls authorize clients.conf default [root@server1 freeradius]# cat clients.conf client dockernet { ipaddr = 172.17.0.0/16 secret = testing123 } client 10.124.36.67 { ipv4addr = 10.124.36.67/32 secret = cisco nastype = cisco shortname = 9001-B } [root@server1 freeradius]# cat authorize bob Cleartext-Password := \u0026#34;test\u0026#34; rory Cleartext-Password := \u0026#34;cisco!123\u0026#34; Service-Type = NAS-Prompt-User, Login-Service = Telnet, Cisco-AVPair = \u0026#34;shell:tasks*=#priv15,\u0026#34; [root@server1 freeradius]# 其中最重要的是需要修改 default 配置文件， 将“filter_password”前面的#去掉.\n[root@server1 freeradius]# vim default # filter_password # 这样做的原因是 XR 的设备在传递 password 的时候会额外填充一些字符串，radius 默认会把它当作密码的一部分，我们在配置文件中去开启\u0026quot;filter_password\u0026quot;会将这些字符过滤掉，只保留真正的 password.\n准备好三个文件后，我们就可以使用本地的配置文件起个 radius 服务了,如下:\n[root@server1 freeradius]# ls authorize clients.conf default [root@server1 freeradius]#docker run --rm --name my-radius -v /root/freeradius/clients.conf:/etc/raddb/clients.conf -v /root/freeradius/authorize:/etc/raddb/mods-config/files/authorize -v /root/freeradius/default:/etc/freeradius/sites-enabled/default -p 1812-1813:1812-1813/udp -d freeradius/freeradius-server bdd046015ba4ecdb19207d164cce5f326f9b20b641524c71b70c0e7b8033daca [root@server1 freeradius]# 当然你也可以加上\u0026quot;-X\u0026quot; 来调试，去掉-d；这样 docker 就不会 detach，debug 的信息会实时的输出。\n[root@server1 freeradius]# docker run --rm --name my-radius -v /root/freeradius/clients.conf:/etc/raddb/clients.conf -v /root/freeradius/authorize:/etc/raddb/mods-config/files/authorize -v /root/freeradius/default:/etc/freeradius/sites-enabled/default -p 1812-1813:1812-1813/udp freeradius/freeradius-server -X 如果需要更改配置可以直接在本地修改， 修改完成后，停止之前的容器，重新创建一个:\n[root@server1 freeradius]# docker stop my-radius [root@server1 freeradius]# docker run --rm --name my-radius -v /root/freeradius/clients.conf:/etc/raddb/clients.conf -v /root/freeradius/authorize:/etc/raddb/mods-config/files/authorize -v /root/freeradius/default:/etc/freeradius/sites-enabled/default -p 1812-1813:1812-1813/udp -d freeradius/freeradius-server ASR9K AAA 配置: # usergroup priv15 taskgroup root-system taskgroup cisco-support description pri15 ! radius source-interface MgmtEth0/RSP0/CPU0/0 vrf MGMT radius-server host 10.70.79.197 auth-port 1812 acct-port 1813 key 7 05080F1C2243 ! aaa group server radius XU server 10.70.79.197 auth-port 1812 acct-port 1813 vrf MGMT source-interface MgmtEth0/RSP0/CPU0/0 ! aaa authorization exec console local aaa authorization commands console none aaa authentication login console local aaa authentication login default group XU local 验证 Radius 认证授权过程: # Radius 在授权上没法做到基于命令行的， 只能简单的基于权限，所以数据包的交互上很简单.\n如上，radius 在返回“priv15”的 usergroup 后，路由器就不会再次向 server 进行授权验证。\n快速搭建 freeradius: # 或者你可以 clone 我的配置文件， 直接使用。如下：\n[root@server2 ~]# git clone https://github.com/xuxing3/freeradius Cloning into \u0026#39;freeradius\u0026#39;... remote: Enumerating objects: 5, done. remote: Counting objects: 100% (5/5), done. remote: Compressing objects: 100% (5/5), done. remote: Total 5 (delta 0), reused 0 (delta 0), pack-reused 0 Unpacking objects: 100% (5/5), done. [root@server2 ~]# cd freeradius/ [root@server2 freeradius]# ls authorize clients.conf default [root@server2 freeradius]# [root@server2 freeradius]# docker run --rm --name my-radius -v /root/freeradius/clients.conf:/etc/raddb/clients.conf -v /root/freeradius/authorize:/etc/raddb/mods-config/files/authorize -v /root/freeradius/default:/etc/freeradius/sites-enabled/default -p 1812-1813:1812-1813/udp -d freeradius/freeradius-server Reference: # freeradius/freeradius-server ASR9k + Freeradius ","date":"22 February 2022","externalUrl":null,"permalink":"/blog/configure-asr9k-aaa-with-freeradius/","section":"Blog","summary":"在上篇文章中使用了 ISE 作为 AAA server，ISE 功能上虽然较多，但是对于新手操作起来还是有些繁琐。所以我在想是否能找到 AAA server 替代品，只需要简单的配置就可以满足我认证测试的需求，然后我就找到 freeradius。所以本文就介绍下我在测试 freeradius 时遇到的一些坑以及排错。","title":"Configure ASR9K AAA with Freeradius","type":"blog"},{"content":" Reference # 基于 ISE 对 Cisco 网络设备部署 AAA Configure ASR9K TACACS with Cisco Identity Services Engine 2.4 Cisco IOS XR Task ID Reference Guide, Release 4.1 本文章是自己配置 ISE 过程的总结，主要参考的是上面文章， 其中最主要的是第一篇（知乎），我认为是最全的 ISE 配置介绍。\nISE Setup（3.1） # ISE 启用设备管理 # Administration-\u0026gt;System-\u0026gt;Deployment\n关闭系统密码策略 # Administration-\u0026gt;System-\u0026gt;Admin Access-\u0026gt;Authentication-\u0026gt;Password Policy\n取消所有的选项。\n关闭网络设备用户认证的密码策略 # Administration-\u0026gt; Identity Management -\u0026gt; Settings -\u0026gt;User Authentication Settings -\u0026gt;Password Policy\n添加网络设备 # Administration-\u0026gt; Network Resources -\u0026gt; Network Devices\n创建用户组/用户 # Administration-\u0026gt;Identity Management -\u0026gt;User Identity Groups\n新创建两个组，Admin 和 read_only.\nAdministration-\u0026gt;Identity Management -\u0026gt;Identities\n创建两个用户， 并加入之前创建的两个组中.\nTACACS 认证授权 # 认证 # Work Centers -\u0026gt; Device Administration -\u0026gt;Device Admin Policy Sets -\u0026gt; Policy Sets\n认证保持默认的 default 策略， All_User_ID_Stores\n授权 # 我们需要先去创建几个授权策略， 路径： Work Centers -\u0026gt; Device Administration -\u0026gt;Policy Elements -\u0026gt; Results - \u0026gt;Tacacs Command Sets /Tacacs Profiles\nTacacs Profiles # Profiles 来定义用户属于哪个权限组,比如如下创建两个 profile， tacacs_1 和 tacacs_2\n以 tacacs_15 为例，Value 字段为“#priv15”， #号后面代表的 usergroup name, 是 IOS XR 设备上客户自定义的 usergroup name.\n参考配置案例。\n当然你可以使用设备本身存在的一些 usergroup, 如#sysadmin, #root-system 等\nRP/0/RSP0/CPU0:ASR9001-B#show aaa usergroup ? | Output Modifiers priv1 Name of the usergroup priv2 Name of the usergroup priv5 Name of the usergroup priv6 Name of the usergroup priv10 Name of the usergroup priv15 Name of the usergroup root-lr Name of the usergroup netadmin Name of the usergroup operator Name of the usergroup sysadmin Name of the usergroup ugtestct Name of the usergroup retrieval Name of the usergroup maintenance Name of the usergroup root-system Name of the usergroup provisioning Name of the usergroup read-only-tg Name of the usergroup serviceadmin Name of the usergroup cisco-support Name of the usergroup WORD Name of the usergroup Tacacs Command Sets # Command Sets 是在 profile 的基础上再次定义哪些命令你可执行，或不可执行。\n如下我们配置几个 command sets 测试， deny all/permit all/others\nArguments 可以使用正则表达式\n授权关联 Profile # Work Centers -\u0026gt; Device Administration -\u0026gt;Device Admin Policy Sets -\u0026gt; Policy Sets\n[ ]\n\u0026ldquo;Insert New Row above\u0026rdquo;， 创建两个 policy.\n\u0026ldquo;Conditions\u0026quot;我们用之前创建的用户组来区分,比如用户组属于 read_only 和 Admin, 我们可以分别设置 profile 和 command set.\n验证: # #priv1, \u0026ldquo;show bgp ipv4 unicast\u0026rdquo; 这个命令被 command_set deny 掉了。\nRP/0/RSP0/CPU0:ASR9001-B#show user group Mon Feb 21 04:11:30.571 UTC priv1 RP/0/RSP0/CPU0:ASR9001-B#show user tasks Mon Feb 21 04:11:35.231 UTC Task: basic-services : READ WRITE EXECUTE Task: bgp : READ Task: interface : READ Task: ipv4 : READ Task: isis : READ RP/0/RSP0/CPU0:ASR9001-B# RP/0/RSP0/CPU0:ASR9001-B#show bgp ipv4 unicast Command authorization failed % Incomplete command. RP/0/RSP0/CPU0:ASR9001-B#show bgp summary Mon Feb 21 04:29:56.690 UTC BGP router identifier 11.1.1.1, local AS number 64072 BGP generic scan interval 60 secs Non-stop routing is enabled BGP table state: Active Table ID: 0xe0000000 RD version: 4 BGP main routing table version 4 BGP NSR Initial initsync version 4294967295 (Not Reached) BGP NSR/ISSU Sync-Group versions 0/0 BGP scan interval 60 secs BGP is operating in STANDALONE mode. Process RcvTblVer bRIB/RIB LabelVer ImportVer SendTblVer StandbyVer Speaker 4 1 4 0 1 0 Neighbor Spk AS MsgRcvd MsgSent TblVer InQ OutQ Up/Down St/PfxRcd 100.1.12.1 0 18084 0 0 0 0 0 00:00:00 Idle 172.16.10.161 0 18084 0 0 0 0 0 00:00:00 Idle RP/0/RSP0/CPU0:ASR9001-B# #priv15\nRP/0/RSP0/CPU0:ASR9001-B#show user group Mon Feb 21 04:29:08.725 UTC priv15 RP/0/RSP0/CPU0:ASR9001-B#show us usb user users RP/0/RSP0/CPU0:ASR9001-B#show user user users RP/0/RSP0/CPU0:ASR9001-B#show user tasks Mon Feb 21 04:29:14.366 UTC Task: aaa : READ WRITE EXECUTE DEBUG Task: acl : READ WRITE EXECUTE DEBUG Task: admin : READ WRITE EXECUTE DEBUG \u0026lt;snip\u0026gt; Task: vpdn : READ WRITE EXECUTE DEBUG Task: vrrp : READ WRITE EXECUTE DEBUG RP/0/RSP0/CPU0:ASR9001-B# ","date":"21 February 2022","externalUrl":null,"permalink":"/blog/configure-asr9k-tacacs-with-ise/","section":"Blog","summary":"Reference # 基于 ISE 对 Cisco 网络设备部署 AAA Configure ASR9K TACACS with Cisco Identity Services Engine 2.","title":"Configure ASR9K TACACS with ISE","type":"blog"},{"content":" Notes. # aaa authorization exec console local aaa authentication login console local aaa authorization commands console none line console authorization commands console login authentication console authorization exec console 在变更AAA配置之前一定要确保将console 配置为本地认证授权， 防止错误的配置导致无法修改配置.\n或者在变更AAA配置时不使用commit，使用”commit confirmed minutes x“.\n这条命令的意思是如果不进行第二次”commit“ 操作，配置将在x分钟后进行配置回滚\nRP/0/RSP0/CPU0:ios(config)#commit confirmed minutes 5 测试AAA， 测试无误后再进行commit RP/0/RSP0/CPU0:ios(config)#commit default VRF # tacacs source-interface Loopback0 vrf default tacacs-server host 10.70.79.177 port 49 key 7 110A1016141D ! aaa accounting commands default start-stop group tacacs+ aaa authorization exec console local aaa authorization exec default group tacacs+ local aaa authorization commands console none aaa authorization commands default group tacacs+ none aaa authentication login console local aaa authentication login default group tacacs+ local non-default VRF # tacacs source-interface MgmtEth0/RSP0/CPU0/0 vrf MGMT tacacs-server host 10.70.79.177 port 49 key 7 110A1016141D ! aaa accounting commands default start-stop group XU aaa group server tacacs+ XU server 10.70.79.177 vrf MGMT ! aaa authorization exec console local aaa authorization exec default group XU local aaa authorization commands console none aaa authorization commands default group XU none aaa authentication login console local aaa authentication login default group XU local User-Defined User Groups/Task Groups example # taskgroup priv1 task read bgp task read ipv4 task read isis task read interface task write basic-services task execute basic-services description view_only ! taskgroup priv5 task read aaa task read acl task read atm task read bfd task read bgp task read cdp task read cef task read ppp task read qos task read rib task read bcdl task read boot task read diag task read hdlc task read hsrp task read ipv4 task read isis task read snmp task read vlan task read admin task read bundle task read fabric task read static task read sysmgr task read system task read drivers task read logging task read monitor task read netflow task read network task read pos-dpt task read pkg-mgmt task read fault-mgr task read interface task read inventory task read route-map task read sonet-sdh task read filesystem task read tty-access task read config-mgmt task read ip-services task read route-policy task read host-services task read basic-services task read config-services task write basic-services task execute filesystem task execute basic-services description read_only_all ! taskgroup priv10 task write acl task write bgp task write cdp task write cef task write ppp task write qos task write boot task write diag task write ipv4 task write isis task write snmp task write admin task write static task write sysmgr task write system task write logging task write monitor task write netflow task write network task write pkg-mgmt task write interface task write inventory task write route-map task write sonet-sdh task write ip-services task write route-policy task write basic-services task execute bgp task execute admin task execute logging task execute pkg-mgmt task execute sonet-sdh inherit taskgroup priv5 ! usergroup priv1 taskgroup priv1 description view_only usergroup priv5 taskgroup priv5 description read_only_all ! usergroup priv10 taskgroup priv10 description priv15_without_aaa ! usergroup priv15 taskgroup root-system taskgroup cisco-support description pri15 line template # 删除line default配置， 并配置客户自己的temple： RP/0/RSP0/CPU0:ASR9006-A#show run line template SSH Sat Jul 23 19:55:49.536 UTC line template SSH login authentication SSH transport input ssh RP/0/RSP0/CPU0:ASR9006-A#show run | in vty Sat Jul 23 20:05:46.117 UTC Building configuration... vty-pool default 0 4 line-template SSH RP/0/RSP0/CPU0:ASR9006-A#show run aaa Sat Jul 23 20:06:11.770 UTC aaa authentication login SSH group tacacs+ local Reference # Cisco IOS XR Task ID Reference Guide, Release 4.1 IOS XR – TACACS (default and non-default VRF) TACACS (AAA) Configuration in Cisco (IOS-XR, IOS-XE, IOS, NX-OS) ","date":"20 February 2022","externalUrl":null,"permalink":"/blog/tacacs-aaa-configuration-in-cisco-ios-xr/","section":"Blog","summary":"Notes.","title":"TACACS (AAA) Configuration in Cisco IOS XR","type":"blog"},{"content":" ASR9K # CPU # 这张图涵盖了 ASR9000 全系列板卡的架构以及使用的芯片， 其中最右边一列为 CPU 的类型； 可以看到最初一代和二代板卡使用的都是 PowerPC 的处理器， PowerPC 采用的都是 32 位的指令集， 这也是为什么这两代板卡没法跑在最新的 64 位 XR 系统上的原因。最新的三代采用的都是 Intel 的处理器， 使用以下命令我们可以查看板卡处理器（CPU）的类型:\n0/0/CPU0 使用的是四核 E500 型号的 CPU， 0/6/CPU0 采用的是 8 核英特尔 686。\nRP/0/RSP0/CPU0:ASR-9910-A#run attach 0/0/cpu0 Tue Sep 14 10:36:44.758 UTC attach: Starting session 1 to node 0/0/cpu0 # # # pidin in CPU:PPC Release:6.4.0 FreeMem:3593Mb/8192Mb BootTime:Jan 01 00:00:00 UTC 1970 Processor1: 80230020 E500mc Core 1500MHz FPU Processor2: 80230020 E500mc Core 1500MHz FPU Processor3: 80230020 E500mc Core 1500MHz FPU Processor4: 80230020 E500mc Core 1500MHz FPU # exi Terminating attach to node 0/0/cpu0.. RP/0/RSP0/CPU0:ASR-9910-A#run attach 0/6/cpu0 Tue Sep 14 10:45:07.159 UTC attach: Starting session 1 to node 0/6/cpu0 # pidin in CPU:X86 Release:6.4.0 FreeMem:18Gb/24Gb BootTime:Jan 01 00:00:50 UTC 2012 Processor1: 197294 Intel 686 F6M14S4 2000MHz FPU Processor2: 197294 Intel 686 F6M14S4 2000MHz FPU Processor3: 197294 Intel 686 F6M14S4 2001MHz FPU Processor4: 197294 Intel 686 F6M14S4 2007MHz FPU Processor5: 197294 Intel 686 F6M14S4 2007MHz FPU Processor6: 197294 Intel 686 F6M14S4 1999MHz FPU 下面是在 64bit 系统下查看 CPU 型号的命令:\nRP/0/RSP1/CPU0:ASR-9906-B#run Tue Sep 14 10:50:16.750 UTC s[xr-vm_node0_RSP1_CPU0:~]$ssh 192.0.12.3 Last login: Wed Jul 7 13:37:52 2021 from 172.0.1.32 [xr-vm_node0_1_CPU0:~]$ [xr-vm_node0_1_CPU0:~]$cat /proc/cpuinfo processor : 0 vendor_id : GenuineIntel cpu family : 6 model : 95 model name : Intel(R) Atom(TM) CPU C3758 @ 2.20GHz \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; NPU and Fabric # 图示最左侧是 NPU ASIC （network process unit）， 我们所说的 cef 表象之类的是存储在这类芯片的 on-chip TCAM 上。\n型号分别为 Trident/Typhon/tomahawk/lightspeed/Lightspeed+, 最新一代已经达到 7NM 的工艺。这款芯片也是 CISCO 自研的。\n前三代中间有个回形针一样的为 FIA （fabric interface asic）用来连接右侧的 Switch Fabric ASIC， 转发芯片。\n最新的两代中虽然没有 FIA 芯片， 但你可以理解位在 NP 上内置类似的功能， 下面两张图显示的是前三代和最新两代 FIA 芯片的位置。\n最右侧的织装物为 Switch Fabric， 在 ASR9K 的 LC 中我们也叫它 XBAR， 或者 crossbar, 它与 Fabric 矩阵卡上使用的转发芯片是一样的。\n如何去确认 NPU 的型号: # Trident/Typhon/tomahawk # prm_server_ty 进程,“ty”代表 typhon 板卡\nprm_server_to 进程，“to”代表 tomahawk 板卡\nRP/0/RSP0/CPU0:ASR-9006-D#show processes location 0/1/cPU0 | in prm Sun Dec 12 22:19:42.497 kst 309 1 2 16K 10 Receive 11:15:27:0838 0:00:00:0071 prm_verifier 308 1 3 64K 10 Receive 0:00:00:0060 0:00:10:0177 prm_ssmh 308 2 0 64K 8 Receive 0:00:01:0055 0:00:06:0212 prm_ssmh 308 3 3 64K 10 Receive 11:15:29:0540 0:00:00:0000 prm_ssmh 308 4 0 64K 10 Receive 0:00:07:0447 0:00:19:0099 prm_ssmh 308 5 3 64K 10 Receive 0:00:00:0226 0:00:00:0004 prm_ssmh 308 6 3 64K 10 Sigwaitinfo 11:15:27:0074 0:00:00:0000 prm_ssmh 307 1 0 364K 10 Receive 0:00:00:0491 0:02:51:0560 prm_server_ty 307 2 1 364K 10 Receive 11:15:28:0418 0:00:00:0001 prm_server_ty RP/0/RSP1/CPU0:ASR-9006-J#show processes location 0/1/CPU0 | in prm Mon Dec 13 07:04:07.435 UTC 308 1 4 16K 10 Receive 1139:54:35:0430 0:00:00:0016 prm_verifier 307 1 5 64K 10 Receive 0:00:00:0044 0:22:59:0614 prm_ssmh 307 2 5 64K 10 Receive 0:00:01:0897 0:20:01:0533 prm_ssmh 307 3 3 64K 10 Receive 1139:54:39:0402 0:00:00:0000 prm_ssmh 307 4 4 64K 10 Receive 0:00:02:0435 0:00:06:0813 prm_ssmh 307 5 0 64K 10 Receive 0:00:00:0740 0:00:00:0041 prm_ssmh 307 6 3 64K 10 Sigwaitinfo 1139:54:35:0736 0:00:00:0000 prm_ssmh 306 1 4 820K 10 Receive 0:00:00:0107 0:00:15:0766 prm_server_to 306 2 2 820K 10 Receive 844:16:33:0421 0:00:00:0000 prm_server_to 306 3 1 820K 10 Receive 844:16:33:0421 0:00:00:0000 prm_server_to Lightspeed/Lightspeed+ # ls_prm_svr 进程， ls 代表是 lightspeed 或者 lightspeed+芯片.\nRP/0/RSP0/CPU0:ASR-9904-E-eXR#show processes location 0/0/CPU0 | in prm Mon Dec 13 06:46:22.322 UTC 121 5520 0K 20 Sleeping punt_lib_prm 0 255 4754 0K 20 Sleeping prm_verifier 0 255 4957 0K 20 Sleeping prm_verifier 0 338 4758 0K 20 Sleeping ls_prm_svr 0 338 5122 0K 20 Sleeping ls_prm_svr 0 338 5134 0K 20 Sleeping ls_prm_svr 0 127 6000 0K 20 Sleeping punt_lib_prm 0 383 5738 0K 20 Sleeping timing_prm_init 0 372 6673 0K 20 Sleeping punt_lib_prm 0 进一步判断，需要查看下面的进程\u0026quot;npu_server_lsp\u0026quot; lightspeed+ 会有 npu_server_lsp 这个进程. lightspeed 则没这个进程。\nRP/0/RSP1/CPU0:ASR-9006-F#show processes location 0/0/CPU0 | in npu Mon Dec 13 07:08:48.649 UTC 234 5260 0K 20 Sleeping npu_server_main 0 234 5673 0K 20 Sleeping npu_server_lsp 0 234 5687 0K 20 Sleeping npu_server_lsp 0 234 5695 0K 20 Sleeping npu_server_gasp 0 234 5939 0K 20 Sleeping npu_server_main 0 234 6121 0K 20 Sleeping npu_server_main 0 NCS55 # CPU # NCS55 系列目前使用的 CPU 都是 Intel 的，系统都都是 64bit 的 eXR,使用类似的 命令去查看:\nRP/0/RP0/CPU0:NCS-5504-A#run Mon Dec 13 08:44:47.026 UTC [xr-vm_node0_RP0_CPU0:~]$ [xr-vm_node0_RP0_CPU0:~]$cat /proc/cpuinfo processor : 0 vendor_id : GenuineIntel cpu family : 6 model : 62 model name : Intel(R) Xeon(R) CPU E5-2420 v2 @ 2.20GHz stepping : 4 microcode : 0x42d cpu MHz : 2201.000 cache size : 15360 KB physical id : 0 siblings : 12 core id : 0 cpu cores : 6 apicid : 0 initial apicid : 0 fpu : yes fpu_exception : yes cpuid level : 13 NPU and Fabric # NCS55/NCS57 系列产品,其中 NPU 和 fabric 的芯片都是 Broadcom 的 DNX 系列:\nStrataDNX\n使用以下方式确认芯片类型:\nRP/0/RP0/CPU0:NCS-5516-A#show controllers npu resources all location 0/0/CPU0 Mon Dec 20 04:30:48.540 UTC HW Resource Information Name : lem Asic Type : Jericho 2 或者:\nRP/0/RP0/CPU0:NCS-5516-A#show controller fia diagshell 0 \u0026#34;show unit\u0026#34; location 0/0/CPU0 Thu Jan 13 03:28:07.198 UTC Node ID: 0/0/CPU0 R/S/I: 0/0/0 Unit 0 chip BCM88690_B1 (current) 再或者\nRP/0/RP0/CPU0:NCS-5516-A#show controller fia diagshell 0 \u0026#34;soc\u0026#34; location 0/0/CPU0 Thu Jan 13 03:24:54.251 UTC Node ID: 0/0/CPU0 R/S/I: 0/0/0 ============================================================ | Device General Info | | UNIT 0 Driver Control Structure | ============================================================ | Chip | Rev | Driver | Family | Board type | ============================================================ | BCM88690_B1 | 0x12 | BCM88690_B0 | jericho2 | 0x0 | ============================================================ ======================== | Device Status | ======================== | Flags = 0x40203 | ======================== | attached | ------------------------ | initialized | ======================== =============================================================================== | Device Additional Info | =============================================================================== | Feature | Values | =============================================================================== | CM | Base=0x7f44d3800000 | ------------------------------------------------------------------------------- | Disabled | reg_flags=0x0 mem_flags=0x0 | ------------------------------------------------------------------------------- | Debug | SchanOps=1742512993 | ------------------------------------------------------------------------------- | Counter | int=0us | ------------------------------------------------------------------------------- | Timeout | Schan=300000us MIIM=0(3000000us) | ------------------------------------------------------------------------------- | Intr | Total=0 Sc=0 ScErr=0 MMU/ARLErr=0 | ------------------------------------------------------------------------------- | PCI | LinkStat=0 PCIfatal=0 PCIparity=0 | ------------------------------------------------------------------------------- | ARL | ARLdrop=0 ARLmbuf=0 ARLxfer=0 ARLcnt0=0 | ------------------------------------------------------------------------------- | DMA | TableDMA=0 TSLAM-DMA=0 | ------------------------------------------------------------------------------- | Mem | TMemCmd[BSE]=0 MemCmd[CSE]=0 MemCmd[HSE]=0 | ------------------------------------------------------------------------------- | ChipFunc | ChipFunc[0]=0 ChipFunc[1]=0 ChipFunc[2]=0 ChipFunc[3]=0 | | | ChipFunc[4]=0 | ------------------------------------------------------------------------------- | I2C | I2C=0 MII=0 StatsDMA=0 Desc=0 Chain=0 | =============================================================================== RP/0/RP0/CPU0:NCS-5516-A# 同理， 如果你需要查看 fabric 卡的 chip， 也可以使用同样的命令， 但是得在 admin vm 下运行:\nsysadmin-vm:0_RP0# show controller sfe diagshell 0 \u0026#34;show unit\u0026#34; location 0/fc0 Thu Jan 13 03:37:22.130 UTC+00:00 Unit 2 chip BCM88790_b0 Unit 1 chip BCM88790_b0 Unit 0 chip BCM88790_b0 (current) ","date":"13 January 2022","externalUrl":null,"permalink":"/blog/asr9000-ncs55-8000-chips/","section":"Blog","summary":"ASR9K # CPU # 这张图涵盖了 ASR9000 全系列板卡的架构以及使用的芯片， 其中最右边一列为 CPU 的类型； 可以看到最初一代和二代板卡使用的都是 PowerPC 的处理器， PowerPC 采用的都是 32 位的指令集， 这也是为什么这两代板卡没法跑在最新的 64 位 XR 系统上的原因。最新的三代采用的都是 Intel 的处理器， 使用以下命令我们可以查看板卡处理器（CPU）的类型:","title":"Cisco ASR9000/NCS55/Cisco 8000 Chips","type":"blog"},{"content":" 背景: # log4j漏洞，公司IT对个人虚机进行了扫描，报告出我的部分虚机存在log4j version 为1.2.17，可能会受到影响，需要我们自行处理下。所以想着升级下java的版本， remove掉之前的老版本1.8，在看一下后续还会不会被扫出来.\n[root@server2 ~]# yum list installed | grep log4j Repodata is over 2 weeks old. Install yum-cron? Or run: yum makecache fast log4j.noarch 1.2.17-16.el7_4 @anaconda [root@server2 ~]# Centos Java upgrade to 1.11 from 1.8 # 检查下java的版本，使用的是openjdk版本是1.8；openjdk和Oracle的Java是有点区别的，Oracle与OpenJDK之间的区别介绍了它们的区别，所以本文后续介绍的openjdk的升级。 [root@server2 ~]# java -version openjdk version \u0026#34;1.8.0_161\u0026#34; OpenJDK Runtime Environment (build 1.8.0_161-b14) OpenJDK 64-Bit Server VM (build 25.161-b14, mixed mode) 2. 搜索java-11可安装的包：\n[root@server2 ~]# sudo yum search java-11 Loaded plugins: fastestmirror, langpacks Repodata is over 2 weeks old. Install yum-cron? Or run: yum makecache fast Determining fastest mirrors * base: mirror.newmediaexpress.com * epel: mirrors.bestthaihost.com * extras: centos.usonyx.net * updates: mirror.aktkn.sg ======================================================= N/S matched: java-11 ======================================================== java-11-openjdk.i686 : OpenJDK Runtime Environment 11 java-11-openjdk.x86_64 : OpenJDK 11 Runtime Environment java-11-openjdk-demo.i686 : OpenJDK Demos 11 java-11-openjdk-demo.x86_64 : OpenJDK 11 Demos java-11-openjdk-devel.i686 : OpenJDK Development Environment 11 java-11-openjdk-devel.x86_64 : OpenJDK 11 Development Environment java-11-openjdk-headless.i686 : OpenJDK Headless Runtime Environment 11 java-11-openjdk-headless.x86_64 : OpenJDK 11 Headless Runtime Environment java-11-openjdk-javadoc.i686 : OpenJDK 11 API documentation java-11-openjdk-javadoc.x86_64 : OpenJDK 11 API documentation java-11-openjdk-javadoc-zip.i686 : OpenJDK 11 API documentation compressed in a single archive java-11-openjdk-javadoc-zip.x86_64 : OpenJDK 11 API documentation compressed in a single archive java-11-openjdk-jmods.i686 : JMods for OpenJDK 11 java-11-openjdk-jmods.x86_64 : JMods for OpenJDK 11 java-11-openjdk-src.i686 : OpenJDK Source Bundle 11 java-11-openjdk-src.x86_64 : OpenJDK 11 Source Bundle java-11-openjdk-static-libs.i686 : OpenJDK libraries for static linking 11 java-11-openjdk-static-libs.x86_64 : OpenJDK 11 libraries for static linking 3. 安装2个包，java-11-openjdk.x86_64 and java-11-openjdk-devel.x86_64\n[root@server2 ~]# yum -y install java-11-openjdk [root@server2 ~]# yum -y install java-11-openjdk-devel 4. 修改java 版本到java11.\n[root@server2 ~]# alternatives --config java There are 2 programs which provide \u0026#39;java\u0026#39;. Selection Command ----------------------------------------------- *+ 1 java-1.8.0-openjdk.x86_64 (/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.161-2.b14.el7.x86_64/jre/bin/java) 2 java-11-openjdk.x86_64 (/usr/lib/jvm/java-11-openjdk-11.0.13.0.8-1.el7_9.x86_64/bin/java) Enter to keep the current selection[+], or type selection number: 2 [root@server2 ~]# [root@server2 ~]# [root@server2 ~]# java -version openjdk version \u0026#34;11.0.13\u0026#34; 2021-10-19 LTS OpenJDK Runtime Environment 18.9 (build 11.0.13+8-LTS) OpenJDK 64-Bit Server VM 18.9 (build 11.0.13+8-LTS, mixed mode, sharing) [root@server2 ~]# 5. remove 旧的java 版本\n[root@server2 ~]# rpm -qa | grep java python-javapackages-3.4.1-11.el7.noarch java-1.8.0-openjdk-1.8.0.161-2.b14.el7.x86_64 tzdata-java-2021e-1.el7.noarch javassist-3.16.1-10.el7.noarch java-11-openjdk-11.0.13.0.8-1.el7_9.x86_64 javamail-1.4.6-8.el7.noarch java-1.8.0-openjdk-headless-1.8.0.161-2.b14.el7.x86_64 java-11-openjdk-devel-11.0.13.0.8-1.el7_9.x86_64 javapackages-tools-3.4.1-11.el7.noarch java-11-openjdk-headless-11.0.13.0.8-1.el7_9.x86_64 [root@server2 ~]# yum -y remove java-1.8.0-openjdk-1.8.0.161-2.b14.el7.x86_64 java-1.8.0-openjdk-headless-1.8.0.161-2.b14.el7.x86_64 ","date":"23 December 2021","externalUrl":null,"permalink":"/blog/how-to-upgrade-java-version-on-centos/","section":"Blog","summary":"背景: # log4j漏洞，公司IT对个人虚机进行了扫描，报告出我的部分虚机存在log4j version 为1.","title":"How to upgrade Java Version on Centos","type":"blog"},{"content":"Record the installation process of the windows11 virtual machine.\nThe error message shown in the figure below will appear during the normal virtual machine installation process, press and hold \u0026ldquo;Shift+F10\u0026rdquo; to bring up the shell window,\nAnd exec below command:\nREG ADD HKLM\\SYSTEM\\Setup\\LabConfig /v BypassTPMCheck /t REG_DWORD /d 1 REG ADD HKLM\\SYSTEM\\Setup\\LabConfig /v BypassSecureBootCheck /t REG_DWORD /d 1 REG ADD HKLM\\SYSTEM\\Setup\\LabConfig /v BypassRAMCheck /t REG_DWORD /d 1 Then you can close this shell window, and select the previous install step, Re-install it again.\n","date":"2 November 2021","externalUrl":null,"permalink":"/blog/run-windows-11-in-vmware-workstation/","section":"Blog","summary":"Record the installation process of the windows11 virtual machine.","title":"Run Windows 11 in VMware Workstation","type":"blog"},{"content":"","date":"16 September 2021","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","date":"16 September 2021","externalUrl":null,"permalink":"/tags/securecrt/","section":"Tags","summary":"","title":"Securecrt","type":"tags"},{"content":" Step 1： 准备工作 # VB 脚本及 Py 脚本下载连接, 建议直接使用 VB 脚本，不用配置 Python 环境.\nVB 脚本：ImportArbitraryDataFromFileToSecureCRTSessions(pre-v9.0,post-v7.2).vbs.txt\n修改下后缀为 vbs，打开脚本看下配置文件:\n\u0026#39; The first line of your data file should contain a comma-separated (or whatever \u0026#39; you define as the g_strDelimiter below) list of supported \u0026#34;fields\u0026#34; designated \u0026#39; by the following keywords: \u0026#39; ----------------------------------------------------------------------------- \u0026#39; session_name: The name that should be used for the session. If this field \u0026#39; does not exist, the hostname field is used as the session_name. \u0026#39; folder: Relative path for session as displayed in the Connect dialog. \u0026#39; hostname: The hostname or IP for the remote server. \u0026#39; protocol: The protocol (SSH2, SSH1, telnet, rlogin) \u0026#39; port: The port on which remote server is listening \u0026#39; username: The username for the account on the remote server \u0026#39; emulation: The emulation (vt100, xterm, etc.) \u0026#39; description: The comment/description. Multiple lines are separated with \u0026#39;\\r\u0026#39; \u0026#39; ============================================================================= \u0026#39; \u0026#39; \u0026#39; As mentioned above, the first line of the data file instructs this script as \u0026#39; to the format of the fields in your data file and their meaning. It is not a \u0026#39; requirement that all the options be used. For example, notice the first line \u0026#39; of the following file only uses the \u0026#34;hostname\u0026#34;, \u0026#34;username\u0026#34;, and \u0026#34;protocol\u0026#34; \u0026#39; fields. Note also that the \u0026#34;protocol\u0026#34; field can be defaulted so that if a \u0026#39; protocol field is empty it will use the default value. \u0026#39; ----------------------------------------------------------------------------- \u0026#39; hostname,username,folder,protocol=SSH2 \u0026#39; 192.168.0.1,root,_imported,SSH1 \u0026#39; 192.168.0.2,admin,_imported,SSH2 \u0026#39; 192.168.0.3,root,_imported\\folderA, \u0026#39; 192.168.0.4,root,, \u0026#39; 192.168.0.5,admin,_imported\\folderB,telnet \u0026#39; ... and so on \u0026#39; ============================================================================= 脚本提供了多个变量名，并提供了一个 example， 所以我们 照着这个新建一个 txt 文件，用来保存设备信息， 如下:\nStep 2: Run scrip # Script - \u0026gt; Run _\u0026gt; 选中刚刚下载的脚本， 脚本开始执行会弹窗让你选择导入设备信息， 这时候选择上一步新建的那个设备信息文件.\nStep 3：为 Telnet 设置用户名密码: # 如下图，生成的 session, 在文件夹上右击会对所有 session 进行操作。\n输入相应的提示符， 对应的用户名/密码.\n","date":"16 September 2021","externalUrl":null,"permalink":"/blog/securecrt-import-session/","section":"Blog","summary":"Step 1： 准备工作 # VB 脚本及 Py 脚本下载连接, 建议直接使用 VB 脚本，不用配置 Python 环境.","title":"SecureCRT批量创建及导入session","type":"blog"},{"content":"","date":"16 September 2021","externalUrl":null,"permalink":"/categories/tools/","section":"Categories","summary":"","title":"Tools","type":"categories"},{"content":" 背景 # 工作用的Linux 虚机使用的是默认安装， 根只分了50G的空间, 用着用着就不够了，所以想着给扩个空间。\n[root@localhost repository]# df -h Filesystem Size Used Avail Use% Mounted on /dev/mapper/centos-root 50G 41G 9.4G 82% / devtmpfs 32G 0 32G 0% /dev tmpfs 32G 0 32G 0% /dev/shm tmpfs 32G 637M 31G 2% /run tmpfs 32G 0 32G 0% /sys/fs/cgroup /dev/sda1 1014M 150M 865M 15% /boot /dev/mapper/centos-home 441G 15G 427G 4% /home overlay 50G 41G 9.4G 82% /var/lib/docker/overlay2/398d2eeb78bef327ecaca5cd7de0087ce59f76a938e5ef5dbce91c2895a4b1aa/merged overlay 50G 41G 9.4G 82% /var/lib/docker/overlay2/0f05cdc7e42716c57997501e96310ca1769824b28ea91d2509502a35be589840/merged overlay 50G 41G 9.4G 82% /var/lib/docker/overlay2/5c10dbf435357bf50eecc148cb9a90d211384abca9fd9a5314de5fc62910c6f5/merged overlay 50G 41G 9.4G 82% /var/lib/docker/overlay2/a0fe47c9a9dca33b1fcfd35684aadc2037dc1398a23b2b09ebcad476636e0dab/merged overlay 50G 41G 9.4G 82% /var/lib/docker/overlay2/2eb88ff71135e7b9be851a22905aeded34038a1bdf06cf5d9c963a8378ecc923/merged overlay 50G 41G 9.4G 82% /var/lib/docker/overlay2/2013e4d4c128e0da65e969cfc432850615257874a81dd7bf73ade4bec75c4600/merged overlay 50G 41G 9.4G 82% /var/lib/docker/overlay2/912b49fbc5ead76d17e25059db4301cbcd0230e6be9063c5e17c6c9a1279da01/merged tmpfs 6.3G 0 6.3G 0% /run/user/0 overlay 50G 41G 9.4G 82% /var/lib/docker/overlay2/11a70ceeddd9c3201fef095c4e65d61e24d1429a5c3e04b90310e1f3ebda6572/merged Step1: 添加新硬盘，格式化分区 # [root@localhost repository]# fdisk -l Disk /dev/sda: 536.9 GB, 536870912000 bytes, 1048576000 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disk label type: dos Disk identifier: 0x000cf381 Device Boot Start End Blocks Id System /dev/sda1 * 2048 2099199 1048576 83 Linux /dev/sda2 2099200 1048575999 523238400 8e Linux LVM Disk /dev/mapper/centos-root: 53.7 GB, 53687091200 bytes, 104857600 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disk /dev/mapper/centos-swap: 8455 MB, 8455716864 bytes, 16515072 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disk /dev/mapper/centos-home: 473.6 GB, 473645973504 bytes, 925089792 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disk /dev/sdb: 536.9 GB, 536870912000 bytes, 1048576000 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes [root@localhost repository]# [root@localhost repository]# [root@localhost repository]# [root@localhost repository]# You have new mail in /var/spool/mail/root [root@localhost repository]# [root@localhost repository]# [root@localhost repository]# [root@localhost repository]# lsblk NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT sda 8:0 0 500G 0 disk ├─sda1 8:1 0 1G 0 part /boot └─sda2 8:2 0 499G 0 part ├─centos-root 253:0 0 50G 0 lvm / ├─centos-swap 253:1 0 7.9G 0 lvm [SWAP] └─centos-home 253:2 0 441.1G 0 lvm /home sdb 8:16 0 500G 0 disk sr0 11:0 1 1024M 0 rom [root@localhost repository]# [root@localhost repository]# [root@localhost repository]# [root@localhost repository]# fdisk /dev/sdb Welcome to fdisk (util-linux 2.23.2). Changes will remain in memory only, until you decide to write them. Be careful before using the write command. Device does not contain a recognized partition table Building a new DOS disklabel with disk identifier 0x64836409. Command (m for help): n Partition type: p primary (0 primary, 0 extended, 4 free) e extended Select (default p): Using default response p Partition number (1-4, default 1): First sector (2048-1048575999, default 2048): Using default value 2048 Last sector, +sectors or +size{K,M,G} (2048-1048575999, default 1048575999): Using default value 1048575999 Partition 1 of type Linux and of size 500 GiB is set Command (m for help): Command (m for help): Command (m for help): Command (m for help): w The partition table has been altered! Calling ioctl() to re-read partition table. Syncing disks. [root@localhost repository]# 格式化分区\n[root@localhost repository]# mkfs.ext4 /dev/sdb1 mke2fs 1.42.9 (28-Dec-2013) Filesystem label= OS type: Linux Block size=4096 (log=2) Fragment size=4096 (log=2) Stride=0 blocks, Stripe width=0 blocks 32768000 inodes, 131071744 blocks 6553587 blocks (5.00%) reserved for the super user First data block=0 Maximum filesystem blocks=2279604224 4000 block groups 32768 blocks per group, 32768 fragments per group 8192 inodes per group Superblock backups stored on blocks: 32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, 4096000, 7962624, 11239424, 20480000, 23887872, 71663616, 78675968, 102400000 Allocating group tables: done Writing inode tables: done Creating journal (32768 blocks): done Writing superblocks and filesystem accounting information: done [root@localhost repository]# Step 2:调整逻辑卷大小 # [root@localhost repository]# vgextend centos /dev/sdb1 WARNING: ext4 signature detected on /dev/sdb1 at offset 1080. Wipe it? [y/n]: y Wiping ext4 signature on /dev/sdb1. Physical volume \u0026#34;/dev/sdb1\u0026#34; successfully created. Volume group \u0026#34;centos\u0026#34; successfully extended [root@localhost repository]# [root@localhost repository]# [root@localhost repository]# pvs PV VG Fmt Attr PSize PFree /dev/sda2 centos lvm2 a-- \u0026lt;499.00g 4.00m /dev/sdb1 centos lvm2 a-- \u0026lt;500.00g \u0026lt;500.00g [root@localhost repository]# [root@localhost repository]# [root@localhost repository]# vgs VG #PV #LV #SN Attr VSize VFree centos 2 3 0 wz--n- 998.99g 500.00g [root@localhost ~]# lvs LV VG Attr LSize Pool Origin Data% Meta% Move Log Cpy%Sync Convert home centos -wi-ao---- \u0026lt;441.12g root centos -wi-ao---- 50.00g swap centos -wi-ao---- \u0026lt;7.88g [root@localhost ~]# [root@localhost ~]# [root@localhost ~]# lvextend -L 550G /dev/mapper/centos-root Size of logical volume centos/root changed from 50.00 GiB (12800 extents) to 550.00 GiB (140800 extents). Logical volume centos/root successfully resized. [root@localhost ~]# [root@localhost ~]# [root@localhost ~]# [root@localhost ~]# pvs PV VG Fmt Attr PSize PFree /dev/sda2 centos lvm2 a-- \u0026lt;499.00g 0 /dev/sdb1 centos lvm2 a-- \u0026lt;500.00g 0 [root@localhost ~]# xfs_growfs /dev/centos/root meta-data=/dev/mapper/centos-root isize=512 agcount=4, agsize=3276800 blks = sectsz=512 attr=2, projid32bit=1 = crc=1 finobt=0 spinodes=0 data = bsize=4096 blocks=13107200, imaxpct=25 = sunit=0 swidth=0 blks naming =version 2 bsize=4096 ascii-ci=0 ftype=1 log =internal bsize=4096 blocks=6400, version=2 = sectsz=512 sunit=0 blks, lazy-count=1 realtime =none extsz=4096 blocks=0, rtextents=0 data blocks changed from 13107200 to 144179200 [root@localhost ~]# [root@localhost ~]# [root@localhost ~]# df -h Filesystem Size Used Avail Use% Mounted on /dev/mapper/centos-root 550G 41G 510G 8% / devtmpfs 32G 0 32G 0% /dev tmpfs 32G 0 32G 0% /dev/shm tmpfs 32G 637M 31G 2% /run tmpfs 32G 0 32G 0% /sys/fs/cgroup /dev/sda1 1014M 150M 865M 15% /boot /dev/mapper/centos-home 441G 15G 427G 4% /home ","date":"3 September 2021","externalUrl":null,"permalink":"/blog/increase-the-size-of-a-linux-lvm/","section":"Blog","summary":"背景 # 工作用的Linux 虚机使用的是默认安装， 根只分了50G的空间, 用着用着就不够了，所以想着给扩个空间。","title":"Increase the size of a Linux LVM","type":"blog"},{"content":"","date":"3 September 2021","externalUrl":null,"permalink":"/tags/linux/","section":"Tags","summary":"","title":"Linux","type":"tags"},{"content":"","date":"3 September 2021","externalUrl":null,"permalink":"/categories/linux/","section":"Categories","summary":"","title":"Linux","type":"categories"},{"content":" Step 1: Reload Cisco 8000 and Config PXE # Reload chassis\nEnter ESC to BIOS， Select \u0026ldquo;Boot Manager\u0026rdquo; then IPXE\niPXE initialising devices...ok iPXE 1.0.0+ (b965) -- Open Source Network Boot Firmware -- http://ipxe.org Features: DNS HTTP HTTPS TFTP EFI ISO9660_grub Menu iPXE\u0026gt; iPXE\u0026gt; ifopen net0 iPXE\u0026gt; iPXE\u0026gt; iPXE\u0026gt; ifstat net0: 08:4f:a9:5c:fb:c9 using i210 on PCI02:00.0 (open) [Link:up, TX:0 TXE:0 RX:10 RXE:3] [RXE: 1 x \u0026#34;The socket is not connected (http://ipxe.org/380f6093)\u0026#34;] [RXE: 1 x \u0026#34;Error 0x440e6083 (http://ipxe.org/440e6083)\u0026#34;] [RXE: 1 x \u0026#34;Operation not supported (http://ipxe.org/3c086083)\u0026#34;] net1: 00:a0:c9:00:00:00 using x557 on PCI04:00.0 (closed) [Link:down, TX:0 TXE:0 RX:0 RXE:0] [Link status: Down (http://ipxe.org/38086193)] net2: 08:4f:a9:5c:fb:ca using x557 on PCI04:00.1 (closed) [Link:down, TX:0 TXE:0 RX:0 RXE:0] [Link status: Down (http://ipxe.org/38086193)] iPXE\u0026gt; iPXE\u0026gt; set net0/ip 10.75.49.7 iPXE\u0026gt; set net0/netmask 255.255.255.0 iPXE\u0026gt; set net0/gateway 10.75.49.1 iPXE\u0026gt; ifopen net0 3. BOOT the ONIE image.\niPXE\u0026gt; boot tftp://10.76.76.160/onie-recovery-x86_64-cisco_8000-r0.efi64.pxe tftp://10.76.76.160/onie-recovery-x86_64-cisco_8000-r0.efi64.pxe... 94% ok Step 2: Boot Sonic image # Booting `ONIE: Embed ONIE\u0026#39; ONIE: Embedding ONIE ... Platform : x86_64-cisco_8000-r0 [ initrd.xz 22.30MiB 100% 3.28MiB/s ] Version : 2020.05br.CISCO Build Date: 2020-06-02T00:32+00:00 [ 2.356040] mtdoops: mtd device (mtddev=name/number) must be supplied [ 4.607739] ixgbe 0000:04:00.0: HW Init failed: -17 [ 6.590753] ixgbe 0000:04:00.1: HW Init failed: -17 Info: Mounting kernel filesystems... done. [ 6.791220] cisco_util: loading out-of-tree module taints kernel. [ 6.815163] cisco-fpga-msd msd.1.auto: successfully cleared scratchram bios boot mode @ 0x100 Info: cisco-fpga-wdt: inactive Info: BIOS mode: UEFI Info: Using eth0 MAC address: 08:4f:a9:5c:fb:c9 Info: eth0: Checking link... up. Info: Trying DHCPv4 on interface: eth0 ONIE: Using DHCPv4 addr: eth0: 10.106.62.164 / 255.255.255.0 Starting: klogd... done. Starting: dropbear ssh daemon... done. Starting: telnetd... done. discover: ONIE embed mode detected. Running updater. Starting: discover... done. Please press Enter to activate this console. Info: eth0: Checking link... up. Info: Trying DHCPv4 on interface: eth0 ONIE: Using DHCPv4 addr: eth0: 10.106.62.164 / 255.255.255.0 ONIE: Starting ONIE Service Discovery Info: Found static url: file:///lib/onie/onie-updater ONIE: Executing installer: file:///lib/onie/onie-updater Verifying image checksum ... OK. Preparing image archive ... OK. ONIE: Version : 2020.05br.CISCO ONIE: Architecture : x86_64 ONIE: Machine : cisco_8000 ONIE: Machine Rev : 0 ONIE: Config Version: 1 ONIE: Build Date : 2020-06-02T00:32+00:00 Installing ONIE on: /dev/sda ONIE: Success: Firmware update URL: file:///lib/onie/onie-updater ONIE: Success: Firmware update version: 2020.05br.CISCO ONIE: Rebooting... discover: ONIE embed mode detected. Stopping: discover...start-stop-daemon: warning: killing process 961: No such process done. Stopping: dropbear ssh daemon... done. Stopping: telnetd... done. Stopping: klogd... done. Stopping: syslogd... done. Info: Unmounting kernel filesystems umount: can\u0026#39;t unmount /: Invalid argument The system is going down NOW! Sent SIGTERM to all processes Sent SIGKILL to all processes Requesting system reboot Cisco 8000(R) Series BIOS Ver 1.15 Primary Intel(R) Xeon(R) CPU D-1530 @ 2.40GHz Board Type 0x103 PID 8201-SYS Serial FOC2428NWHY X86FPGA 1.2.0 TamLib 3.04.12 GNU GRUB version 2.02 +----------------------------------------------------------------------------+ | | | | | | | | | | | | | | | | | | | | | | | | | +----------------------------------------------------------------------------+ Use the ^ and v keys to select which entry is highlighted. Press enter to boot the selected OS. ESC to return previous menu. The highlighted entry will be executed automatically in 0s. Booting `ONIE: Install OS\u0026#39; ONIE: OS Install Mode ... Platform : x86_64-cisco_8000-r0 Version : 2020.05br.CISCO Build Date: 2020-06-02T00:32+00:00 [ 2.778998] mtdoops: mtd device (mtddev=name/number) must be supplied [ 5.032671] ixgbe 0000:04:00.0: HW Init failed: -17 [ 7.015844] ixgbe 0000:04:00.1: HW Init failed: -17 Info: Mounting kernel filesystems... done. [ 7.220526] cisco_util: loading out-of-tree module taints kernel. [ 7.244491] cisco-fpga-msd msd.1.auto: successfully cleared scratchram bios boot mode @ 0x100 Info: cisco-fpga-wdt: inactive Info: Mounting ONIE-BOOT on /mnt/onie-boot ... Info: Mounting EFI System on /boot/efi ... Info: BIOS mode: UEFI Info: Making NOS install boot mode persistent. Info: Using eth0 MAC address: 08:4f:a9:5c:fb:c9 Info: eth0: Checking link... up. Info: Trying DHCPv4 on interface: eth0 ONIE: Using DHCPv4 addr: eth0: 10.106.62.164 / 255.255.255.0 Starting: klogd... done. Starting: dropbear ssh daemon... done. Starting: telnetd... done. discover: installer mode detected. Running installer. Starting: discover... done. Please press Enter to activate this console. Info: eth0: Checking link... up. Info: Trying DHCPv4 on interface: eth0 ONIE: Using DHCPv4 addr: eth0: 10.106.62.164 / 255.255.255.0 ONIE: Starting ONIE Service Discovery Info: Attempting http://10.106.62.1/onie-installer-x86_64-8201_sys-r0 ... Info: Attempting http://10.106.62.1/onie-installer-x86_64-8201_sys-r0.bin ... Info: Attempting http://10.106.62.1/onie-installer-x86_64-8201_sys ... Info: Attempting http://10.106.62.1/onie-installer-x86_64-8201_sys.bin ... Info: Attempting http://10.106.62.1/onie-installer-8201_sys ... Info: Attempting http://10.106.62.1/onie-installer-8201_sys.bin ... Info: Attempting http://10.106.62.1/onie-installer-x86_64-cisco ... Info: Attempting http://10.106.62.1/onie-installer-x86_64-cisco.bin ... Info: Attempting http://10.106.62.1/onie-installer-x86_64 ... Info: Attempting http://10.106.62.1/onie-installer-x86_64.bin ... Info: Attempting http://10.106.62.1/onie-installer ... Info: Attempting http://10.106.62.1/onie-installer.bin ... Info: Attempting http://10.106.62.6/onie-installer-x86_64-8201_sys-r0 ... Info: Attempting http://10.106.62.6/onie-installer-x86_64-8201_sys-r0.bin ... Info: Attempting http://10.106.62.6/onie-installer-x86_64-8201_sys ... Info: Attempting http://10.106.62.6/onie-installer-x86_64-8201_sys.bin ... Info: Attempting http://10.106.62.6/onie-installer-8201_sys ... Info: Attempting http://10.106.62.6/onie-installer-8201_sys.bin ... Info: Attempting http://10.106.62.6/onie-installer-x86_64-cisco ... Info: Attempting http://10.106.62.6/onie-installer-x86_64-cisco.bin ... Info: Attempting http://10.106.62.6/onie-installer-x86_64 ... Info: Attempting http://10.106.62.6/onie-installer-x86_64.bin ... Info: Attempting http://10.106.62.6/onie-installer ... Info: Attempting http://10.106.62.6/onie-installer.bin ... Info: Attempting http://10.106.62.79/onie-installer-x86_64-8201_sys-r0 ... Info: Attempting http://10.106.62.79/onie-installer-x86_64-8201_sys-r0.bin ... Info: Attempting http://10.106.62.79/onie-installer-x86_64-8201_sys ... Info: Attempting http://10.106.62.79/onie-installer-x86_64-8201_sys.bin ... Info: Attempting http://10.106.62.79/onie-installer-8201_sys ... Info: Attempting http://10.106.62.79/onie-installer-8201_sys.bin ... Info: Attempting http://10.106.62.79/onie-installer-x86_64-cisco ... Info: Attempting http://10.106.62.79/onie-installer-x86_64-cisco.bin ... Info: Attempting http://10.106.62.79/onie-installer-x86_64 ... Info: Attempting http://10.106.62.79/onie-installer-x86_64.bin ... Info: Attempting http://10.106.62.79/onie-installer ... Info: Attempting http://10.106.62.79/onie-installer.bin ... Info: Attempting http://10.106.62.159/onie-installer-x86_64-8201_sys-r0 ... Info: Attempting http://10.106.62.159/onie-installer-x86_64-8201_sys-r0.bin ... Info: Attempting http://10.106.62.159/onie-installer-x86_64-8201_sys ... Info: Attempting http://10.106.62.159/onie-installer-x86_64-8201_sys.bin ... Info: Attempting http://10.106.62.159/onie-installer-8201_sys ... Info: Attempting http://10.106.62.159/onie-installer-8201_sys.bin ... Info: Attempting http://10.106.62.159/onie-installer-x86_64-cisco ... Info: Attempting http://10.106.62.159/onie-installer-x86_64-cisco.bin ... Info: Attempting http://10.106.62.159/onie-installer-x86_64 ... Info: Attempting http://10.106.62.159/onie-installer-x86_64.bin ... Info: Attempting http://10.106.62.159/onie-installer ... Info: Attempting http://10.106.62.159/onie-installer.bin ... Info: Attempting http://10.106.62.135/onie-installer-x86_64-8201_sys-r0 ... Info: Attempting http://10.106.62.135/onie-installer-x86_64-8201_sys-r0.bin ... Info: Attempting http://10.106.62.135/onie-installer-x86_64-8201_sys ... Info: Attempting http://10.106.62.135/onie-installer-x86_64-8201_sys.bin ... Info: Attempting http://10.106.62.135/onie-installer-8201_sys ... Info: Attempting http://10.106.62.135/onie-installer-8201_sys.bin ... Info: Attempting http://10.106.62.135/onie-installer-x86_64-cisco ... Info: Attempting http://10.106.62.135/onie-installer-x86_64-cisco.bin ... Info: Attempting http://10.106.62.135/onie-installer-x86_64 ... Info: Attempting http://10.106.62.135/onie-installer-x86_64.bin ... Info: Attempting http://10.106.62.135/onie-installer ... Info: Attempting http://10.106.62.135/onie-installer.bin ... Info: Attempting http://10.106.62.15/onie-installer-x86_64-8201_sys-r0 ... Info: Attempting http://10.106.62.15/onie-installer-x86_64-8201_sys-r0.bin ... Info: Attempting http://10.106.62.15/onie-installer-x86_64-8201_sys ... Info: Attempting http://10.106.62.15/onie-installer-x86_64-8201_sys.bin ... Info: Attempting http://10.106.62.15/onie-installer-8201_sys ... Info: Attempting http://10.106.62.15/onie-installer-8201_sys.bin ... Info: Attempting http://10.106.62.15/onie-installer-x86_64-cisco ... Info: Attempting http://10.106.62.15/onie-installer-x86_64-cisco.bin ... Info: Attempting http://10.106.62.15/onie-installer-x86_64 ... Info: Attempting http://10.106.62.15/onie-installer-x86_64.bin ... Info: Attempting http://10.106.62.15/onie-installer ... Info: Attempting http://10.106.62.15/onie-installer.bin ... Info: Attempting http://[fe80::250:56ff:febd:7575%eth0]/onie-installer-x86_64-8201_sys-r0 ... Info: Attempting http://[fe80::250:56ff:febd:7575%eth0]/onie-installer-x86_64-8201_sys-r0.bin ... Info: Attempting http://[fe80::250:56ff:febd:7575%eth0]/onie-installer-x86_64-8201_sys ... Info: Attempting http://[fe80::250:56ff:febd:7575%eth0]/onie-installer-x86_64-8201_sys.bin ... Info: Attempting http://[fe80::250:56ff:febd:7575%eth0]/onie-installer-8201_sys ... Info: Attempting http://[fe80::250:56ff:febd:7575%eth0]/onie-installer-8201_sys.bin ... Info: Attempting http://[fe80::250:56ff:febd:7575%eth0]/onie-installer-x86_64-cisco ... Info: Attempting http://[fe80::250:56ff:febd:7575%eth0]/onie-installer-x86_64-cisco.bin ... Info: Attempting http://[fe80::250:56ff:febd:7575%eth0]/onie-installer-x86_64 ... Info: Attempting http://[fe80::250:56ff:febd:7575%eth0]/onie-installer-x86_64.bin ... Info: Attempting http://[fe80::250:56ff:febd:7575%eth0]/onie-installer ... Info: Attempting http://[fe80::250:56ff:febd:7575%eth0]/onie-installer.bin ... Info: Attempting http://[fe80::76a0:2fff:fe2a:ad3e%eth0]/onie-installer-x86_64-8201_sys-r0 ... Info: Attempting http://[fe80::76a0:2fff:fe2a:ad3e%eth0]/onie-installer-x86_64-8201_sys-r0.bin ... Info: Attempting http://[fe80::76a0:2fff:fe2a:ad3e%eth0]/onie-installer-x86_64-8201_sys ... Info: Attempting http://[fe80::76a0:2fff:fe2a:ad3e%eth0]/onie-installer-x86_64-8201_sys.bin ... Info: Attempting http://[fe80::76a0:2fff:fe2a:ad3e%eth0]/onie-installer-8201_sys ... Info: Attempting http://[fe80::76a0:2fff:fe2a:ad3e%eth0]/onie-installer-8201_sys.bin ... Info: Attempting http://[fe80::76a0:2fff:fe2a:ad3e%eth0]/onie-installer-x86_64-cisco ... Info: Attempting http://[fe80::76a0:2fff:fe2a:ad3e%eth0]/onie-installer-x86_64-cisco.bin ... Info: Attempting http://[fe80::76a0:2fff:fe2a:ad3e%eth0]/onie-installer-x86_64 ... Info: Attempting http://[fe80::76a0:2fff:fe2a:ad3e%eth0]/onie-installer-x86_64.bin ... Info: Attempting http://[fe80::76a0:2fff:fe2a:ad3e%eth0]/onie-installer ... Info: Attempting http://[fe80::76a0:2fff:fe2a:ad3e%eth0]/onie-installer.bin ... Info: Attempting http://[fe80::e22f:6dff:febb:5b00%eth0]/onie-installer-x86_64-8201_sys-r0 ... Info: Attempting http://[fe80::e22f:6dff:febb:5b00%eth0]/onie-installer-x86_64-8201_sys-r0.bin ... Info: Attempting http://[fe80::e22f:6dff:febb:5b00%eth0]/onie-installer-x86_64-8201_sys ... Info: Attempting http://[fe80::e22f:6dff:febb:5b00%eth0]/onie-installer-x86_64-8201_sys.bin ... Info: Attempting http://[fe80::e22f:6dff:febb:5b00%eth0]/onie-installer-8201_sys ... Info: Attempting http://[fe80::e22f:6dff:febb:5b00%eth0]/onie-installer-8201_sys.bin ... Info: Attempting http://[fe80::e22f:6dff:febb:5b00%eth0]/onie-installer-x86_64-cisco ... Info: Attempting http://[fe80::e22f:6dff:febb:5b00%eth0]/onie-installer-x86_64-cisco.bin ... Info: Attempting http://[fe80::e22f:6dff:febb:5b00%eth0]/onie-installer-x86_64 ... Info: Attempting http://[fe80::e22f:6dff:febb:5b00%eth0]/onie-installer-x86_64.bin ... Info: Attempting http://[fe80::e22f:6dff:febb:5b00%eth0]/onie-installer ... Info: Attempting http://[fe80::e22f:6dff:febb:5b00%eth0]/onie-installer.bin ... Info: Attempting http://[fe80::250:56ff:febd:588f%eth0]/onie-installer-x86_64-8201_sys-r0 ... Info: Attempting http://[fe80::250:56ff:febd:588f%eth0]/onie-installer-x86_64-8201_sys-r0.bin ... Info: Attempting http://[fe80::250:56ff:febd:588f%eth0]/onie-installer-x86_64-8201_sys ... Info: Attempting http://[fe80::250:56ff:febd:588f%eth0]/onie-installer-x86_64-8201_sys.bin ... Info: Attempting http://[fe80::250:56ff:febd:588f%eth0]/onie-installer-8201_sys ... Info: Attempting http://[fe80::250:56ff:febd:588f%eth0]/onie-installer-8201_sys.bin ... Info: Attempting http://[fe80::250:56ff:febd:588f%eth0]/onie-installer-x86_64-cisco ... Info: Attempting http://[fe80::250:56ff:febd:588f%eth0]/onie-installer-x86_64-cisco.bin ... Info: Attempting http://[fe80::250:56ff:febd:588f%eth0]/onie-installer-x86_64 ... Info: Attempting http://[fe80::250:56ff:febd:588f%eth0]/onie-installer-x86_64.bin ... Info: Attempting http://[fe80::250:56ff:febd:588f%eth0]/onie-installer ... Info: Attempting http://[fe80::250:56ff:febd:588f%eth0]/onie-installer.bin ... Info: Attempting http://[fe80::250:56ff:febd:66f2%eth0]/onie-installer-x86_64-8201_sys-r0 ... Info: Attempting http://[fe80::250:56ff:febd:66f2%eth0]/onie-installer-x86_64-8201_sys-r0.bin ... Info: Attempting http://[fe80::250:56ff:febd:66f2%eth0]/onie-installer-x86_64-8201_sys ... Info: Attempting http://[fe80::250:56ff:febd:66f2%eth0]/onie-installer-x86_64-8201_sys.bin ... Info: Attempting http://[fe80::250:56ff:febd:66f2%eth0]/onie-installer-8201_sys ... Info: Attempting http://[fe80::250:56ff:febd:66f2%eth0]/onie-installer-8201_sys.bin ... Info: Attempting http://[fe80::250:56ff:febd:66f2%eth0]/onie-installer-x86_64-cisco ... Info: Attempting http://[fe80::250:56ff:febd:66f2%eth0]/onie-installer-x86_64-cisco.bin ... Info: Attempting http://[fe80::250:56ff:febd:66f2%eth0]/onie-installer-x86_64 ... Info: Attempting http://[fe80::250:56ff:febd:66f2%eth0]/onie-installer-x86_64.bin ... Info: Attempting http://[fe80::250:56ff:febd:66f2%eth0]/onie-installer ... Info: Attempting http://[fe80::250:56ff:febd:66f2%eth0]/onie-installer.bin ... Info: Attempting tftp://onie-server/08-4f-a9-5c-fb-c9/onie-installer-x86_64-8201_sys-r0 ... Info: Attempting tftp://onie-server/0A6A3EA4/onie-installer-x86_64-8201_sys-r0 ... Info: Attempting tftp://onie-server/0A6A3EA/onie-installer-x86_64-8201_sys-r0 ... To check the install status inspect /var/log/onie.log. Try this: tail -f /var/log/onie.log NOTICE: ONIE started in NOS install mode. Install mode persists NOTICE: until a NOS installer runs successfully. ** Installer Mode Enabled ** ONIE:/ # ONIE:/ # onie-stop discover: installer mode detected. Stopping: discover... done. ONIE:/ # ONIE:/ # ONIE:/ # ONIE:/ # ifconfig eth0 eth0 Link encap:Ethernet HWaddr 08:4F:A9:5C:FB:C9 inet addr:10.106.62.164 Bcast:10.106.62.255 Mask:255.255.255.0 inet6 addr: fe80::a4f:a9ff:fe5c:fbc9/64 Scope:Link UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1 RX packets:1246 errors:0 dropped:0 overruns:0 frame:0 TX packets:975 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:1000 RX bytes:128698 (125.6 KiB) TX bytes:129438 (126.4 KiB) Memory:96f00000-96f7ffff ONIE:/ # ifconfig eth0 10.75.37.206 netmask 255.255.255.0 up ONIE:/ # route add default gw 10.75.37.1 ONIE:/ # ping 10.76.76.160 PING 10.76.76.160 (10.76.76.160): 56 data bytes 64 bytes from 10.76.76.160: seq=0 ttl=125 time=0.397 ms 64 bytes from 10.76.76.160: seq=1 ttl=125 time=0.363 ms ^C --- 10.76.76.160 ping statistics --- 2 packets transmitted, 2 packets received, 0% packet loss round-trip min/avg/max = 0.363/0.380/0.397 ms ONIE:/ # ONIE:/ # ONIE:/ # onie-nos-install tftp://10.76.76.160/sonic-cisco-8000.bin discover: installer mode detected. Stopping: discover... done. Info: Attempting tftp://10.76.76.160/sonic-cisco-8000.bin ... sonic-cisco-8000.bin 0% | | 192k 3:25:38 ETA sonic-cisco-8000.bin 0% | | 1300k 1:00:42 ETA sonic-cisco-8000.bin 0% | | 2216k 0:53:24 ETA sonic-cisco-8000.bin 0% | | 3775k 0:41:46 ETA sonic-cisco-8000.bin 0% | | 5297k 0:37:11 ETA sonic-cisco-8000.bin 0% | | 6771k 0:34:53 ETA sonic-cisco-8000.bin 0% | | 8425k 0:32:41 ETA sonic-cisco-8000.bin 0% | | 10101k 0:31:08 ETA \u0026lt;Snip\u0026gt; sonic-cisco-8000.bin 100% |*******************************| 2313M 0:00:00 ETA sonic-cisco-8000.bin 100% |*******************************| 2313M 0:00:00 ETA ONIE: Executing installer: tftp://10.76.76.160/sonic-cisco-8000.bin Verifying image checksum ... OK. Preparing image archive ... OK. Installing SONiC in ONIE ONIE Installer: platform: x86_64-cisco-8000-r0 onie_platform: x86_64-8201_sys-r0 Partition #1 is in use. Partition #2 is in use. Partition #3 is available Creating new SONiC-OS partition /dev/sda3 ... Warning: The kernel is still using the old partition table. The new table will be used at the next reboot. The operation has completed successfully. mke2fs 1.42.13 (17-May-2015) Discarding device blocks: done Creating filesystem with 8388608 4k blocks and 2097152 inodes Filesystem UUID: d34cfc59-3e3d-4aaa-bc25-ea83080eb551 Superblock backups stored on blocks: 32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, 4096000, 7962624 Allocating group tables: done Writing inode tables: done Creating journal (32768 blocks): done Writing superblocks and filesystem accounting information: done Installing SONiC to /tmp/tmp.p055fg/image-venkatg_cisco_201911.0-dirty-20210203.185201 Connection closing...Socket close. Connection closed by foreign host. Disconnected from remote host(10.76.75.194:2003) at 20:57:01. Type `help\u0026#39; to learn how to use Xshell prompt. [C:\\~]$ reconnect Connecting to 10.76.75.194:2003... Connection established. To escape to local shell, press \u0026#39;Ctrl+Alt+]\u0026#39;. C Press RETURN to get started! Loading SONiC-OS OS kernel ... Loading SONiC-OS OS initial ramdisk ... [ 2.117784] ixgbe 0000:04:00.0: HW Init failed: -17 [ 2.198866] ixgbe 0000:04:00.1: HW Init failed: -17 [ 3.726188] pstore: crypto_comp_decompress failed, ret = -22! [ 3.732614] pstore: decompression failed: -22 [ 3.738304] pstore: crypto_comp_decompress failed, ret = -22! [ 3.744722] pstore: decompression failed: -22 [ 4.463535] rc.local[509]: INFO: Using eth0 MAC address: 08:4f:a9:5c:fb:c9 [ 4.500422] kdump-tools[527]: Starting kdump-tools: no crashkernel= parameter in the kernel cmdline ... failed! [ 4.522819] rc.local[509]: First boot detected. Performing first boot tasks... [ 4.644115] rc.local[509]: Selecting previously unselected package cisco-pacific. [ 5.555798] rc.local[509]: (Reading database ... 30533 files and directories currently installed.) [ 5.574432] rc.local[509]: Preparing to unpack .../cisco-pacific_1.37.0-SDK-1.5.2-17-gb3d0689-dirty-sonic-1.37.0-sai152-jan30-879-1_. [ 5.598488] rc.local[509]: Unpacking cisco-pacific (1.35.2-SDK-1.5.2-17-gb3d0689-dirty-sonic-1.37.0-sai152-jan30-879-1) ... [ 13.593899] rc.local[509]: Selecting previously unselected package cisco-tam-library. [ 13.610409] rc.local[509]: Preparing to unpack .../cisco-tam-library_0.2-8-g385bae0_amd64.deb ... [ 13.630434] rc.local[509]: Unpacking cisco-tam-library (0.2-8-g385bae0) ... [ 13.646672] rc.local[509]: Selecting previously unselected package cisco-wb-8000. [ 13.666493] rc.local[509]: Preparing to unpack .../cisco-wb-8000_0.2.1-18-gc59c65b_amd64.deb ... [ 13.686476] rc.local[509]: Unpacking cisco-wb-8000 (0.2.1-18-gc59c65b) ... [ 13.702389] rc.local[509]: Selecting previously unselected package cisco-wb-8201-sys. [ 13.722383] rc.local[509]: Preparing to unpack .../cisco-wb-8201-sys_0.2.1-18-gc59c65b_amd64.deb ... [ 13.743001] rc.local[509]: Unpacking cisco-wb-8201-sys (0.2.1-18-gc59c65b) ... [ OK ] Found device /dev/ttyS0. [ 23.112309] rc.local[509]: Selecting previously unselected package cisco-wb-bsp-pylib. [ 23.131129] rc.local[509]: Preparing to unpack .../cisco-wb-bsp-pylib_0.2.1-18-gc59c65b_amd64.deb ... [ 23.150999] rc.local[509]: Unpacking cisco-wb-bsp-pylib (0.2.1-18-gc59c65b) ... [ 23.171159] rc.local[509]: Selecting previously unselected package cisco-wb-bsp. [ 23.190876] rc.local[509]: Preparing to unpack .../cisco-wb-bsp_0.2.1-18-gc59c65b_amd64.deb ... [ 23.210894] rc.local[509]: Unpacking cisco-wb-bsp (0.2.1-18-gc59c65b) ... [ 23.226972] rc.local[509]: Selecting previously unselected package cisco-wb-fpd. [ 23.247081] rc.local[509]: Preparing to unpack .../cisco-wb-fpd_0.1-60-gbd6e555_amd64.deb ... [ 23.266954] rc.local[509]: Unpacking cisco-wb-fpd (0.1-60-gbd6e555) ... [ 24.239258] rc.local[509]: Selecting previously unselected package libjansson4:amd64. [ 24.258641] rc.local[509]: Preparing to unpack .../libjansson4_2.9-1_amd64.deb ... [ 24.278612] rc.local[509]: Unpacking libjansson4:amd64 (2.9-1) ... [ 24.294835] rc.local[509]: Selecting previously unselected package mtd-utils. [ 24.314617] rc.local[509]: Preparing to unpack .../mtd-utils_2.0.0-1_amd64.deb ... [ 24.334591] rc.local[509]: Unpacking mtd-utils (1:2.0.0-1) ... [ 24.350832] rc.local[509]: Selecting previously unselected package sonic-platform-cisco-8000. [ 24.371131] rc.local[509]: Preparing to unpack .../sonic-platform-cisco-8000_0.0.1_amd64.deb ... [ 24.390954] rc.local[509]: Unpacking sonic-platform-cisco-8000 (0.0.1) ... [ 24.955537] rc.local[509]: Setting up cisco-pacific (1.35.2-SDK-1.5.2-17-gb3d0689-dirty-sonic-1.37.0-sai152-jan30-879-1) ... [ 24.978503] rc.local[509]: Setting up cisco-tam-library (0.2-8-g385bae0) ... [ 24.998959] rc.local[509]: Setting up cisco-wb-8000 (0.2.1-18-gc59c65b) ... [ 25.197753] rc.local[509]: Created symlink /etc/systemd/system/multi-user.target.wants/platform-publish-inventory.service → /lib/sys. Starting Cisco 8000 Platform Topology Service... [ 30.355171] m25p80 spi-PRP0001:1a: unrecognized JEDEC id bytes: 00, 00, 00 [ 30.503171] m25p80 spi-PRP0001:3b: unrecognized JEDEC id bytes: ff, ff, ff [ 34.708063] pca953x 21-0074: no gpio-line-names property; ret -22 [ 34.828037] pca953x 22-0074: no gpio-line-names property; ret -22 [ 34.988120] pca953x 10-0077: no gpio-line-names property; ret -22 [ 46.435729] pca953x 14-0075: no gpio-line-names property; ret -22 [ 46.631812] pca953x 14-0076: no gpio-line-names property; ret -22 [ OK ] Started Cisco 8000 Platform Topology Service. Starting Publish Platform Inventory Service... [ OK ] Started Publish Platform Inventory Service. [ 88.009231] rc.local[509]: Setting up cisco-wb-8201-sys (0.2.1-18-gc59c65b) ... [ 88.030611] rc.local[509]: Setting up cisco-wb-bsp-pylib (0.2.1-18-gc59c65b) ... [ 88.355581] rc.local[509]: Setting up cisco-wb-bsp (0.2.1-18-gc59c65b) ... [ 88.371043] rc.local[509]: Setting up cisco-wb-fpd (0.1-60-gbd6e555) ... [ 88.386967] rc.local[509]: Setting up libjansson4:amd64 (2.9-1) ... [ 88.402988] rc.local[509]: Setting up mtd-utils (1:2.0.0-1) ... [ 88.419210] rc.local[509]: Setting up sonic-platform-cisco-8000 (0.0.1) ... [ 88.518894] rc.local[509]: Created symlink /etc/systemd/system/multi-user.target.wants/first-boot.service → /lib/systemd/system/firs. [ 88.733221] rc.local[509]: Created symlink /etc/systemd/system/multi-user.target.wants/platform-monitor.service → /lib/systemd/syste. [ 88.963032] rc.local[509]: Created symlink /etc/systemd/system/multi-user.target.wants/platform-topology.service → /lib/systemd/syst. [ OK ] Started Cisco 8000 Platform First Boot Service. [ OK ] Started Cisco 8000 Platform Monitoring Service. [ 89.252487] rc.local[509]: Processing triggers for libc-bin (2.24-11+deb9u4) ... [ OK ] Started /etc/rc.local Compatibility. [ OK ] Started Getty on tty1. [ OK ] Started Serial Getty on ttyS0. [ OK ] Reached target Login Prompts. Starting Database container... [ OK ] Started Reboot cause determination service. [ OK ] Started Database container. Starting Monitor warm recovery and disable warmboot when done... Starting Config initialization and migration service... Debian GNU/Linux 9 sonic ttyS0 sonic login: cisco Password: Linux sonic 4.19.0-9-cisco-amd64 #1 SMP Debian 4.19.118-2+deb10u1 (2020-06-07) x86_64 You are on ____ ___ _ _ _ ____ / ___| / _ \\| \\ | (_)/ ___| \\___ \\| | | | \\| | | | ___) | |_| | |\\ | | |___ |____/ \\___/|_| \\_|_|\\____| -- Software for Open Networking in the Cloud -- Unauthorized access and/or use are prohibited. All access and/or use are subject to monitoring. Help: http://azure.github.io/SONiC/ cisco@sonic:~$ cisco@sonic:~$ sudo config interface ip add eth0 10.106.60.160/24 10.106.60.1 ","date":"31 August 2021","externalUrl":null,"permalink":"/blog/cisco-8000-xr-to-sonic/","section":"Blog","summary":"Step 1: Reload Cisco 8000 and Config PXE # Reload chassis","title":"CISCO 8000 XR to Sonic","type":"blog"},{"content":"BGP Flow Specification 功能是一种用于防止 DoS（Denial of Service）/DDoS（Distributed Denial of Service）攻击的方法，可以提高网络安全性和可用性。其实现方式为 BGP FS controller 通过 BGP 下发特定的规则给 BGP FS client, BGP FS client 收到后按照该规则对特定流进行 redirect/remark/drop/rate limit。\nBGP FS controller 可为 router 或者 server:\nRouter/Virtual Router(ASR9000, CRS, NCS 6000, XR 12000, … XRv9000) Server(ExaBGP, YABGP, Open Day Light, Arbor SP, …) BGP FS controller # Router # 以 IOS XR 路由器为例， 配置示例如下:\n//create rules class-map type traffic match-all match-UDP53 match destination-port 53 match protocol udp end-class-map ! class-map type traffic match-all match-src-ipv4-addr match destination-address ipv4 25.1.104.0 255.255.255.0 end-class-map policy-map type pbr FS class type traffic match-src-ipv4-addr police rate 100000 bps ! ! class type traffic match-UDP53 redirect next 192.42.52.125 ! ! class type traffic class-default ! end-policy-map flowspec address-family ipv4 service-policy type pbr FS RP/0/RP0/CPU0:MXC.TAC.L.08-8201-01#show run router bgp Mon Aug 30 04:44:52.662 UTC router bgp 100 bgp router-id 10.1.4.4 address-family ipv4 flowspec ! neighbor-group ibgp-flowspec remote-as 100 address-family ipv4 flowspec ! ! neighbor 10.1.34.3 use neighbor-group ibgp-flowspec ! Server # 以 ExaBGP 为例：\nGithub上介绍了安装方式，也提供了 flowspec 相关的配置文件以供参考。\nExaBGP Install [root@localhost ~]# pip install exabgp Collecting exabgp Downloading exabgp-4.2.13.tar.gz (400 kB) |████████████████████████████████| 400 kB 14.9 MB/s Requirement already satisfied: setuptools in ./.pyenv/versions/3.7.8/lib/python3.7/site-packages (from exabgp) (47.1.0) Using legacy \u0026#39;setup.py install\u0026#39; for exabgp, since package \u0026#39;wheel\u0026#39; is not installed. Installing collected packages: exabgp Running setup.py install for exabgp ... done Successfully installed exabgp-4.2.13 WARNING: Running pip as the \u0026#39;root\u0026#39; user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv WARNING: You are using pip version 21.1.3; however, version 21.2.4 is available. You should consider upgrading via the \u0026#39;/root/.pyenv/versions/3.7.8/bin/python3.7 -m pip install --upgrade pip\u0026#39; command. [root@localhost ~]# [root@localhost ~]# [root@localhost ~]# exabgp --version ExaBGP : 4.2.13 Python : 3.7.8 (default, May 9 2021, 11:28:59) [GCC 4.8.5 20150623 (Red Hat 4.8.5-44)] Uname : Linux localhost.localdomain 3.10.0-862.el7.x86_64 #1 SMP Fri Apr 20 16:44:24 UTC 2018 x86_64 Root : /root/.pyenv/versions/3.7.8 [root@localhost ~]# ExaBGP configuration: [root@localhost exabgp]# pwd /root/exabgp [root@localhost exabgp]# ls -al total 12 drwxr-xr-x. 2 root root 40 Aug 30 00:51 . dr-xr-x---. 21 root root 4096 Aug 30 00:51 .. -rw-r--r--. 1 root root 640 Aug 30 00:51 conf.ini -rw-r--r--. 1 root root 430 Aug 30 00:43 example.py [root@localhost exabgp]# cat conf.ini process announce-routes { run /root/.pyenv/versions/3.7.8/bin/python /root/exabgp/example.py; encoder json; } neighbor 10.31.122.26 { # Remote neighbor to peer with router-id 10.70.79.197; # Our local router-id local-address 10.70.79.197; # Our local update-source local-as 100; # Our local AS peer-as 100; # Peer\u0026#39;s AS flow { #define flowspec rules route { match { destination 7.7.7.7/32; } then { redirect 10.1.13.1; } } } api { # Option config, define how to use python announce bgp routes processes [announce-routes]; } } [root@localhost exabgp]# Define python Script to add/remove Routes (option) Exabgp 除了可以生成 bgp flowspec 路由，也可以用来生成普通的 BGP 路由，这篇文章介绍了如何使用 python script 生成 BGP 路由。\n[root@localhost exabgp]# cat example.py #!/usr/bin/env python3 from __future__ import print_function from sys import stdout from time import sleep messages = [ \u0026#39;announce route 100.10.0.0/24 next-hop self\u0026#39;, \u0026#39;announce route 200.20.0.0/24 next-hop self\u0026#39;, ] sleep(5) #Iterate through messages for message in messages: stdout.write(message + \u0026#39;\\n\u0026#39;) stdout.flush() sleep(1) #Loop endlessly to allow ExaBGP to continue running while True: sleep(1) [root@localhost exabgp]# Start ExaBGP [root@localhost exabgp]# exabgp ./conf.ini 00:51:45 | 61810 | welcome | Thank you for using ExaBGP 00:51:45 | 61810 | version | 4.2.13 00:51:45 | 61810 | interpreter | 3.7.8 (default, May 9 2021, 11:28:59) [GCC 4.8.5 20150623 (Red Hat 4.8.5-44)] 00:51:45 | 61810 | os | Linux localhost.localdomain 3.10.0-862.el7.x86_64 #1 SMP Fri Apr 20 16:44:24 UTC 2018 x86_64 00:51:45 | 61810 | installation | /root/.pyenv/versions/3.7.8 00:51:45 | 61810 | advice | environment file missing 00:51:45 | 61810 | advice | generate it using \u0026#34;exabgp --fi \u0026gt; /root/.pyenv/versions/3.7.8/etc/exabgp/exabgp.env\u0026#34; 00:51:45 | 61810 | cli | could not find the named pipes (exabgp.in and exabgp.out) required for the cli 00:51:45 | 61810 | cli | we scanned the following folders (the number is your PID): 00:51:45 | 61810 | cli control | - /run/exabgp/ 00:51:45 | 61810 | cli control | - /run/0/ 00:51:45 | 61810 | cli control | - /run/ 00:51:45 | 61810 | cli control | - /var/run/exabgp/ 00:51:45 | 61810 | cli control | - /var/run/0/ 00:51:45 | 61810 | cli control | - /var/run/ 00:51:45 | 61810 | cli control | - /root/.pyenv/versions/3.7.8/run/exabgp/ 00:51:45 | 61810 | cli control | - /root/.pyenv/versions/3.7.8/run/0/ 00:51:45 | 61810 | cli control | - /root/.pyenv/versions/3.7.8/run/ 00:51:45 | 61810 | cli control | - /root/.pyenv/versions/3.7.8/var/run/exabgp/ 00:51:45 | 61810 | cli control | - /root/.pyenv/versions/3.7.8/var/run/0/ 00:51:45 | 61810 | cli control | - /root/.pyenv/versions/3.7.8/var/run/ 00:51:45 | 61810 | cli control | please make them in one of the folder with the following commands: 00:51:45 | 61810 | cli control | \u0026gt; mkfifo /root/exabgp/run/exabgp.{in,out} 00:51:45 | 61810 | cli control | \u0026gt; chmod 600 /root/exabgp/run/exabgp.{in,out} 00:51:45 | 61810 | configuration | performing reload of exabgp 4.2.13 00:51:45 | 61810 | reactor | loaded new configuration successfully 00:51:47 | 61810 | reactor | connected to peer-1 with outgoing-3 10.70.79.197-10.31.122.26 00:51:50 | 61810 | api | route added to neighbor 10.31.122.26 local-ip 10.70.79.197 local-as 100 peer-as 100 router-id 10.70.79.197 family-allowed in-open : 100.10.0.0/24 next-hop self 00:51:51 | 61810 | api | route added to neighbor 10.31.122.26 local-ip 10.70.79.197 local-as 100 peer-as 100 router-id 10.70.79.197 family-allowed in-open : 200.20.0.0/24 next-hop self 00:53:47 | 61810 | reactor | connected to peer-1 with outgoing-4 10.70.79.197-10.31.122.26 路由器上输出如下:\nRP/0/RP0/CPU0:MXC.TAC.L.08-8201-01#show bgp ipv4 unicast summary Neighbor Spk AS MsgRcvd MsgSent TblVer InQ OutQ Up/Down St/PfxRcd 10.1.2.2 0 100 181 180 3 0 0 02:50:22 0 10.70.79.197 0 100 67 62 3 0 0 00:36:55 2 RP/0/RP0/CPU0:MXC.TAC.L.08-8201-01#show bgp ipv4 unicast Origin codes: i - IGP, e - EGP, ? - incomplete Network Next Hop Metric LocPrf Weight Path * i100.10.0.0/24 10.70.79.197 100 0 i * i200.20.0.0/24 10.70.79.197 100 0 i Processed 2 prefixes, 2 paths RP/0/RP0/CPU0:MXC.TAC.L.08-8201-01#show bgp ipv4 flowspec Network Next Hop Metric LocPrf Weight Path *\u0026gt;iDest:7.7.7.7/32/48 10.1.13.1 100 0 i *\u0026gt; Dest:8.8.8.8/32/48 10.1.13.1 0 i Processed 2 prefixes, 2 paths RP/0/RP0/CPU0:MXC.TAC.L.08-8201-01#show bgp ipv4 flowspec Dest:7.7.7.7/32/48 $ Mon Aug 30 05:00:44.529 UTC BGP routing table entry for Dest:7.7.7.7/32/48 NLRI in Hex: 012007070707/48 Versions: Process bRIB/RIB SendTblVer Speaker 16 16 Flags: 0x00001001+0x00000000; Last Modified: Aug 30 04:23:30.743 for 00:37:13 Paths: (1 available, best #1) Advertised to peers (in unique update groups): 10.1.34.3 Path #1: Received by speaker 0 Flags: 0x2000000001060205, import: 0x20 Advertised to peers (in unique update groups): 10.1.34.3 Local, (Received from a RR-client) 10.1.13.1 from 10.70.79.197 (10.70.79.197), if-handle 0x00000000 Origin IGP, localpref 100, valid, internal, best, group-best Received Path ID 0, Local Path ID 1, version 16 Extended community: FLOWSPEC Redirect-IP:0 RP/0/RP0/CPU0:MXC.TAC.L.08-8201-01#show bgp ipv4 flowspec summary \u0026lt;Snip\u0026gt; Neighbor Spk AS MsgRcvd MsgSent TblVer InQ OutQ Up/Down St/PfxRcd 10.1.34.3 0 100 1388 1407 16 0 0 02:59:21 0 10.70.79.197 0 100 68 63 16 0 0 00:37:29 1 BGP FS Client. # 配置示例:\n//Install all rules on all interface RP/0/RSP0/CPU0:MXC.TAC.L.08-ASR9901-01#show run flowspec Mon Aug 30 05:09:28.007 UTC flowspec local-install interface-all address-family ipv4 local-install interface-all ! ! RP/0/RSP0/CPU0:MXC.TAC.L.08-ASR9901-01#show run router bgp Mon Aug 30 05:09:32.514 UTC router bgp 100 bgp router-id 10.1.3.3 address-family ipv4 flowspec ! neighbor-group ibgp-flowspec remote-as 100 address-family ipv4 flowspec ! ! neighbor 10.1.34.4 use neighbor-group ibgp-flowspec ! ! RP/0/RSP0/CPU0:MXC.TAC.L.08-ASR9901-01# Some command: # RP/0/RSP0/CPU0:MXC.TAC.L.08-ASR9901-01#show policy-map transient targets type pbr Mon Aug 30 05:50:22.536 UTC 1) Policymap: __bgpfs_default_IPv4 Type: pbr Targets (applied as main policy): TenGigE0/0/0/14.2500 input TenGigE0/0/0/14 input HundredGigE0/0/0/20 input TenGigE0/0/0/14.101 input TenGigE0/0/0/8 input Total targets: 5 RP/0/RSP0/CPU0:MXC.TAC.L.08-ASR9901-01# RP/0/RSP0/CPU0:MXC.TAC.L.08-ASR9901-01#show policy-map transient type pbr pmap-name % Incomplete command. RP/0/RSP0/CPU0:MXC.TAC.L.08-ASR9901-01#show policy-map transient type pbr pmap-name __bgpfs_default_IPv4 Mon Aug 30 05:50:53.493 UTC policy-map type pbr __bgpfs_default_IPv4 handle:0x36000002 table description: L3 IPv4 and IPv6 class handle:0x76000004 sequence 512 match destination-address ipv4 7.7.7.7 255.255.255.255 redirect ipv4 nexthop 10.1.13.1 ! class handle:0x76000003 sequence 1024 match destination-address ipv4 8.8.8.8 255.255.255.255 redirect ipv4 nexthop 10.1.13.1 ! class handle:0x76000005 sequence 2048 match destination-address ipv4 25.1.102.1 255.255.255.255 match protocol udp match packet length 500-1550 police rate 1000000000 bps conform-action transmit exceed-action drop ! ! class handle:0xf6000002 sequence 4294967295 (class-default) ! end-policy-map ! RP/0/RSP0/CPU0:MXC.TAC.L.08-ASR9901-01#show bgp ipv4 flowspec Mon Aug 30 05:53:20.122 UTC BGP router identifier 10.1.3.3, local AS number 100 BGP generic scan interval 60 secs Non-stop routing is enabled BGP table state: Active Table ID: 0x0 RD version: 9 BGP main routing table version 9 BGP NSR Initial initsync version 1 (Reached) BGP NSR/ISSU Sync-Group versions 0/0 BGP scan interval 60 secs Status codes: s suppressed, d damped, h history, * valid, \u0026gt; best i - internal, r RIB-failure, S stale, N Nexthop-discard Origin codes: i - IGP, e - EGP, ? - incomplete Network Next Hop Metric LocPrf Weight Path *\u0026gt;iDest:7.7.7.7/32/48 10.1.13.1 100 0 i *\u0026gt;iDest:8.8.8.8/32/48 10.1.13.1 100 0 i *\u0026gt;iDest:25.1.102.1/32,Proto:=17,Length:\u0026gt;=500\u0026amp;\u0026lt;=1550/128 0.0.0.0 100 0 i Processed 3 prefixes, 3 paths RP/0/RSP0/CPU0:MXC.TAC.L.08-ASR9901-01#show bgp ipv4 flowspec Dest:25.1.102.1/32,Proto:=17,Length:\u0026gt;=500\u0026amp;\u0026lt;=1550/128 detail Mon Aug 30 05:53:26.663 UTC BGP routing table entry for Dest:25.1.102.1/32,Proto:=17,Length:\u0026gt;=500\u0026amp;\u0026lt;=1550/128 NLRI in Hex: 0120190166010381110a1301f4d5060e/128 Versions: Process bRIB/RIB SendTblVer Speaker 9 9 Flags: 0x00001001+0x00000000; Last Modified: Aug 30 05:14:11.832 for 00:39:15 Paths: (1 available, best #1) Not advertised to any peer Path #1: Received by speaker 0 Flags: 0x4000000001060005, import: 0x20 Not advertised to any peer Local 0.0.0.0 from 10.1.34.4 (10.1.4.4), if-handle 0x00000000 Origin IGP, localpref 100, valid, internal, best, group-best Received Path ID 0, Local Path ID 1, version 9 Extended community: FLOWSPEC Traffic-rate:100,125000000 RP/0/RSP0/CPU0:MXC.TAC.L.08-ASR9901-01# RP/0/RSP0/CPU0:MXC.TAC.L.08-ASR9901-01#show flowspec afi-all detail Mon Aug 30 05:53:43.848 UTC AFI: IPv4 Flow :Dest:7.7.7.7/32 Actions :Nexthop: 10.1.13.1 (bgp.1) Statistics (packets/bytes) Matched : 0/0 Dropped : 0/0 Flow :Dest:8.8.8.8/32 Actions :Nexthop: 10.1.13.1 (bgp.1) Statistics (packets/bytes) Matched : 2000/236000 Dropped : 0/0 Flow :Dest:25.1.102.1/32,Proto:=17,Length:\u0026gt;=500\u0026amp;\u0026lt;=1550 Actions :Traffic-rate: 1000000000 bps (bgp.1) Statistics (packets/bytes) Matched : 0/0 Dropped : 0/0 RP/0/RSP0/CPU0:MXC.TAC.L.08-ASR9901-01# #show flowspec vrf all ipv4 detail #show flowspec vrf all afi-all summary internal #show flowspec vrf all afi-all internal #show bgp ipv4 flowspec #show bgp ipv4 flowspec neighbors x.x.x.x received routes - debug flowspec all - show flowspec trace manager event error - show flowspec trace client event error - show flowspec client internal - show logging | inc FLOW - show flowspec vrf all afi-all summary internal - show flowspec vrf all afi-all internal - show tech flowspec 参考:\nBRKSPG-3012\n","date":"30 August 2021","externalUrl":null,"permalink":"/blog/bgp-flowspec-in-iox/","section":"Blog","summary":"BGP Flow Specification 功能是一种用于防止 DoS（Denial of Service）/DDoS（Distributed Denial of Service）攻击的方法，可以提高网络安全性和可用性。其实现方式为 BGP FS controller 通过 BGP 下发特定的规则给 BGP FS client, BGP FS client 收到后按照该规则对特定流进行 redirect/remark/drop/rate limit。","title":"BGP Flowspec in IOX Platform","type":"blog"},{"content":" IKE（网络密钥交换协议） # IKE 属于一种混合型协议，由 Internet 安全关联和密钥管理协议（ISAKMP）和两种密钥交换协议 OAKLEY 与 SKEME 组成。IKE 创建在由 ISAKMP 定义的框架上，沿用了 OAKLEY 的密钥交换模式以及 SKEME 的共享和密钥更新技术，还定义了它自己的两种密钥交换方式：主模式和野蛮模式。\nIKE 协商两种 SA：\nIKE(ISAKMP) SA (Phase 1） IPSEC SA（Phase 2） IKE 与 IPSec 的关系如下图所示，对等体之间建立一个 IKE SA 完成身份验证和密钥信息交换后，在 IKE SA 的保护下，根据配置的 AH/ESP 安全协议等参数协商出一对 IPSec SA。此后，对等体间的数据将在 IPSec 隧道中加密传输。\nIKE SA 是一个双向的逻辑连接，两个对等体间只建立一个 IKE SA。\nIKE 与 IPSec 的关系图\nIKEv1 协商阶段 1 # IKEv1 协商阶段 1 的目的是建立 IKE SA。IKE SA 建立后对等体间的所有 ISAKMP 消息都将通过加密和验证，这条安全通道可以保证 IKEv1 第二阶段的协商能够安全进行。\nIKEv1 协商阶段 1 支持两种协商模式：主模式（Main Mode）和野蛮模式（Aggressive Mode）。\n主模式包含三次双向交换，用到了六条 ISAKMP 信息。\n消息 ① 和 ② 用于提议交换发起方发送一个或多个 IKE 安全提议，响应方查找最先匹配的 IKE 安全提议，并将这个 IKE 安全提议回应给发起方。匹配的原则为协商双方具有相同的加密算法、认证算法、认证方法和 Diffie-Hellman 组标识。 消息 ③ 和 ④ 用于密钥信息交换双方交换 Diffie-Hellman 公共值和 nonce 值，用于 IKE SA 的认证和加密密钥在这个阶段产生。 消息 ⑤ 和 ⑥ 用于身份和认证信息交换（双方使用生成的密钥发送信息），双方进行身份认证和对整个主模式交换内容的认证。 IKEv1 协商阶段 2 # IKEv1 协商阶段 2 的目的就是建立用来安全传输数据的 IPSec SA，并为数据传输衍生出密钥。这一阶段采用快速模式（Quick Mode）。该模式使用 IKEv1 协商阶段 1 中生成的密钥对 ISAKMP 消息的完整性和身份进行验证，并对 ISAKMP 消息进行加密，故保证了交换的安全性\nAH/ESP 安全协议 # IPSec 使用认证头 AH（Authentication Header）和封装安全载荷 ESP（Encapsulating Security Payload）两种 IP 传输层协议来提供认证或加密等安全服务。\nAH 协议\nAH 仅支持认证功能，不支持加密功能。AH 在每一个数据包的标准 IP 报头后面添加一个 AH 报文头，AH 对数据包和认证密钥进行 Hash 计算，接收方收到带有计算结果的数据包后，执行同样的 Hash 计算并与原计算结果比较，传输过程中对数据的任何更改将使计算结果无效，这样就提供了数据来源认证和数据完整性校验。AH 协议的完整性验证范围为整个 IP 报文。 ESP 协议\nESP 支持认证和加密功能。ESP 在每一个数据包的标准 IP 报头后面添加一个 ESP 报文头，并在数据包后面追加一个 ESP 尾（ESP Trailer 和 ESP Auth data）。与 AH 不同的是，ESP 将数据中的有效载荷进行加密后再封装到数据包中，以保证数据的机密性，但 ESP 没有对 IP 头的内容进行保护，除非 IP 头被封装在 ESP 内部（采用隧道模式）。 封装模式 # 传输模式 # 隧道模式 # 传输模式和隧道模式的区别在于：\n从安全性来讲，隧道模式优于传输模式。它可以完全地对原始 IP 数据包进行验证和加密。隧道模式下可以隐藏内部 IP 地址，协议类型和端口。 从性能来讲，隧道模式因为有一个额外的 IP 头，所以它将比传输模式占用更多带宽。 从场景来讲，传输模式主要应用于两台主机或一台主机和一台 VPN 网关之间通信；隧道模式主要应用于两台 VPN 网关之间或一台主机与一台 VPN 网关之间的通信。 配置 # Step1：ACL 设定感兴趣流 # R2#show run | se access access-list 100 permit ip 172.168.0.0 0.0.255.255 192.168.0.0 0.0.255.255 R3#show run | se access access-list 100 permit ip 192.168.0.0 0.0.255.255 172.168.0.0 0.0.255.255 Step2: IKE Phase 1 # R3(config)#crypto isakmp policy 10 R3(config-isakmp)# encr aes 256 R3(config-isakmp)# hash sha512 R3(config-isakmp)# authentication pre-share R3(config-isakmp)# group 24 Step3: IKE Phase 2 # R3(config-isakmp)#crypto ipsec transform-set CCIE esp-aes 256 esp-sha512-hmac R3(cfg-crypto-trans)# mode tunnel Step 4: Pre-share Key # R3(config)#crypto isakmp key ccie address 12.1.1.2 Step 5: Crypto Map # R3(config)#crypto map CCIE 10 ipsec-isakmp R3(config-crypto-map)# set peer 12.1.1.2 R3(config-crypto-map)# set transform-set CCIE R3(config-crypto-map)# match address 100 R3(config)#int e0/0 R3(config-if)#crypto map CCIE R3(config-if)# 测试 # R2#show run | se ip route ip route 192.168.0.0 255.255.0.0 Ethernet0/1 12.1.1.1 R3#show run | se ip route ip route 172.168.0.0 255.255.0.0 Ethernet0/0 13.1.1.1 R2#ping 192.168.35.3 source 172.168.24.2 Type escape sequence to abort. Sending 5, 100-byte ICMP Echos to 192.168.35.3, timeout is 2 seconds: Packet sent with a source address of 172.168.24.2 !!!!! Success rate is 100 percent (5/5), round-trip min/avg/max = 5/7/18 ms R2# R2#show crypto isakmp sa IPv4 Crypto ISAKMP SA dst src state conn-id status 13.1.1.3 12.1.1.2 QM_IDLE 1002 ACTIVE IPv6 Crypto ISAKMP SA R2#show crypto ipsec sa interface: Ethernet0/1 Crypto map tag: CCIE, local addr 12.1.1.2 protected vrf: (none) local ident (addr/mask/prot/port): (172.168.0.0/255.255.0.0/0/0) remote ident (addr/mask/prot/port): (192.168.0.0/255.255.0.0/0/0) current_peer 13.1.1.3 port 500 PERMIT, flags={origin_is_acl,} #pkts encaps: 13, #pkts encrypt: 13, #pkts digest: 13 #pkts decaps: 13, #pkts decrypt: 13, #pkts verify: 13 #pkts compressed: 0, #pkts decompressed: 0 #pkts not compressed: 0, #pkts compr. failed: 0 #pkts not decompressed: 0, #pkts decompress failed: 0 #send errors 0, #recv errors 0 local crypto endpt.: 12.1.1.2, remote crypto endpt.: 13.1.1.3 plaintext mtu 1422, path mtu 1500, ip mtu 1500, ip mtu idb Ethernet0/1 current outbound spi: 0x8B4A1080(2336886912) PFS (Y/N): N, DH group: none inbound esp sas: spi: 0x6E2BE3E4(1848370148) transform: esp-256-aes esp-sha512-hmac , in use settings ={Tunnel, } conn id: 7, flow_id: SW:7, sibling_flags 80004040, crypto map: CCIE sa timing: remaining key lifetime (k/sec): (4197493/573) IV size: 16 bytes replay detection support: Y Status: ACTIVE(ACTIVE) inbound ah sas: inbound pcp sas: outbound esp sas: spi: 0x8B4A1080(2336886912) transform: esp-256-aes esp-sha512-hmac , in use settings ={Tunnel, } conn id: 8, flow_id: SW:8, sibling_flags 80004040, crypto map: CCIE sa timing: remaining key lifetime (k/sec): (4197493/573) IV size: 16 bytes replay detection support: Y Status: ACTIVE(ACTIVE) outbound ah sas: outbound pcp sas: R2# 参考文章\n一张图认识 IPSec，区分 IKE SA（ISAKMP SA）和 IPSec SA\nhttps://blog.csdn.net/pz641/article/details/114585187\nhttps://www.jannet.hk/internet-protocol-security-ipsec-zh-hant/\n","date":"18 August 2021","externalUrl":null,"permalink":"/blog/ipsec-vpn/","section":"Blog","summary":"IKE（网络密钥交换协议） # IKE 属于一种混合型协议，由 Internet 安全关联和密钥管理协议（ISAKMP）和两种密钥交换协议 OAKLEY 与 SKEME 组成。IKE 创建在由 ISAKMP 定义的框架上，沿用了 OAKLEY 的密钥交换模式以及 SKEME 的共享和密钥更新技术，还定义了它自己的两种密钥交换方式：主模式和野蛮模式。","title":"IPSEC VPN","type":"blog"},{"content":"","date":"18 August 2021","externalUrl":null,"permalink":"/categories/rs/","section":"Categories","summary":"","title":"Rs","type":"categories"},{"content":" GRE 简介 # 通用路由封装协议 GRE（Generic Routing Encapsulation）可以对某些网络层协议（如 IPX、ATM、IPv6、AppleTalk 等）的数据报文进行封装（区别于 IPsec， IPsec 只能封装 IP 数据包），使这些被封装的数据报文能够在另一个网络层协议（如 IPv4）中传输。\nGRE 封装格式 # GRE Tunnel 配置 # interface Tunnel12 ip address 172.16.12.1 255.255.255.0 tunnel source Ethernet0/0 tunnel destination 10.1.24.2 IPSEC over GRE 配置 # Step 1:IKE Phase 1 # R1(config)#crypto isakmp policy 1 R1(config-isakmp)# encr aes R1(config-isakmp)# hash md5 R1(config-isakmp)# authentication pre-share R1(config-isakmp)# group 2 R1(config-isakmp)# lifetime 30000 R1(config-isakmp)#? ISAKMP commands: authentication Set authentication method for protection suite default Set a command to its defaults encryption Set encryption algorithm for protection suite exit Exit from ISAKMP protection suite configuration mode group Set the Diffie-Hellman group hash Set hash algorithm for protection suite lifetime Set lifetime for ISAKMP security association no Negate a command or set its defaults Step 2: IKE Phase 2 # R1(config)#crypto ipsec transform-set TS ah-sha-hmac esp-3des R1(cfg-crypto-trans)# mode tunnel R1(config)#crypto ipsec transform-set TS ? ah-md5-hmac AH-HMAC-MD5 transform ah-sha-hmac AH-HMAC-SHA transform ah-sha256-hmac AH-HMAC-SHA256 transform ah-sha384-hmac AH-HMAC-SHA384 transform ah-sha512-hmac AH-HMAC-SHA512 transform comp-lzs IP Compression using the LZS compression algorithm esp-3des ESP transform using 3DES(EDE) cipher (168 bits) esp-aes ESP transform using AES cipher esp-des ESP transform using DES cipher (56 bits) esp-gcm ESP transform using GCM cipher esp-gmac ESP transform using GMAC cipher esp-md5-hmac ESP transform using HMAC-MD5 auth esp-null ESP transform w/o cipher esp-seal ESP transform using SEAL cipher (160 bits) esp-sha-hmac ESP transform using HMAC-SHA auth esp-sha256-hmac ESP transform using HMAC-SHA256 auth esp-sha384-hmac ESP transform using HMAC-SHA384 auth esp-sha512-hmac ESP transform using HMAC-SHA512 auth Step 3: 配置 Pre-share Key # R1(config)#crypto isakmp key 6 ccie address 10.1.24.2 R1(config)#crypto isakmp key 6 ccie address 10.1.34.3 Step 4: 配置 IPSec Profile，并在 Tunnel 接口调用 # R1(config)#crypto ipsec profile PF R1(ipsec-profile)# set transform-set TS R1(ipsec-profile)#int tu12 R1(config-if)#tunnel protection ipsec profile PF R1#show crypto isakmp sa IPv4 Crypto ISAKMP SA dst src state conn-id status 10.1.14.1 10.1.34.3 QM_IDLE 1001 ACTIVE 10.1.24.2 10.1.14.1 QM_IDLE 1006 ACTIVE 10.1.34.3 10.1.14.1 QM_IDLE 1002 ACTIVE IPv6 Crypto ISAKMP SA R1#show crypto ipsec sa interface: Tunnel13 Crypto map tag: Tunnel13-head-0, local addr 10.1.14.1 protected vrf: (none) local ident (addr/mask/prot/port): (10.1.14.1/255.255.255.255/47/0) remote ident (addr/mask/prot/port): (10.1.34.3/255.255.255.255/47/0) current_peer 10.1.34.3 port 500 PERMIT, flags={origin_is_acl,} #pkts encaps: 1188, #pkts encrypt: 1188, #pkts digest: 1188 #pkts decaps: 1189, #pkts decrypt: 1189, #pkts verify: 1189 #pkts compressed: 0, #pkts decompressed: 0 #pkts not compressed: 0, #pkts compr. failed: 0 #pkts not decompressed: 0, #pkts decompress failed: 0 #send errors 0, #recv errors 0 local crypto endpt.: 10.1.14.1, remote crypto endpt.: 10.1.34.3 plaintext mtu 1438, path mtu 1500, ip mtu 1500, ip mtu idb Ethernet0/0 current outbound spi: 0x4940E097(1228988567) PFS (Y/N): N, DH group: none inbound esp sas: spi: 0xFE32E1FF(4264747519) transform: esp-3des , in use settings ={Tunnel, } conn id: 13, flow_id: SW:13, sibling_flags 80004070, crypto map: Tunnel13-head-0 sa timing: remaining key lifetime (k/sec): (4177267/1704) IV size: 8 bytes replay detection support: Y Status: ACTIVE(ACTIVE) inbound ah sas: spi: 0x56983F1B(1452818203) transform: ah-sha-hmac , in use settings ={Tunnel, } conn id: 13, flow_id: SW:13, sibling_flags 80004070, crypto map: Tunnel13-head-0 sa timing: remaining key lifetime (k/sec): (4177267/1704) replay detection support: Y Status: ACTIVE(ACTIVE) inbound pcp sas: outbound esp sas: spi: 0x7AB384DD(2058585309) transform: esp-3des , in use settings ={Tunnel, } conn id: 14, flow_id: SW:14, sibling_flags 80004070, crypto map: Tunnel13-head-0 sa timing: remaining key lifetime (k/sec): (4177267/1704) IV size: 8 bytes replay detection support: Y Status: ACTIVE(ACTIVE) outbound ah sas: spi: 0x4940E097(1228988567) transform: ah-sha-hmac , in use settings ={Tunnel, } conn id: 14, flow_id: SW:14, sibling_flags 80004070, crypto map: Tunnel13-head-0 sa timing: remaining key lifetime (k/sec): (4177267/1704) replay detection support: Y Status: ACTIVE(ACTIVE) outbound pcp sas: interface: Tunnel12 Crypto map tag: Tunnel12-head-0, local addr 10.1.14.1 protected vrf: (none) local ident (addr/mask/prot/port): (10.1.14.1/255.255.255.255/47/0) remote ident (addr/mask/prot/port): (10.1.24.2/255.255.255.255/47/0) current_peer 10.1.24.2 port 500 PERMIT, flags={origin_is_acl,} #pkts encaps: 201, #pkts encrypt: 201, #pkts digest: 201 #pkts decaps: 200, #pkts decrypt: 200, #pkts verify: 200 #pkts compressed: 0, #pkts decompressed: 0 #pkts not compressed: 0, #pkts compr. failed: 0 #pkts not decompressed: 0, #pkts decompress failed: 0 #send errors 0, #recv errors 0 local crypto endpt.: 10.1.14.1, remote crypto endpt.: 10.1.24.2 plaintext mtu 1438, path mtu 1500, ip mtu 1500, ip mtu idb Ethernet0/0 current outbound spi: 0x44BBFF5A(1153171290) PFS (Y/N): N, DH group: none inbound esp sas: spi: 0x1659CBA9(374983593) transform: esp-3des , in use settings ={Tunnel, } conn id: 17, flow_id: SW:17, sibling_flags 80000070, crypto map: Tunnel12-head-0 sa timing: remaining key lifetime (k/sec): (4301490/2700) IV size: 8 bytes replay detection support: Y Status: ACTIVE(ACTIVE) inbound ah sas: spi: 0xC614FC02(3323264002) transform: ah-sha-hmac , in use settings ={Tunnel, } conn id: 17, flow_id: SW:17, sibling_flags 80000070, crypto map: Tunnel12-head-0 sa timing: remaining key lifetime (k/sec): (4301490/2700) replay detection support: Y Status: ACTIVE(ACTIVE) inbound pcp sas: outbound esp sas: spi: 0xEB07616B(3943129451) transform: esp-3des , in use settings ={Tunnel, } conn id: 18, flow_id: SW:18, sibling_flags 80000070, crypto map: Tunnel12-head-0 sa timing: remaining key lifetime (k/sec): (4301490/2700) IV size: 8 bytes replay detection support: Y Status: ACTIVE(ACTIVE) outbound ah sas: spi: 0x44BBFF5A(1153171290) transform: ah-sha-hmac , in use settings ={Tunnel, } conn id: 18, flow_id: SW:18, sibling_flags 80000070, crypto map: Tunnel12-head-0 sa timing: remaining key lifetime (k/sec): (4301490/2700) replay detection support: Y Status: ACTIVE(ACTIVE) outbound pcp sas: R1#ping 192.168.2.2 source 192.168.1.1 Type escape sequence to abort. Sending 5, 100-byte ICMP Echos to 192.168.2.2, timeout is 2 seconds: Packet sent with a source address of 192.168.1.1 !!!!! Success rate is 100 percent (5/5), round-trip min/avg/max = 1/4/6 ms ","date":"17 August 2021","externalUrl":null,"permalink":"/blog/gre/","section":"Blog","summary":"GRE 简介 # 通用路由封装协议 GRE（Generic Routing Encapsulation）可以对某些网络层协议（如 IPX、ATM、IPv6、AppleTalk 等）的数据报文进行封装（区别于 IPsec， IPsec 只能封装 IP 数据包），使这些被封装的数据报文能够在另一个网络层协议（如 IPv4）中传输。","title":"通用路由封装协议GRE（Generic Routing Encapsulation)","type":"blog"},{"content":" DMVPN Phase 1: # R1 配置:\nR1_HUB#show run int tunnel 0 Building configuration... Current configuration : 219 bytes ! interface Tunnel0 ip address 172.168.123.1 255.255.255.0 no ip redirects ip nhrp map multicast dynamic ip nhrp network-id 1 tunnel source Ethernet0/0 tunnel mode gre multipoint end R2 / R3 配置:\nR2_spoke#show run int tunnel 0 Building configuration... Current configuration : 241 bytes ! interface Tunnel0 ip address 172.168.123.2 255.255.255.0 ip nhrp map 172.168.123.1 10.1.14.1 ip nhrp map multicast 10.1.14.1 ip nhrp network-id 1 ip nhrp nhs 172.168.123.1 tunnel source Ethernet0/0 tunnel destination 10.1.14.1 end 至此 R1 和 R2， R1 和 R3 之间的 tunnel 就建立起来， DMVPN phase 1 Spoke 之间不会有直连的 tunnel.\nR1_HUB#show dmvpn Legend: Attrb --\u0026gt; S - Static, D - Dynamic, I - Incomplete N - NATed, L - Local, X - No Socket T1 - Route Installed, T2 - Nexthop-override C - CTS Capable # Ent --\u0026gt; Number of NHRP entries with same NBMA peer NHS Status: E --\u0026gt; Expecting Replies, R --\u0026gt; Responding, W --\u0026gt; Waiting UpDn Time --\u0026gt; Up or Down Time for a Tunnel ========================================================================== Interface: Tunnel0, IPv4 NHRP Details Type:Hub, NHRP Peers:2, # Ent Peer NBMA Addr Peer Tunnel Add State UpDn Tm Attrb ----- --------------- --------------- ----- -------- ----- 1 10.1.24.2 172.168.123.2 UP 1w3d D 1 10.1.34.3 172.168.123.3 UP 1w3d D R1_HUB#show ip nhr R1_HUB#show ip nhrp 172.168.123.2/32 via 172.168.123.2 Tunnel0 created 1w3d, expire 01:37:11 Type: dynamic, Flags: unique registered used nhop NBMA address: 10.1.24.2 172.168.123.3/32 via 172.168.123.3 Tunnel0 created 1w3d, expire 01:55:34 Type: dynamic, Flags: unique registered used nhop NBMA address: 10.1.34.3 Spoke 之间需要互相访问， 需要经过 HUB, 所以在起路由协议后， 需要在 HUB 侧关闭水平分割，发布 summary 路由以减少 spoke router 的路由数量.\nDMVPN Phase 1 一定要保证 Hub 端作为 Spoke 访问其他 Spoke 路由的下一跳，如果使用 EIGRP 需要在 Hub 端关闭水平分割；如果使用 OSPF 需要在 Hub 使用点到多点的网络接口类型；如果使用 BGP 建议使用 eBGP。\nR1_HUB(config)#int tu0 R1_HUB(config-if)#no ip split-horizon eigrp 1 R1_HUB(config-if)#ip summary-address eigrp 1 192.168.0.0 255.255.255.0 R1_HUB#show ip route eigrp 1 Codes: L - local, C - connected, S - static, R - RIP, M - mobile, B - BGP D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2 E1 - OSPF external type 1, E2 - OSPF external type 2 i - IS-IS, su - IS-IS summary, L1 - IS-IS level-1, L2 - IS-IS level-2 ia - IS-IS inter area, * - candidate default, U - per-user static route o - ODR, P - periodic downloaded static route, H - NHRP, l - LISP a - application route + - replicated route, % - next hop override Gateway of last resort is not set D 192.168.0.0/16 is a summary, 00:01:04, Null0 D 192.168.2.0/24 [90/27008000] via 172.168.123.2, 1w3d, Tunnel0 D 192.168.3.0/24 [90/27008000] via 172.168.123.3, 1w3d, Tunnel0 R2_spoke#show ip route eigrp 1 Codes: L - local, C - connected, S - static, R - RIP, M - mobile, B - BGP D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2 E1 - OSPF external type 1, E2 - OSPF external type 2 i - IS-IS, su - IS-IS summary, L1 - IS-IS level-1, L2 - IS-IS level-2 ia - IS-IS inter area, * - candidate default, U - per-user static route o - ODR, P - periodic downloaded static route, H - NHRP, l - LISP a - application route + - replicated route, % - next hop override Gateway of last resort is not set D 192.168.0.0/16 [90/27008000] via 172.168.123.1, 00:01:09, Tunnel0 R2_spoke# R2_spoke#traceroute 192.168.3.3 source 192.168.2.2 Type escape sequence to abort. Tracing the route to 192.168.3.3 VRF info: (vrf in name/id, vrf out name/id) 1 172.168.123.1 5 msec 5 msec 0 msec 2 172.168.123.3 1 msec 1 msec * DMVPN Phase 2: # Hub 和 Spoke 都配置 mGRE，这样 Spoke 可以自动建立到其他 Spoke 的隧道。\nR2_spoke(config)#in tunnel 0 R2_spoke(config-if)#no tunnel destination 10.1.14.1 R2_spoke(config-if)#tunnel mode gre multipoint 如果使用 EIGRP 需要在 Hub 端不仅需要关闭水平分割，还要关闭下一跳自我(Disable next-hop-self)；如果使用 OSPF，需要使用 broadcast 的接口网络类型，同时要保证 Hub 端为 DR，所有的 Spoke 端要配置端口 priority 为 0；使用 BGP 的话，用 iBGP 或 eBGP 中的 next-hop-unchanged。\nR1_HUB(config)#int tunnel 0 R1_HUB(config-if)#no ip summary-address eigrp 1 192.168.0.0 255.255.0.0 R1_HUB(config-if)#no ip next-hop-self eigrp 1 运行 DMVPN 的阶段二以后，会发现阶段二的问题在于 Hub 端不能汇总，因为汇总后的路由下一跳在 Hub 上，那这样 Spoke 去往 Spoke 的话，首先会发包给 Hub 端，就又有了次优路径好增大了延迟。\nR2_spoke# show ip route eigrp 1 Codes: L - local, C - connected, S - static, R - RIP, M - mobile, B - BGP D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2 E1 - OSPF external type 1, E2 - OSPF external type 2 i - IS-IS, su - IS-IS summary, L1 - IS-IS level-1, L2 - IS-IS level-2 ia - IS-IS inter area, * - candidate default, U - per-user static route o - ODR, P - periodic downloaded static route, H - NHRP, l - LISP a - application route + - replicated route, % - next hop override Gateway of last resort is not set D 192.168.1.0/24 [90/27008000] via 172.168.123.1, 00:01:29, Tunnel0 D 192.168.3.0/24 [90/28288000] via 172.168.123.3, 00:01:29, Tunnel0 R2_spoke#ping 192.168.3.3 source 192.168.2.2 Type escape sequence to abort. Sending 5, 100-byte ICMP Echos to 192.168.3.3, timeout is 2 seconds: Packet sent with a source address of 192.168.2.2 !!!!! Success rate is 100 percent (5/5), round-trip min/avg/max = 1/13/65 ms R2_spoke# R2_spoke# R2_spoke#show dmvpn Legend: Attrb --\u0026gt; S - Static, D - Dynamic, I - Incomplete N - NATed, L - Local, X - No Socket T1 - Route Installed, T2 - Nexthop-override C - CTS Capable # Ent --\u0026gt; Number of NHRP entries with same NBMA peer NHS Status: E --\u0026gt; Expecting Replies, R --\u0026gt; Responding, W --\u0026gt; Waiting UpDn Time --\u0026gt; Up or Down Time for a Tunnel ========================================================================== Interface: Tunnel0, IPv4 NHRP Details Type:Spoke, NHRP Peers:2, # Ent Peer NBMA Addr Peer Tunnel Add State UpDn Tm Attrb ----- --------------- --------------- ----- -------- ----- 1 10.1.14.1 172.168.123.1 UP 00:01:52 S 1 10.1.34.3 172.168.123.3 UP 00:00:06 D R2_spoke# R2_spoke#trac R2_spoke#traceroute 192.168.3.3 source 192.168.2.2 Type escape sequence to abort. Tracing the route to 192.168.3.3 VRF info: (vrf in name/id, vrf out name/id) 1 172.168.123.3 0 msec 1 msec * R2_spoke# DMVPN Phase 3: # 在阶段三中同样有阶段二的功能，也就是支持 Spoke 到 Spoke 直接的隧道，但是并不是用路由协议来解决 Spoke 学到其他 Spoke 路由下一跳的问题，而是使用 NHRP 的重定向来解决。\n当 Spoke1 要访问 Spoke2 的路由时，假如下一跳在 Hub 上，第一个包会发往 Hub，Hub 会转发这个数据包给 Spoke2，同时会发送一个 NHRP 的重定向消息给 Spoke1，Spoke1 收到后，会储存重定向消息并向 Spoke2 发送 NHRP query 消息，Spoke2 收到 NHRP query 会存储 Spoke1 的信息，Spoke1 和 Spoke2 之间会自动建立隧道，后续的数据包会直接从 Spoke1 发往 Spoke2,不经过 Hub。\n这样的优化的好处是 Spoke 学习到其他 Spoke 的路由下一跳不需要在 Spoke 上了，这样 Hub 就可以只发送汇总路由和默认路由给 Spoke 端，可以解决阶段二的可伸缩性问题。\n在阶段三中运行路由协议时，不需要保留下一跳信息，EIGRP 关闭水平分割就可以；OSPF 运行 P2MP 的接口网络类型就可以，不需要 broadcast 了.\nR1_HUB(config)#int tunnel 0 R1_HUB(config-if)#ip next-hop-self eigrp 1 R1_HUB(config-if)#ip summary-address eigrp 1 192.168.0.0 255.255.0.0 R1_HUB(config-if)#ip nhrp redirect R1_HUB#show run int tunnel 0 Building configuration... Current configuration : 289 bytes ! interface Tunnel0 ip address 172.168.123.1 255.255.255.0 no ip redirects no ip split-horizon eigrp 1 ip nhrp map multicast dynamic ip nhrp network-id 1 ip nhrp redirect ip summary-address eigrp 1 192.168.0.0 255.255.0.0 tunnel source Ethernet0/0 tunnel mode gre multipoint R2_spoke(config)#int tunnel 0 R2_spoke(config-if)#ip nhrp shortcut R2_spoke#show run int tunnel 0 Building configuration... Current configuration : 274 bytes ! interface Tunnel0 ip address 172.168.123.2 255.255.255.0 no ip redirects ip nhrp map 172.168.123.1 10.1.14.1 ip nhrp map multicast 10.1.14.1 ip nhrp network-id 1 ip nhrp nhs 172.168.123.1 ip nhrp shortcut tunnel source Ethernet0/0 tunnel mode gre multipoint end R2_spoke#show ip route eigrp 1 Codes: L - local, C - connected, S - static, R - RIP, M - mobile, B - BGP D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2 E1 - OSPF external type 1, E2 - OSPF external type 2 i - IS-IS, su - IS-IS summary, L1 - IS-IS level-1, L2 - IS-IS level-2 ia - IS-IS inter area, * - candidate default, U - per-user static route o - ODR, P - periodic downloaded static route, H - NHRP, l - LISP a - application route + - replicated route, % - next hop override Gateway of last resort is not set D 192.168.0.0/16 [90/27008000] via 172.168.123.1, 00:00:12, Tunnel0 R2_spoke#tr R2_spoke#traceroute 192.168.3.3 so R2_spoke#traceroute 192.168.3.3 source 192.168.2.2 Type escape sequence to abort. Tracing the route to 192.168.3.3 VRF info: (vrf in name/id, vrf out name/id) 1 172.168.123.1 5 msec 5 msec 0 msec 2 172.168.123.3 5 msec 6 msec * R2_spoke#show ip nhrp 172.168.123.1/32 via 172.168.123.1 Tunnel0 created 00:01:08, never expire Type: static, Flags: used NBMA address: 10.1.14.1 172.168.123.3/32 via 172.168.123.3 Tunnel0 created 00:00:18, expire 01:59:41 Type: dynamic, Flags: router used nhop rib NBMA address: 10.1.34.3 192.168.3.0/24 via 172.168.123.3 Tunnel0 created 00:00:18, expire 01:59:41 Type: dynamic, Flags: router rib NBMA address: 10.1.34.3 R2_spoke#traceroute 192.168.3.3 source 192.168.2.2 Type escape sequence to abort. Tracing the route to 192.168.3.3 VRF info: (vrf in name/id, vrf out name/id) 1 172.168.123.3 1 msec 71 msec * R2_spoke# R2_spoke#show dm R2_spoke#show dmvpn Legend: Attrb --\u0026gt; S - Static, D - Dynamic, I - Incomplete N - NATed, L - Local, X - No Socket T1 - Route Installed, T2 - Nexthop-override C - CTS Capable # Ent --\u0026gt; Number of NHRP entries with same NBMA peer NHS Status: E --\u0026gt; Expecting Replies, R --\u0026gt; Responding, W --\u0026gt; Waiting UpDn Time --\u0026gt; Up or Down Time for a Tunnel ========================================================================== Interface: Tunnel0, IPv4 NHRP Details Type:Spoke, NHRP Peers:2, # Ent Peer NBMA Addr Peer Tunnel Add State UpDn Tm Attrb ----- --------------- --------------- ----- -------- ----- 1 10.1.14.1 172.168.123.1 UP 00:01:37 S 2 10.1.34.3 172.168.123.3 UP 00:00:48 DT1 172.168.123.3 UP 00:00:48 DT1 总结 # 阶段一：Hub 配置 mGRE，Spoke 端配置 P2P GRE，Spoke 到 Spoke 没有直接的隧道；\n阶段二：Hub 和 Spoke 端全部配置 mGRE，使用路由协议的方法解决 Spoke 学到 Spoke 路由的下一跳问题；\n阶段三：Hub 和 Spoke 端全部配置 mGRE，使用 NHRP 解决下一跳解析问题，这样 Hub 端可以汇总路由，解决了扩展性问题\nOSPF 的配置案例：\nHUB1 R1#show run int tunnel 0 Building configuration... Current configuration : 301 bytes ! interface Tunnel0 ip address 10.1.1.1 255.255.255.0 no ip redirects ip nhrp authentication xuxing ip nhrp map multicast dynamic ip nhrp map 10.1.1.2 26.1.1.2 ip nhrp network-id 100 ip nhrp redirect ip ospf network point-to-multipoint tunnel source 16.1.1.1 tunnel mode gre multipoint end Spoke3 R3#show run int tunnel 0 Building configuration... Current configuration : 377 bytes ! interface Tunnel0 ip address 10.1.1.3 255.255.255.0 no ip redirects ip nhrp authentication xuxing ip nhrp map multicast 16.1.1.1 ip nhrp map 10.1.1.1 16.1.1.1 ! ip nhrp map 10.1.1.2 26.1.1.2 ip nhrp network-id 100 ip nhrp nhs 10.1.1.1 ! ip nhrp nhs 10.1.1.2 ip nhrp shortcut ip ospf network point-to-multipoint tunnel source 36.1.1.3 tunnel mode gre multipoint end R3# ","date":"3 August 2021","externalUrl":null,"permalink":"/blog/dmvpn/","section":"Blog","summary":"DMVPN Phase 1: # R1 配置:","title":"DMVPN","type":"blog"},{"content":"BGP 监控协议 BGP Monitoring Protocol（BMP）能够对网络中的设备的 BGP 运行状态进行实时监控，BGP 运行状态包括对等体关系的建立与解除、路由信息刷新等。\n路由器只需要与 BMP server 建立一个 TCP 连接， 后续就可以发送 BMP 的数据包。\nBMP 的数据包包含以下 7 种类型：\nInitiation 消息：初始化消息，向监控服务器通告厂商信息、版本号等。\nPU（Peer Up Notification）消息：向监控服务器上报与对等体 BGP 连接的建立。\nRM（Route Monitoring）消息：路由监控消息，向监控服务器发送从对等体收到的所有路由，并随时向监控服务器上报路由的新增或撤销。\nPD（Peer Down Notification）消息：向监控服务器上报与对等体 BGP 连接的中断。\nSR（Stats Reports）消息：向监控服务器上报路由器运行状态的统计信息。\nTermination 消息：结束消息，向监控服务器通告关闭 BMP 会话的原因。\n与其他厂商的 BMP 实现对比来看， Cisco 这里新增了一个报文“Route Mirroring”， 用来更新其他类型的 BGP 报文，但是从 IOS XR 设备的测试来开， 并没有发现此类新增报文。\nRP/0/RP0/CPU0:CRS-H#show bgp bmp server 1 Thu Jul 29 06:15:37.127 UTC BMP server 1 Host 10.70.79.197 Port 5000 Connected for 01:18:08 Last Disconnect event received : 00:00:00 Precedence: internet BGP neighbors: 1 VRF: calo-mgmt (0x60000002) Update Source: 172.18.87.66 (Mg0/RP0/CPU0/0) Update Source Vrf ID: 0x60000002 Queue write pulse sent : Jul 29 06:15:26.601, Jul 29 04:57:03.914 (all) Queue write pulse received : Jul 29 06:15:26.601 Update Mode : Route Monitoring Post-Policy Queue Route Mon Msg buffer limit : 143093 KB (Current Server Up Count: 1) Queue Route Mon Msg buffer usage : 0 B Update Generation in Progress : No Reset Walk in Progress : No IPv4 Unicast Version : 42954698 Init EOR Version : 15416361 Init EOR Pending count : 0 Update Generation Last Run : Jul 29 06:15:26.593, Count 1620 Walk Currently Stalled : No, Last Stalled : Jul 29 04:38:04.837, Count 224 IPv6 Unicast Version : 0 Init EOR Version : 0 Init EOR Pending count : 0 Update Generation Last Run : not set, Count 0 Walk Currently Stalled : No, Last Stalled : not set, Count 0 TCP: Last message sent: Jul 29 06:15:30.993, Status: No Pending Data Last write pulse received: Jul 29 06:15:31.393, Waiting: FALSE Message Stats: Total msgs dropped : 5372968 Total msgs pending : 0, Max: 2070488 at Jul 29 04:25:08.541 Total messages sent : 1471520 Total bytes sent : 267883849, Time spent: 8.500 secs INITIATION: 3 TERMINATION: 0 STATS-REPORT: 0 PER-PEER messages: 1471517 ROUTE-MON messages : 1471512 EOR messages : 2 Update messages : 17680 (Prefixes: 18940950, Err: 0) Withdraw messages : 72092 (Prefixes: 19232017, Err: 0) Discarded msgs: 454 (reason : peer-down) Discarded pfx : 33658 (reason : peer-down) Update gen time spent: 81.519 secs Neighbor 100.1.0.2 Messages pending: 0 Messages dropped: 5372968 Messages sent : 1471517 \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; PEER-UP : 4 PEER-DOWN : 1 ROUTE-MON : 1471512 EOR : 2 Update : 17680 (Prefixes: 18940950, Err: 0) Withdraw : 72092 (Prefixes: 19232017, Err: 0) OPENBMP # BMP server 我们可以使用 OPENBMP 这个开源的项目， 关于此项目可参考Github.\n安装测试可以参考以下 link， 使用 docker-compose 快速的搭建这个实例。\nhttps://www.openbmp.org/getting_started.html 安装示例:\n[root@localhost BMP]# pip install docker-compose [root@localhost BMP]# wget https://raw.githubusercontent.com/OpenBMP/obmp-docker/main/docker-compose.yml [root@localhost BMP]# git clone https://github.com/OpenBMP/obmp-grafana.git [root@localhost BMP]# mkdir -p /var/openbmp [root@localhost BMP]# export OBMP_DATA_ROOT=/var/openbmp [root@localhost BMP]# sudo mkdir -p $OBMP_DATA_ROOT [root@localhost BMP]# sudo chmod -R 7777 $OBMP_DATA_ROOT [root@localhost BMP]# mkdir -p ${OBMP_DATA_ROOT}/config [root@localhost BMP]# mkdir -p ${OBMP_DATA_ROOT}/kafka-data [root@localhost BMP]# mkdir -p ${OBMP_DATA_ROOT}/zk-data [root@localhost BMP]# mkdir -p ${OBMP_DATA_ROOT}/zk-log [root@localhost BMP]# mkdir -p ${OBMP_DATA_ROOT}/postgres/data [root@localhost BMP]# mkdir -p ${OBMP_DATA_ROOT}/postgres/ts [root@localhost BMP]# mkdir -p ${OBMP_DATA_ROOT}/grafana [root@localhost BMP]# chmod -R 7777 $OBMP_DATA_ROOT/* [root@localhost BMP]# cp -r obmp-grafana/dashboards obmp-grafana/provisioning ${OBMP_DATA_ROOT}/grafana/ [root@localhost BMP]# vim docker-compose.yml \u0026lt;\u0026lt;\u0026lt;\u0026lt; 修改文件中MEM字段， 更改docker使用的memory为2G， 测试使用足够了 [root@localhost BMP]# OBMP_DATA_ROOT=/var/openbmp docker-compose -f ./docker-compose.yml -p obmp up -d \u0026lt;\u0026lt;\u0026lt; Creating obmp-zookeeper ... Creating obmp-grafana ... Creating obmp-psql ... Creating obmp-collector ... Creating obmp-psql-app ... Creating obmp-kafka ... [root@localhost BMP]# docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES b4d4e3bd12d0 confluentinc/cp-kafka:6.0.2 \u0026#34;/etc/confluent/dock…\u0026#34; About a minute ago Up About a minute 0.0.0.0:9092-\u0026gt;9092/tcp, :::9092-\u0026gt;9092/tcp obmp-kafka 8ebbe99a86d6 openbmp/psql-app:latest \u0026#34;/usr/sbin/run\u0026#34; 2 minutes ago Up About a minute 8080/tcp, 0.0.0.0:9005-\u0026gt;9005/tcp, :::9005-\u0026gt;9005/tcp obmp-psql-app a52de93a5645 openbmp/postgres:latest \u0026#34;docker-entrypoint.s…\u0026#34; 2 minutes ago Up About a minute 0.0.0.0:5432-\u0026gt;5432/tcp, :::5432-\u0026gt;5432/tcp obmp-psql a9866e9ef534 openbmp/collector:latest \u0026#34;/usr/sbin/run\u0026#34; 2 minutes ago Up About a minute 0.0.0.0:5000-\u0026gt;5000/tcp, :::5000-\u0026gt;5000/tcp obmp-collector a19cca96d0cc grafana/grafana:latest \u0026#34;/run.sh\u0026#34; 2 minutes ago Up About a minute 0.0.0.0:3000-\u0026gt;3000/tcp, :::3000-\u0026gt;3000/tcp obmp-grafana b9402148e6ea confluentinc/cp-zookeeper:6.0.2 \u0026#34;/etc/confluent/dock…\u0026#34; 2 minutes ago Up About a minute 2181/tcp, 2888/tcp, 3888/tcp obmp-zookeeper 85a59886ecbe portainer/portainer-ce \u0026#34;/portainer\u0026#34; 5 weeks ago Up 5 weeks 0.0.0.0:8000-\u0026gt;8000/tcp, :::8000-\u0026gt;8000/tcp, 0.0.0.0:9000-\u0026gt;9000/tcp, :::9000-\u0026gt;9000/tcp portainer [root@localhost BMP]# OBMP_DATA_ROOT=/var/openbmp docker-compose -p obmp down \u0026lt;\u0026lt;\u0026lt;\u0026lt; stop and remove all containers Router BMP 配置 # 以 Cisco IOS XR 设备为例,OPENBMP 默认开放的端口 5000 用于与 client 建立连接，端口 3000 为 grafana\nRP/0/RP0/CPU0:CRS-H#show run bmp Thu Jul 29 06:37:09.334 UTC bmp server 1 host 10.70.79.197 port 5000 vrf calo-mgmt update-source MgmtEth0/RP0/CPU0/0 ! RP/0/RP0/CPU0:CRS-H#show run router bgp 65001 Thu Jul 29 06:37:22.173 UTC router bgp 65001 nsr bgp router-id 20.20.20.20 bgp log neighbor changes detail address-family ipv4 unicast network 20.20.20.20/32 ! address-family ipv6 unicast ! neighbor 100.1.0.2 remote-as 100 bmp-activate server 1 \u0026lt;\u0026lt;\u0026lt;\u0026lt; Active BMP for special peer address-family ipv4 unicast route-policy pass in route-policy pass out ! RP/0/RP0/CPU0:CRS-H#show bgp bmp summary Thu Jul 29 06:38:08.503 UTC ID Host Port State Time NBRs 1 10.70.79.197 5000 ESTAB 01:40:39 1 Adj-RIB-In and Adj-RIB-in Post-policy # 如图，Adj-RIB-In 为邻居发送过来的未经过 rpl 处理的路由信息，而 Adj-RIB-in Post-policy 则是经过 RPL 并且被处理过的路由信息。\n默认 IOS-XR 设备是 Adj-RIB-in pre policy, 即对通过入口策略前的路由（即设备从邻居收到的所有路由）进行监控。\n如果希望监控服务器只对通过入口策略后的路由（即通过路由策略筛选后，实际下发到路由表中的路由）进行监控， 使用以下配置:\nRP/0/RP0/CPU0:CRS-H#show run bmp Thu Jul 29 06:53:19.792 UTC bmp server all route-monitoring policy post inbound ! BMP Packet # bmp_xuxing.zip\n","date":"29 July 2021","externalUrl":null,"permalink":"/blog/bgp-bmp/","section":"Blog","summary":"BGP 监控协议 BGP Monitoring Protocol（BMP）能够对网络中的设备的 BGP 运行状态进行实时监控，BGP 运行状态包括对等体关系的建立与解除、路由信息刷新等。","title":"BGP 监控协议(BMP)","type":"blog"},{"content":"传统的 qos 更容易对某一类流量在接口上进行处理， 而 QPPB 可以基于路由来做，相对传统的 qos 更灵活。即在某入接口进行分类，去往某条路由或者匹配某些源；在出接口做一些 Qos 的 action。\n参考博客:\nhttps://community.cisco.com/t5/service-providers-documents/asr9000-xr-implementing-qos-policy-propagation-for-bgp-qppb/ta-p/3136639\n配置步骤 # 定义路由策略（匹配的路由） 将路由策略附加到 BGP 实例 将 QPPB 应用到 Ingress 接口 配置出口 QoS 服务策略 示例如下：\n#定义路由策略（匹配的路由） route-policy set_qos if destination in (8.8.8.8/32) then set qos-group 1 elseif source in (200.200.200.200) then set qos-group 2 else set qos-group 3 endif pass end-policy #将路由策略附加到 BGP 实例 router bgp 1 bgp router-id 10.1.1.1 address-family ipv4 unicast table-policy set_qos \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; ! neighbor 10.1.12.2 remote-as 200 address-family ipv4 unicast route-policy pass in route-policy pass out ! ! ! #将 QPPB 应用到 Ingress 接口 interface TenGigE0/1/0/0 ipv4 bgp policy propagation input qos-group destination \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; destination/source ipv4 address 100.1.1.1 255.255.255.0 load-interval 30 ! RP/0/RSP0/CPU0:ASR-9906-A#show run int be 100.100 Thu Jul 1 15:49:05.074 UTC interface Bundle-Ether100.100 service-policy output QOS ipv4 address 10.1.12.1 255.255.255.0 load-interval 30 encapsulation dot1q 100 ! #配置出口 QoS 服务策略 RP/0/RSP0/CPU0:ASR-9906-A#show run policy-map QOS Thu Jul 1 15:49:12.454 UTC policy-map QOS class qos1 police rate 100 mbps ! ! class qos2 police rate 200 mbps ! ! class qos3 police rate 300 mbps ! ! class class-default ! end-policy-map QPPB 实际的用途 # 参考 Frank 的博客：\nhttp://www.zhaocs.info/bgp-design-1.html\n例如，如果 AS200 有两种业务，我们想在 AS1 到 AS200 的互联 link BE100.100 做区分服务，给 9.9.9.9/32 多点带宽， 那么我们就可以在 AS1 路由器上做基于目的（destination）的 QPPB， 即为分别为 8.8.8.8/32，9.9.9.9/32 set 不通的 qos-group， 在出接口 BE100.100 针对不同的 qos-group 设置不同的带宽。\n测试如下：\n!!!!!!! 配置参考如上 !!!!!!! 流量测试仪产生一条目的地址为9.9.9.9的流量通过Ten0/1/0/0 送到AS1 router. 9.9.9.9/32的路由会被table-policy设置qos-group的属性， 下发到cef表中， 通过show cef x.x.x.x/x detial 查看 RP/0/RSP0/CPU0:ASR-9906-A#show cef 9.9.9.9/32 detail Thu Jul 1 16:07:55.573 UTC 9.9.9.9/32, version 209159, internal 0x5000001 0x0 (ptr 0x7447a990) [1], 0x0 (0x0), 0x0 (0x0) Updated Jul 1 09:53:56.844 Prefix Len 32, traffic index 0, precedence n/a, priority 15 QoS Group: 3 \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; gateway array (0x73fc7ad8) reference count 2, flags 0x2010, source rib (7), 0 backups [1 type 3 flags 0x48441 (0x73ffb180) ext 0x0 (0x0)] RP/0/RSP0/CPU0:ASR-9906-A#monitor int tenGigE 0/1/0/0 be 100.100 Thu Jul 1 16:09:09.776 UTC ASR-9906-A Monitor Time: 00:00:02 SysUptime: 187:38:33 Protocol:General Interface In(bps) Out(bps) InBytes/Delta OutBytes/Delta Te0/1/0/0 983.0M/ 9% 0/ 0% 2.9T/245.8M 152133/0 BE100.100 0/ 0% 308.8M/ 0% 2.7M/0 520.4G/0 \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; 流量出向被限速到300M 还例如， 有两个数据中心，都需要通过 AS1 访问 AS200， 但是 BE100.100 链路带宽有限，所以 BE100.100 的带宽使用上需要对源地址进行个区分， 来自数据中心 A 的 prefix 和来自 B 的 prefix 分别设置不同的 qos-group， 在 BE100.100 出方向上进行限速操作。由于是对源地址进行区分， 这里需要在 AS1 连接 router A/B 的两个接口上做基于源的 QPPB。\n测试如下:\n!!!!!!!! 配置修改如下 !!!!!!!!! 以Ten0/1/0/0 接口为例: RP/0/RSP0/CPU0:ASR-9906-A#show run int tenGigE 0/1/0/0 Thu Jul 1 16:24:00.342 UTC interface TenGigE0/1/0/0 ipv4 bgp policy propagation input qos-group source \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; source ipv4 address 100.1.1.1 255.255.255.0 load-interval 30 #### BGP的相关配置也要进行一定的修改， 使得AS1 分别总router A/B 学到两条不一样的路由， 这里就不做展示 测试仪再产生一条流量源地址为8.8.8.8， 数据中心A的地址， 目的为AS200 内通告的地址。 流量到Ten0/1/0/0 会检查源地址的cef表象看被标记为哪一种Qos-group： RP/0/RSP0/CPU0:ASR-9906-A#show cef 8.8.8.8/32 detail Thu Jul 1 16:27:57.372 UTC 8.8.8.8/32, version 209152, internal 0x5000001 0x0 (ptr 0x744777e0) [1], 0x0 (0x0), 0x0 (0x0) Updated Jul 1 09:12:08.133 Prefix Len 32, traffic index 0, precedence n/a, priority 4 QoS Group: 1 \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; gateway array (0x73fc7ad8) reference count 2, flags 0x2010, source rib (7), 0 backups 接着会根据目的地址，进行路由转发到BE100.100 进行Qos策略: RP/0/RSP0/CPU0:ASR-9906-A#monitor int tenGigE 0/1/0/0 be 100.100 Thu Jul 1 16:29:27.060 UTC ASR-9906-A Monitor Time: 00:00:02 SysUptime: 187:58:50 Protocol:General Interface In(bps) Out(bps) InBytes/Delta OutBytes/Delta Te0/1/0/0 983.1M/ 9% 0/ 0% 3.1T/245.9M 159636/0 BE100.100 0/ 0% 96.0M/ 0% 2.9M/0 557.7G/0 \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; 限速100M ","date":"1 July 2021","externalUrl":null,"permalink":"/blog/qppb-qos-policy-propagation-for-bgp/","section":"Blog","summary":"传统的 qos 更容易对某一类流量在接口上进行处理， 而 QPPB 可以基于路由来做，相对传统的 qos 更灵活。即在某入接口进行分类，去往某条路由或者匹配某些源；在出接口做一些 Qos 的 action。","title":"QPPB-QOS policy propagation for BGP","type":"blog"},{"content":"","date":"23 June 2021","externalUrl":null,"permalink":"/tags/docker/","section":"Tags","summary":"","title":"Docker","type":"tags"},{"content":" 安装参考\nhttps://github.com/portainer/portainer\nhttps://documentation.portainer.io/quickstart/\nhttps://documentation.portainer.io/v2.0/deploy/ceinstalldocker/\nLinux 主机安装示例如下:\n[root@localhost ~]# docker volume create portainer_data portainer_data [root@localhost ~]# [root@localhost ~]# [root@localhost ~]# docker run -d -p 8000:8000 -p 9000:9000 --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce Unable to find image \u0026#39;portainer/portainer-ce:latest\u0026#39; locally latest: Pulling from portainer/portainer-ce 94cfa856b2b1: Pull complete 49d59ee0881a: Pull complete 3fc1bc38fb56: Pull complete Digest: sha256:f133bfdd9646f48a8ddb54b9555070f628caa530924045eeff8144a32de2dcc7 Status: Downloaded newer image for portainer/portainer-ce:latest f4bf3f5fe82d1e15aff223752b10b987f298ebdea5a987c6303d38dc6c4079d3 安装完成后， 访问 9000 端口， 第一次登录会让你配置用户名/密码， 之后选择 Docker\u0026ndash;\u0026gt; Local.\n使用界面如下:\n","date":"23 June 2021","externalUrl":null,"permalink":"/blog/docker-portainer/","section":"Blog","summary":"安装参考","title":"Docker图形化管理工具Portainer","type":"blog"},{"content":"SecureCRT 本身提供一种录制脚本的功能，可以通过录制脚本得到一个示例， 然后在此基础进行更改， 得到自己想要的脚本。\n示例 # #$language = \u0026#34;VBScript\u0026#34; #$interface = \u0026#34;1.0\u0026#34; crt.Screen.Synchronous = True \u0026#39; This automatically generated script may need to be \u0026#39; edited in order to work correctly. Sub Main While 1 \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; 循环 crt.Screen.Send \u0026#34;telnet 10.1.1.1\u0026#34; \u0026amp; chr(13) crt.Screen.WaitForString \u0026#34;Username: \u0026#34; crt.Screen.Send \u0026#34;cisco\u0026#34; \u0026amp; chr(10) \u0026amp; \u0026#34;cisco\u0026#34; \u0026amp; chr(10) \u0026amp; \u0026#34;show tcp trace \u0026#34; \u0026amp; chr(124) \u0026amp; \u0026#34; in vrfid \u0026#34; \u0026amp; chr(124) \u0026amp; \u0026#34; ex 0x60000000\u0026#34; \u0026amp; chr(13) \u0026amp; \u0026#34;exit\u0026#34; \u0026amp; chr(13) crt.Screen.WaitForString \u0026#34;[ciscotac@CNP \u0026#34; \u0026amp; chr(126) \u0026amp; \u0026#34;]$ \u0026#34; crt.Screen.Send chr(13) crt.Sleep 5000 \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; sleep 5s WEnd End Sub Others # 就目前来说， 循环+send chr + wait chr 已经满足我的一些测试，后续再遇到其他的发现再添加。\n#### for 循环 For i = 1 To 10 Next ","date":"22 June 2021","externalUrl":null,"permalink":"/blog/securecrt-script/","section":"Blog","summary":"SecureCRT 本身提供一种录制脚本的功能，可以通过录制脚本得到一个示例， 然后在此基础进行更改， 得到自己想要的脚本。","title":"SecureCRT脚本","type":"blog"},{"content":"一直以来 SPAN 都是作为排查丢包问题很好用的 feature， 但是在 XR 低版本上存在很多的限制，比如只支持 local SPAN， 只能要求现场有人协助连个 PC，将流量 SPAN 到 PC 上进行抓包，现在从 XR 7.1.2 版本开始我们支持将 SPAN 的流量保存成一个文件，可以直接远程从设备上 copy 出来。\nSPAN Feature Support # ASR9k DNX SpitFire Local SPAN Supported-3.9.1 NCS5500: Supported-6.1.1 Being targetted for 7.2.1 Remote SPAN Supported-3.9.1 Sampled SPAN Supported-5.1.0 ERSPAN No NCS5500: Supported- 6.1.31 Supported-7.2.1 MPLS-ERSPAN PW-SPAN Supported- 4.0.1 Supported- 7.0.1 ( no support in 71x) No ACL Based Traffic Mirroring Supported-4.0.1 NCS5500: Supported-6.1.1NCS560: SupportedNCS540: Supported Supported SPAN to File 7.1.2 7.1.2 7.2.2 SPAN to File PCAPng No 7.3.1 No CloudSpan No No No 配置说明 # #### 不同版本或许有些许出入， 一切以CCO文档为准 monitor-session [span_name] ethernet destination file size [size] [buffer-type linear] interface [interface_name] monitor-session [span_name] ethernet [direction rx-only] port-level buffer type 有两种， Linear/Circular, 默认不配置是Circular。 Linear：一旦缓冲区已满，就不会记录更多数据包。 Circular：一旦缓冲区已满，开始覆盖存储数据包。 SPAN to File 提供了 1000-1000000 KB 的缓冲区范围。默认缓冲区大小设置为 1000 KB。 ### Start/stop packet capture 默认配置完以上的配置是不会自动开启capture的，需要额外命令start/stop monitor-session \u0026lt;name\u0026gt; packet-collection start monitor-session \u0026lt;name\u0026gt; packet-collection stop [ discard-data | write directory \u0026lt;dir\u0026gt; filename \u0026lt;filename\u0026gt; ] 如果添加discard-data选项，则简单地清除缓冲区，而如果write指定了该选项，则在清除之前将缓冲区写入磁盘。 官方文档\n示例 # IXIA ---Ten0/0/0/1--- NCS55A1---- Other Router IXIA 会持续发送100Mbps的穿越流量给NCS55, 100Mbps = 12.5MB/s RP/0/RP0/CPU0:NCS-55A2-12#monitor interface TenGigE0/0/0/0 TenGigE0/0/0/1 Sun Jun 6 05:54:07.887 UTC NCS-55A2-12 Monitor Time: 00:00:40 SysUptime: 75:42:59 Protocol:General Interface In(bps) Out(bps) InBytes/Delta OutBytes/Delta Te0/0/0/0 1000/ 0% 100.4M/ 1% 48.5M/0 37.3G/25.0M \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; Te0/0/0/1 99.6M/ 0% 0/ 0% 304.1G/24.8M 8.0G/170 Quit=\u0026#39;q\u0026#39;, Clear=\u0026#39;c\u0026#39;, Freeze=\u0026#39;f\u0026#39;, Thaw=\u0026#39;t\u0026#39;, Next set=\u0026#39;n\u0026#39;, Prev set=\u0026#39;p\u0026#39;, Bytes=\u0026#39;y\u0026#39;, Packets=\u0026#39;k\u0026#39; (General=\u0026#39;g\u0026#39;, IPv4 Uni=\u0026#39;4u\u0026#39;, IPv4 Multi=\u0026#39;4m\u0026#39;, IPv6 Uni=\u0026#39;6u\u0026#39;, IPv6 Multi=\u0026#39;6m\u0026#39;) RP/0/RP0/CPU0:NCS-55A2-12#show run monitor-session % Incomplete command. RP/0/RP0/CPU0:NCS-55A2-12#show run monitor-session span_to_file Sun Jun 6 06:06:37.404 UTC monitor-session span_to_file ethernet destination file size 1000000 ! RP/0/RP0/CPU0:NCS-55A2-12#show run int tenGigE 0/0/0/1 Sun Jun 6 06:06:50.713 UTC interface TenGigE0/0/0/1 cdp vrf GLOBAL ipv4 address 100.1.1.1 255.255.255.0 ipv6 address 2012::1/64 monitor-session span_to_file ethernet port-level ! load-interval 30 ! RP/0/RP0/CPU0:NCS-55A2-12#monitor-session span_to_file packet-collection start Sun Jun 6 05:51:48.480 UTC RP/0/RP0/CPU0:NCS-55A2-12#monitor-session span_to_file packet-collection stop write directory /misc/disk1 filename span_to_file Sun Jun 6 05:52:22.473 UTC \u0026lt;/misc/disk1\u0026gt; 为harddisk:, Ten0/0/0/1 属于板卡0/0/CPU0 ,所以文件会存储在node0_0_CPU0 中 [xr-vm_node0_RP0_CPU0:~]$cd /misc/disk1/node0_0_CPU0 [xr-vm_node0_RP0_CPU0:/misc/disk1/node0_0_CPU0]$ls -lh total 157M -rw-r--r--. 1 root root 157M Jun 6 05:52 span_to_file.pcap [xr-vm_node0_RP0_CPU0:/misc/disk1/node0_0_CPU0]$ 或者 RP/0/RP0/CPU0:NCS-55A2-12#dir harddisk:/node0_0_CPU0 Sun Jun 6 06:20:03.560 UTC Directory of harddisk:/node0_0_CPU0 783365 -rw-r--r--. 1 164039152 Jun 6 05:52 span_to_file.pcap 把文件从设备上 COPY 出来， 这里用了 SCP\nxuxing@XUXING-WT1:/mnt/c/Users/xuxing.CISCO/Desktop$ scp admin@10.122.166.235:/misc/disk1/node0_0_CPU0/span_to_file.pcap . Password: span_to_file.pcap 4% 7088KB 225.7KB/s 11:18 ETA span_to_file.pcap 注意 # 2021-06-06 测试发现， SPAN 采集了 34s， 理论上应该是 34X12.5=425MB 的流量被存储下来， 但是只生成的 157MB 的文件，是有些数据包没有被 dump 下来， 因为我使用的软件版本是测试版本，不确认这个情况为该 feature 的问题还是因为我这个测试版本不完善导致， 后续如果有时间再找个设备测试下。\n","date":"6 June 2021","externalUrl":null,"permalink":"/blog/ncs55-span-to-file/","section":"Blog","summary":"一直以来 SPAN 都是作为排查丢包问题很好用的 feature， 但是在 XR 低版本上存在很多的限制，比如只支持 local SPAN， 只能要求现场有人协助连个 PC，将流量 SPAN 到 PC 上进行抓包，现在从 XR 7.","title":"NCS55 SPAN to File(New Feature)","type":"blog"},{"content":"记录一下一个 Telemetry 的 demo，使用 pipeline+influxDB+Grafana，构建一个可视化监控。\npipeline: 用于采集设备的 telemetry 信息。 influxDB: 使用数据库的方式存储 telemetry 采集到的信息 Grafana: 将数据库采集的信息图像化输出. 安装与配置 # Pipeline: # 使用的是“bigmuddy-network-telemetry-pipeline”，bigmuddy-network-telemetry-pipeline 这个项目被存档了， 我 fork 了下， 所以可以使用以下的命令去 get 这个项目：\ngit clone https://github.com/xuxing3/bigmuddy-network-telemetry-pipeline.git\n配置文件如下：\n[root@xuxing239 bigmuddy-network-telemetry-pipeline]# grep -v ^# pipeline-influxdb.conf | grep -v ^$ [default] id = pipeline metamonitoring_prometheus_resource = /metrics metamonitoring_prometheus_server = :8989 [testbed] stage = xport_input type = tcp encap = st listen = :5432 \u0026lt;\u0026lt;\u0026lt;\u0026lt; 监听5432 端口， 可以更改 [inspector] stage = xport_output type = tap file = /opt/dump-xuxing.txt \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;采集到的 telemetry的数据存储的位置 datachanneldepth = 1000 [metrics_influx] stage = xport_output type = metrics file = metrics-nms.json \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; 将采集到telemetry 的信息使用该文件定义的格式， 格式化输出到influxdb dump = metrics-dump-xuxing.txt \u0026lt;\u0026lt;\u0026lt;\u0026lt; 格式化输出之前会dump一份数据存储在该文件中 output = influx influx = http://10.70.80.197:8086 \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; influxdb, 默认端口为8086 database = mdt_db \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; 定义infludb 那个数据库用于存储telemetry信息 metrics-nms.json 格式如下， 如何去定义这个 json 文件， 我目前能找到方法也只是参考 pipline 采集到数据自己去修改 json 文件。metrics 文件的意义在于翻译采集到的信息， 并导入数据库。\n[root@xuxing bigmuddy-network-telemetry-pipeline]# cat metrics-nms.json [ { \u0026#34;basepath\u0026#34; : \u0026#34;Cisco-IOS-XR-asr9k-np-oper:hardware-module-np/nodes/node/nps/np/counters\u0026#34;, \u0026#34;spec\u0026#34; : { \u0026#34;fields\u0026#34; : [ {\u0026#34;name\u0026#34;:\u0026#34;node-name\u0026#34;, \u0026#34;tag\u0026#34;: true}, \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; tag 为 true 是为了设置后续可以按照哪个参数去filter 数据 {\u0026#34;name\u0026#34;:\u0026#34;np-name\u0026#34;}, { \u0026#34;name\u0026#34;:\u0026#34;np-counter\u0026#34;, \u0026#34;fields\u0026#34; : [ {\u0026#34;name\u0026#34;:\u0026#34;counter-name\u0026#34;, \u0026#34;tag\u0026#34;: true}, \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; {\u0026#34;name\u0026#34;:\u0026#34;counter-value\u0026#34;}, {\u0026#34;name\u0026#34;:\u0026#34;rate\u0026#34;}, {\u0026#34;name\u0026#34;:\u0026#34;counter-type\u0026#34;}, {\u0026#34;name\u0026#34;:\u0026#34;counter-index\u0026#34;} ] } ] } } ] InfluxDB/Grafana # docker run -d -v grafana-storage:/var/lib/grafana -p 3000:3000 grafana/grafana:5.4.3 docker run -d --volume=/opt/influxdb:/data -p 8080:8083 -p 8086:8086 tutum/influxdb 这里使用 docker 的方式，run 起来后访问 http://:8080， 去修改一些 influxdb 的参数:\n创建 mdt_db database, 并修改 database 数据存储的时间 CREATE DATABASE \u0026#34;mdt_db\u0026#34; CREATE RETENTION POLICY \u0026#34;24h\u0026#34; ON \u0026#34;db_name\u0026#34; DURATION 1d REPLICATION 1 DEFAULT #1 day CREATE RETENTION POLICY \u0026#34;one_month\u0026#34; ON \u0026#34;mdt_db\u0026#34; DURATION 30d REPLICATION 1 DEFAULT # one_month 其他的一些常用命令: SHOW MEASUREMENTS select * from \u0026#34;\u0026#34; SHOW RETENTION POLICIES ON \u0026#34;mdt_db\u0026#34; InfluxDB 命令参考以下文章\nhttps://blog.csdn.net/daguanjia11/article/details/90666888\nGrafana 连接数据库 Telemetry 数据采集 # IOX 设备配置如下： # RP/0/RSP1/CPU0:ASR9906-B#show run telemetry model-driven Wed May 19 07:52:54.048 UTC telemetry model-driven destination-group xuxing vrf calo-mgmt address-family ipv4 10.70.80.197 port 5432 \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; encoding self-describing-gpb protocol tcp ! sensor-group xuxing sensor-path Cisco-IOS-XR-asr9k-np-oper:hardware-module-np/nodes/node/nps/np/counters/np-counter ! subscription xuxing sensor-group-id xuxing strict-timer sensor-group-id xuxing sample-interval 5000 destination-id xuxing source-interface MgmtEth0/RSP1/CPU0/0 Server 配置 # [root@xuxing bigmuddy-network-telemetry-pipeline]# ./bin/pipeline -log= -debug -config=pipeline-influxdb.conf INFO[2021-05-19 00:58:24.900661] Conductor says hello, loading config config=pipeline-influxdb.conf debug=true fluentd= logfile= maxthreads=12 tag=pipeline version=\u0026#34;v1.0.0(bigmuddy)\u0026#34; DEBU[2021-05-19 00:58:24.901561] Conductor processing section... name=conductor section=inspector tag=pipeline DEBU[2021-05-19 00:58:24.901576] Conductor processing section, type... name=conductor section=inspector tag=pipeline type=tap INFO[2021-05-19 00:58:24.901588] Conductor starting up section name=conductor section=inspector stage=\u0026#34;xport_output\u0026#34; tag=pipeline DEBU[2021-05-19 00:58:24.901619] Conductor processing section... name=conductor section=\u0026#34;metrics_influx\u0026#34; tag=pipeline DEBU[2021-05-19 00:58:24.901655] Conductor processing section, type... name=conductor section=\u0026#34;metrics_influx\u0026#34; tag=pipeline type=metrics INFO[2021-05-19 00:58:24.901665] Conductor starting up section name=conductor section=\u0026#34;metrics_influx\u0026#34; stage=\u0026#34;xport_output\u0026#34; tag=pipeline INFO[2021-05-19 00:58:24.901676] Metamonitoring: serving pipeline metrics to prometheus name=default resource=\u0026#34;/metrics\u0026#34; server=\u0026#34;:8989\u0026#34; tag=pipeline INFO[2021-05-19 00:58:24.901767] Starting up tap countonly=false filename=\u0026#34;/opt/dump-xuxing.txt\u0026#34; name=inspector streamSpec=\u0026amp;{2 \u0026lt;nil\u0026gt;} tag=pipeline CRYPT Client [metrics_influx],[http://10.70.80.197:8086] Enter username: admin Enter password: INFO[2021-05-19 00:58:28.195240] setup authentication authenticator=\u0026#34;http://10.70.80.197:8086\u0026#34; name=\u0026#34;metrics_influx\u0026#34; pem= tag=pipeline username=admin INFO[2021-05-19 00:58:28.195357] setup metrics collection basepath=\u0026#34;Cisco-IOS-XR-asr9k-np-oper:hardware-module-np/nodes/node/nps/np/counters\u0026#34; name=\u0026#34;metrics_influx\u0026#34; tag=pipeline DEBU[2021-05-19 00:58:28.195371] metrics export configured file=metrics-nms.json metricSpec={[{Cisco-IOS-XR-asr9k-np-oper:hardware-module-np/nodes/node/nps/np/counters 0xc420344e60}] map[Cisco-IOS-XR-asr9k-np-oper:hardware-module-np/nodes/node/nps/np/counters:0xc420344e60] 0xc420328bd0} name=\u0026#34;metrics_influx\u0026#34; output=influx tag=pipeline DEBU[2021-05-19 00:58:28.195429] Conductor processing section... name=conductor section=testbed tag=pipeline DEBU[2021-05-19 00:58:28.195452] Conductor processing section, type... name=conductor section=testbed tag=pipeline type=tcp INFO[2021-05-19 00:58:28.195466] Conductor starting up section name=conductor section=testbed stage=\u0026#34;xport_input\u0026#34; tag=pipeline Grafana 简单配置如下: # 其他优化 # 由于 telemetry 的数据过于庞大， 建议将 server 上的数据定期清空, 否则很容易占满磁盘\n[root@xuxing bigmuddy-network-telemetry-pipeline]# crontab -l */60 * * * * root echo \u0026#34;\u0026#34; \u0026gt; /opt/dump-xuxing.txt */60 * * * * root echo \u0026#34;\u0026#34; \u0026gt; /root/bigmuddy-network-telemetry-pipeline/metrics-dump-xuxing.txt_wkid0 [root@xuxing bigmuddy-network-telemetry-pipeline]# ","date":"19 May 2021","externalUrl":null,"permalink":"/blog/telemetry-demo/","section":"Blog","summary":"记录一下一个 Telemetry 的 demo，使用 pipeline+influxDB+Grafana，构建一个可视化监控。","title":"Telemetry Demo","type":"blog"},{"content":" TFTP # 开始前先关闭 firwalld 和 selinux ， 以防止无法访问或者无法上传文件报错。\n#systemctl stop firewalld #vim /etc/sysconfig/selinux SELINUX=disable \u0026lt;\u0026lt;\u0026lt;\u0026lt; 修改完成后重启主机 安装/配置 # 1.安装 #yum -y install tftp-server 2.查看tftp 状态， 没起来先把进程start [root@xuxing ~]# systemctl status tftp \u0026lt;\u0026lt;\u0026lt;\u0026lt; ● tftp.service - Tftp Server Loaded: loaded (/usr/lib/systemd/system/tftp.service; indirect; vendor preset: disabled) \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;配置文件 Active: inactive (dead) since Mon 2021-05-10 12:10:24 EDT; 14min ago Docs: man:in.tftpd Process: 2315 ExecStart=/usr/sbin/in.tftpd -s /home/tftpboot/ -c (code=exited, status=0/SUCCESS) Main PID: 2315 (code=exited, status=0/SUCCESS) May 10 11:55:24 localhost.localdomain systemd[1]: Started Tftp Server. May 10 11:55:24 localhost.localdomain systemd[1]: Starting Tftp Server.. 3.修改配置文件如下 [root@xuxing ~]# vim /usr/lib/systemd/system/tftp.service [Unit] Description=Tftp Server Requires=tftp.socket Documentation=man:in.tftpd [Service] ExecStart=/usr/sbin/in.tftpd -s /home/tftpboot/ -c \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; 设置tftp目录， -c 代表可创建文件 StandardInput=socket [Install] Also=tftp.socket 4.修改完成后重启进程 #systemctl daemon-reload #systemctl restart tftp 参考文章\nhttps://blog.csdn.net/shishui07/article/details/84980866\nFTP # FTP 找了一下配置的文章， 过于复杂， 索性直接使用 docker run 一个简单的 FTP server。\n开始前配置一个无法 login 的用户 guest\n#useradd -s /sbin/nologin guest #passwd guest 安装/配置 # [root@xuxing ~]# docker run -d -v /home/guest:/home/vsftpd \\ \u0026gt; -p 20:20 -p 21:21 -p 21100-21110:21100-21110 \\ \u0026gt; -e FTP_USER=guest -e FTP_PASS=guest \\ \u0026gt; -e PASV_ADDRESS=10.70.80.197 \\ \u0026gt; -e PASV_MIN_PORT=21100 -e PASV_MAX_PORT=21110 \\ \u0026gt; --name vsftpd --restart=always fauria/vsftpd -p 做宿主机端口映射 PASV_ADDRESS: 宿主机地址 参考文章\nhttps://www.hangge.com/blog/cache/detail_2449.html\n","date":"10 May 2021","externalUrl":null,"permalink":"/blog/centos7-tftp-ftp-server/","section":"Blog","summary":"TFTP # 开始前先关闭 firwalld 和 selinux ， 以防止无法访问或者无法上传文件报错。","title":"Centos7 搭建tftp/ftp Server","type":"blog"},{"content":"7.1.2开始支持这个feature， 默认功能是关闭的， 开启后自动将主引擎harddisk:/mirror/ 下的文件同步到备引擎。\n测试如下:\nRP/0/RSP0/CPU0:ASR-9006-L_NPE2#show mirror \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; default disable Sun Apr 25 03:40:36.544 UTC % Mirror is not enabled RP/0/RSP0/CPU0:ASR-9006-L_NPE2# RP/0/RSP0/CPU0:ASR-9006-L_NPE2# RP/0/RSP0/CPU0:ASR-9006-L_NPE2#conf Sun Apr 25 03:40:38.634 UTC RP/0/RSP0/CPU0:ASR-9006-L_NPE2(config)#mirror enable RP/0/RSP0/CPU0:ASR-9006-L_NPE2(config-mirror)#commit RP/0/RSP0/CPU0:ASR-9006-L_NPE2#show mirror Sun Apr 25 03:40:53.688 UTC MIRROR DIR: /harddisk:/mirror/ % Last sync of this dir ended at Sun Apr 25 03:40:43 2021 Location |Mirrored |Modification Time ------------------------------------------------ script-mgmt/|yes |Thu Apr 15 18:42:06 2021 RP/0/RSP0/CPU0:ASR-9006-L_NPE2#show run | file harddisk:/mirror/test_mirror.cfg Sun Apr 25 03:41:35.610 UTC Building configuration... [OK] RP/0/RSP0/CPU0:ASR-9006-L_NPE2#show mirror Sun Apr 25 03:41:38.621 UTC MIRROR DIR: /harddisk:/mirror/ % Last sync of this dir ended at Sun Apr 25 03:41:36 2021 Location |Mirrored |Modification Time ---------------------------------------------------- test_mirror.cfg |yes |Sun Apr 25 03:41:36 2021 script-mgmt/ |yes |Thu Apr 15 18:42:06 2021 RP/0/RSP0/CPU0:ASR-9006-L_NPE2#dir harddisk:/mirror/ location 0/rSP1/CPU0 Sun Apr 25 03:41:55.205 UTC Directory of harddisk:/mirror/ 652810 drwxr-xr-x. 7 4096 Apr 15 18:42 script-mgmt 652819 -rwxr--r--. 1 84943 Apr 25 03:41 test_mirror.cfg 23099260 kbytes total (18171220 kbytes free) RP/0/RSP0/CPU0:ASR-9006-L_NPE2# ","date":"25 April 2021","externalUrl":null,"permalink":"/blog/automatically-mirror-files-between-rps/","section":"Blog","summary":"7.1.2开始支持这个feature， 默认功能是关闭的， 开启后自动将主引擎harddisk:/mirror/ 下的文件同步到备引擎。","title":"Automatically mirror files between RPs","type":"blog"},{"content":" ","date":"25 April 2021","externalUrl":null,"permalink":"/blog/exr-architecture/","section":"Blog","summary":" ","title":"eXR Architecture","type":"blog"},{"content":"PAM（Platform Automated Monitoring），从 6.1.2 版本开始（64bit, not in 32bit）开始引入该功能， 并且默认情况下是自动启动，用于监视进程 crash，memory leak， CPU hog，traceback ， disk usage 等， 具体点就是当检测到某一事件时， 会自动采集一些信息并默认保存到 harddisk:/cisco_support 目录下， 供我们 troubleshooting, 这一功能是全自动的，目前没法手动配置，具体示例可以参考以下文档：\nPAM Events\n从 6.6.1 开始新引入一个 feature, on-demand EDCD(Event Driven CLI Database ), 结合 PAM 能实现两种功能\nPAM Schedule: 每间隔一段时间采集一些信息 PAM EEM Agent: 监控 syslog, 若符合条件 trigger 采集一些信息 EDCD Ondemand-Create # RP/0/RSP0/CPU0:ASR9910-B#edcd ondemand ? add-update Add or update ondemand EDCD entries add-update-trigger Add or update ondemand EDCD entries delete Delete ondemand EDCD entries delete-all Delete all EDCD entries trigger Trigger the collection of traces associated with given identifier //创建一个 command list, 示例如下:\nRP/0/RSP0/CPU0:ASR9910-B#edcd ondemand add-update identifier xuxing_test commands \u0026#34;show run;show plat;show install active su\u0026#34; Sun Apr 25 09:30:18.903 UTC Ondemand EDCD has been updated (execute \u0026#39;show edcd ondemand database\u0026#39; to verify.) RP/0/RSP0/CPU0:ASR9910-B# RP/0/RSP0/CPU0:ASR9910-B#show edcd ondemand database Sun Apr 25 09:30:58.713 UTC ============================================================ Identifier: xuxing_test ============================================================ 1: show run 2: show plat 3: show install active su ------------------------------------------------------------ //往已有的 command list 中新增一些命令的话， 使用如下的方法:\nRP/0/RSP0/CPU0:ASR9910-B#edcd ondemand add-update identifier xuxing_test commands \u0026#34;show clock\u0026#34; Sun Apr 25 09:41:01.362 UTC Ondemand EDCD has been updated (execute \u0026#39;show edcd ondemand database\u0026#39; to verify.) RP/0/RSP0/CPU0:ASR9910-B# RP/0/RSP0/CPU0:ASR9910-B#show edcd ondemand database Sun Apr 25 09:41:08.848 UTC ============================================================ Identifier: xuxing_test ============================================================ 1: show run 2: show plat 3: show install active su 4: show clock \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; ------------------------------------------------------------ RP/0/RSP0/CPU0:ASR9910-B# //admin cli 和 shell cli 同样是支持的:\nRP/0/RSP0/CPU0:ASR9910-B#edcd ondemand add-update identifier xuxing_test commands \u0026#34;admin show plat;run ng_show_version\u0026#34; Sun Apr 25 09:48:36.510 UTC Ondemand EDCD has been updated (execute \u0026#39;show edcd ondemand database\u0026#39; to verify.) RP/0/RSP0/CPU0:ASR9910-B#show edcd ondemand database Sun Apr 25 09:48:39.145 UTC ============================================================ Identifier: xuxing_test ============================================================ 1: show run 2: show plat 3: show install active su 4: admin show plat \u0026lt;\u0026lt;\u0026lt;\u0026lt; 5: run ng_show_version \u0026lt;\u0026lt;\u0026lt;\u0026lt; ------------------------------------------------------------ RP/0/RSP0/CPU0:ASR9910-B# EDCD Ondemand – Delete # 可以选择删除某个 command 或者删除整个 list:\nRP/0/RSP0/CPU0:ASR9910-B#edcd ondemand delete identifier xuxing_test ? commands Specify a list of commands that to be deleted (if missing all entries under this sub-pattern will be deleted) \u0026lt;cr\u0026gt; RP/0/RSP0/CPU0:ASR9910-B#edcd ondemand delete identifier xuxing_test commands \u0026#34;show clock\u0026#34; Sun Apr 25 09:43:31.815 UTC Ondemand EDCD has been updated (execute \u0026#39;show edcd ondemand database\u0026#39; to verify.) RP/0/RSP0/CPU0:ASR9910-B#show edcd ondemand database Sun Apr 25 09:43:34.277 UTC ============================================================ Identifier: xuxing_test ============================================================ 1: show run 2: show plat 3: show install active su ------------------------------------------------------------ EDCD Ondemand – Trigger # 如何测试 command lish 是否生效呢？可以使用以下命令:\nRP/0/RSP0/CPU0:ASR9910-B#edcd ondemand trigger identifier xuxing_test Sun Apr 25 09:49:43.479 UTC RP/0/RSP0/CPU0:ASR9910-B# RP/0/RSP0/CPU0:Apr 25 09:36:40.033 UTC: run_cmd[69017]: %INFRA-INFRA_MSG-5-RUN_LOGIN : User cisco logged into shell from vty0 RP/0/RSP0/CPU0:Apr 25 09:36:46.775 UTC: run_cmd[69017]: %INFRA-INFRA_MSG-5-RUN_LOGOUT : User cisco logged out of shell from vty0 RP/0/RSP0/CPU0:Apr 25 09:49:54.118 UTC: logger[67945]: %OS-SYSLOG-4-LOG_WARNING : PAM has completed on-demand data collection for xuxing_test. All files are archived and saved at 0/RSP0/CPU0 : harddisk:/cisco_support/PAM-asr9k-ondemand-xr-xuxing_test-2021Apr25-094953.tgz (Please copy tgz file out of the router and send to Cisco support. This tgz file will be removed after 14 days. 如上所示，系统会尝试一个 tar 文件\u0026quot;harddisk:/cisco_support/PAM-asr9k-ondemand-xr-xuxing_test-2021Apr25-094953.tgz\u0026quot;, 从设备中 copy 出来解压缩显示如下:\n]\nPAM Schedule # RP/0/RSP0/CPU0:ASR9910-B#edcd scheduler add-update cadence \u0026#39;*/10 * * * *\u0026#39; ? \u0026lt;\u0026lt;\u0026lt;\u0026lt; 两种方式， schedule command或者schedule之前配置好的command list command Command to be executed at the above cadence identifier An identifier linked to a list of CLIs (defined in ondemand EDCD) \u0026lt;cr\u0026gt; RP/0/RSP0/CPU0:ASR9910-B#edcd scheduler add-update cadence \u0026#39;*/10 * * * *\u0026#39; identifier xuxing_test Sun Apr 25 10:03:26.302 UTC Adding */10 * * * * root /pkg/bin/pam_is_active_rp \u0026amp;\u0026amp; /pkg/bin/edcd_cli.py ondemand --operation trigger -i xuxing_test Updating job file on remote RP The following job has been added successfully: */10 * * * * root /pkg/bin/pam_is_active_rp \u0026amp;\u0026amp; /pkg/bin/edcd_cli.py ondemand --operation trigger -i xuxing_test RP/0/RSP0/CPU0:ASR9910-B# RP/0/RSP0/CPU0:ASR9910-B#show edcd scheduler \u0026lt;\u0026lt;\u0026lt;\u0026lt; 查看已有的scheduler Sun Apr 25 10:03:33.842 UTC \u0026lt;Job ID\u0026gt;: \u0026lt;job content\u0026gt; 1: */10 * * * * root /pkg/bin/pam_is_active_rp \u0026amp;\u0026amp; /pkg/bin/edcd_cli.py ondemand --operation trigger -i xuxing_test RP/0/RSP0/CPU0:ASR9910-B# \u0026lsquo;*/10 * * * *\u0026rsquo;， 代表每隔 10 分钟执行一次， 这里的参数如何设置可以参考 Linux crontab 介绍:\nLinux crontab\n如何删除该 schedule:\nRP/0/RSP0/CPU0:ASR9910-B#edcd scheduler delete job-id 1 \u0026lt;\u0026lt;\u0026lt;\u0026lt; 使用job id 删除，job-id通过“show edcd scheduler”获得 Sun Apr 25 10:08:42.937 UTC The following job has been deleted: */10 * * * * root /pkg/bin/pam_is_active_rp \u0026amp;\u0026amp; /pkg/bin/edcd_cli.py ondemand --operation trigger -i xuxing_test Updating job file on remote RP RP/0/RSP0/CPU0:ASR9910-B# PAM EEM # ","date":"25 April 2021","externalUrl":null,"permalink":"/blog/new-feature-for-pam/","section":"Blog","summary":"PAM（Platform Automated Monitoring），从 6.","title":"New feature for PAM(64bit IOS XR)","type":"blog"},{"content":"最近测试了 SRv6,顺便记录下， SRv6 具体是什么？对比我们平常的 MPLS VPN 的网络，数据转发采用的 MPLS 标签， 那 MPLS 标签常见的可以是 LDP 或者 SR 分配的； SRv6 使用的 IPv6 的报头进行转发，在 IPv6 Header 中新增 SRH(Segment Routing Header)用来记录 128bit IPv6 地址格式的 SRv6 SID（segment ID）如下图所示：\nRFC2460\n上面所说的为 Base format 的 SRv6 报文， 还有一种 Micro-segment 格式的报文。两种封装的区别如下。\nMicro-segment 采用的是 32bit + 16bit 的形式，所以它的 locator 是/48 位。\nBase- format 的 locator 是/64 位\nSRv6 Segment # Locator # 128Bit 的 IPv6 SID 由两部分组成， 其中前 64bit/48bit 为 Locator。\nBase- forma 的 tLocator 的前 40Bit 必须在 SRv6 domain 中一致；余下的 24bit 为 node-id， 用于表示 node，不能为 0 且 SRv6 域内 node-id 不能一致。\n##### Base- format segment-routing srv6 locators locator r7 prefix 2002:0:0:7::/64 \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; ##### uSID locators locator MAIN micro-segment behavior unode psp-usd. \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; prefix fcbb:bb00:1::/48 在 NCS55 平台中有两种 profile， 用来切换这两种封装， 每次更换封装都需要重启板卡。\nhw-module profile segment-routing srv6 mode base\nhw-module profile segment-routing srv6 mode micro-segment format f3216\n在 771 版本引入了双模式“hw-module profile segment-routing srv6 mode base-and-micro-segment-f3216 ”\n7.10.1 默认设备为双模式， 不需要添加配置。\n使用 diagshell 命令可以 get 到芯片目前设置的是什么模式，\n`show controllers fia diagshell 0 \u0026ldquo;config show\u0026rdquo; location 0/0/CPU0 | i srv6”`\ncustom_feature_srv6_enable. \u0026#34;3\u0026#34; means base mode \u0026#39;5\u0026#39; means dual mode ps: usid忘记是什么了, 想起来再更改。 ASR9K 只需要更改配置即可在这两个模式间切换， 不需要额外的 hw-module profile 命令\nFunction(uSid) # 简单记录下 Function 的一些类别:\nRP/0/RP0/CPU0:r1#show segment-routing srv6 sid Wed Apr 21 04:36:25.814 UTC *** Locator: \u0026#39;MAIN\u0026#39; *** SID Behavior Context Owner State RW -------------------------- ---------------- ------------------------------ ------------------ ----- -- fcbb:bb00:1:: uN (PSP/USD) \u0026#39;default\u0026#39;:1 sidmgr InUse Y fcbb:bb00:1:e000:: uA (PSP/USD) [Gi0/0/0/0, Link-Local]:0 isis-1 InUse Y fcbb:bb00:1:e001:: uA (PSP/USD) [Gi0/0/0/1, Link-Local]:0 isis-1 InUse Y fcbb:bb00:1:e002:: uDT4 \u0026#39;1\u0026#39; bgp-1 InUse Y fcbb:bb00:1:e003:: uDT6 \u0026#39;1\u0026#39; bgp-1 InUse Y RP/0/RP0/CPU0:r1#show segment-routing srv6 locator MAIN detail Wed Nov 1 11:19:33.069 UTC Name ID Algo Prefix Status Flags -------------------- ------- ---- ------------------------ ------- -------- MAIN 1 0 fcbb:bb00:1::/48 Up U (U): Micro-segment (behavior: uN (PSP/USD)). \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; Interface: Name: srv6-MAIN IFH : 0x00000014 IPv6 address: fcbb:bb00:1::/48 Number of SIDs: 3 Created: Nov 1 11:05:24.107 (00:14:09 ago) Topo # Configuration # Locator # //R1 RP/0/RP0/CPU0:r1#show run segment-routing Wed Apr 21 04:51:26.026 UTC segment-routing srv6 encapsulation source-address 2001::1 ! locators locator MAIN micro-segment behavior unode psp-usd prefix fcbb:bb00:1::/48 ! ! ! ! ISIS # 控制层面 ISIS 的意义在于将 Locator 通告出去。\nRP/0/RP0/CPU0:r1#show run router isis Wed Apr 21 04:52:23.675 UTC router isis 1 is-type level-2-only net 49.0000.0000.0001.00 address-family ipv6 unicast metric-style wide segment-routing srv6 \u0026lt;\u0026lt;\u0026lt;\u0026lt; locator MAIN \u0026lt;\u0026lt;\u0026lt;\u0026lt; ! ! ! interface Loopback0 address-family ipv6 unicast ! ! interface GigabitEthernet0/0/0/0 point-to-point address-family ipv6 unicast ! ! interface GigabitEthernet0/0/0/1 point-to-point address-family ipv6 unicast ! ! ! RP/0/RP0/CPU0:r1#show route ipv6 isis Wed Apr 21 04:47:31.557 UTC i L2 2001::2/128 [115/20] via fe80::250:56ff:feaa:71fd, 6d11h, GigabitEthernet0/0/0/0 i L2 2001::3/128 [115/30] via fe80::250:56ff:feaa:71fd, 6d11h, GigabitEthernet0/0/0/0 i L2 2001::4/128 [115/30] via fe80::250:56ff:feaa:6632, 6d11h, GigabitEthernet0/0/0/1 i L2 2001::5/128 [115/20] via fe80::250:56ff:feaa:6632, 6d11h, GigabitEthernet0/0/0/1 i L2 2001:0:0:23::/64 [115/20] via fe80::250:56ff:feaa:71fd, 6d11h, GigabitEthernet0/0/0/0 i L2 2001:0:0:34::/64 [115/30] via fe80::250:56ff:feaa:6632, 6d11h, GigabitEthernet0/0/0/1 [115/30] via fe80::250:56ff:feaa:71fd, 6d11h, GigabitEthernet0/0/0/0 i L2 2001:0:0:45::/64 [115/20] via fe80::250:56ff:feaa:6632, 6d11h, GigabitEthernet0/0/0/1 i L2 fcbb:bb00:2::/48 [115/11] via fe80::250:56ff:feaa:71fd, 6d11h, GigabitEthernet0/0/0/0 i L2 fcbb:bb00:3::/48 [115/21] via fe80::250:56ff:feaa:71fd, 6d11h, GigabitEthernet0/0/0/0 i L2 fcbb:bb00:4::/48 [115/21] via fe80::250:56ff:feaa:6632, 6d11h, GigabitEthernet0/0/0/1 i L2 fcbb:bb00:5::/48 [115/11] via fe80::250:56ff:feaa:6632, 6d11h, GigabitEthernet0/0/0/1 BGP # RP/0/RP0/CPU0:r1#show run router bgp Wed Apr 21 04:54:58.113 UTC router bgp 1 bgp router-id 1.1.1.1 address-family vpnv4 unicast ! address-family vpnv6 unicast ! neighbor 2001::3 remote-as 1 update-source Loopback0 address-family vpnv4 unicast ! address-family vpnv6 unicast ! ! vrf 1 rd 1:1 address-family ipv4 unicast \u0026lt;\u0026lt;\u0026lt;\u0026lt; SRv6 IPv4 L3VPN service , support from XR 6.6.x segment-routing srv6 locator MAIN alloc mode per-vrf ! redistribute connected ! address-family ipv6 unicast \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; SRv6 IPv6 L3VPN service , support from XR 7.3.1 segment-routing srv6 locator MAIN alloc mode per-vrf ! redistribute connected ! neighbor 10.1.6.6 remote-as 6 address-family ipv4 unicast route-policy PASS in route-policy PASS out ! ! ! ! RP/0/RP0/CPU0:r1#show cef vrf 1 7.7.7.7/32 detail Wed Apr 21 05:18:48.299 UTC 7.7.7.7/32, version 24, SRv6 Headend, internal 0x5000001 0x30 (ptr 0xd3ab658) [1], 0x0 (0xe607840), 0x0 (0xf636408) Updated Apr 14 17:20:16.295 Prefix Len 32, traffic index 0, precedence n/a, priority 3 gateway array (0xf7740a8) reference count 2, flags 0x10, source rib (7), 0 backups [3 type 3 flags 0x8441 (0xe522968) ext 0x0 (0x0)] LW-LDI[type=3, refc=1, ptr=0xe607840, sh-ldi=0xe522968] gateway array update type-time 1 Apr 14 17:20:16.295 LDI Update time Apr 14 17:20:16.367 LW-LDI-TS Apr 14 17:20:16.367 Level 1 - Load distribution: 0 [0] via fcbb:bb00:3::/128, recursive via fcbb:bb00:3::/128, 5 dependencies, recursive [flags 0x6000] path-idx 0 NHID 0x0 [0xe20b890 0x0] next hop VRF - \u0026#39;default\u0026#39;, table - 0xe0800000 next hop fcbb:bb00:3::/128 via fcbb:bb00:3::/48 SRv6 H.Encaps.Red SID-list {fcbb:bb00:3:e002::} Load distribution: 0 (refcount 3) Hash OK Interface Address 0 Y GigabitEthernet0/0/0/0 remote RP/0/RP0/CPU0:r1# RP/0/RP0/CPU0:r3#show segment-routing srv6 sid \u0026lt;\u0026lt;\u0026lt;\u0026lt; R3 sid allocate Wed Apr 21 05:25:05.037 UTC *** Locator: \u0026#39;MAIN\u0026#39; *** SID Behavior Context Owner State RW -------------------------- ---------------- ------------------------------ ------------------ ----- -- fcbb:bb00:3:: uN (PSP/USD) \u0026#39;default\u0026#39;:3 sidmgr InUse Y fcbb:bb00:3:e000:: uA (PSP/USD) [Gi0/0/0/0, Link-Local]:0 isis-1 InUse Y fcbb:bb00:3:e001:: uA (PSP/USD) [Gi0/0/0/1, Link-Local]:0 isis-1 InUse Y fcbb:bb00:3:e002:: uDT4 \u0026#39;1\u0026#39; bgp-1 InUse Y fcbb:bb00:3:e003:: uDT6 \u0026#39;1\u0026#39; bgp-1 InUse Y RP/0/RP0/CPU0:r3# RP/0/RP0/CPU0:r1#show bgp vrf 1 ipv4 unicast 7.7.7.7/32 detail Wed Apr 21 05:25:46.271 UTC BGP routing table entry for 7.7.7.7/32, Route Distinguisher: 1:1 Versions: Process bRIB/RIB SendTblVer Speaker 27 27 Flags: 0x00041001+0x00000000; Last Modified: Apr 14 17:20:16.575 for 6d12h Paths: (1 available, best #1) Advertised to CE peers (in unique update groups): 10.1.6.6 Path #1: Received by speaker 0 Flags: 0x2000000085060005, import: 0x9f Advertised to CE peers (in unique update groups): 10.1.6.6 7 2001::3 (metric 30) from 2001::3 (3.3.3.3), if-handle 0x00000000 Received Label 0xe00200 Origin incomplete, metric 0, localpref 100, valid, internal, best, group-best, import-candidate, imported Received Path ID 0, Local Path ID 1, version 27 Extended community: RT:1:1 PSID-Type:L3, SubTLV Count:1, R:0x00, SubTLV: T:1(Sid information), Sid:fcbb:bb00:3::, F:0x00, R2:0x00, Behavior:63, R3:0x00, SS-TLV Count:1 SubSubTLV: T:1(Sid structure): Length [Loc-blk,Loc-node,Func,Arg]:[32,16,16,0], Tpose-len:16, Tpose-offset:48 Source AFI: VPNv4 Unicast, Source VRF: 1, Source Route Distinguisher: 1:1 RP/0/RP0/CPU0:r1# RP/0/RP0/CPU0:r1#show bgp vrf 1 ipv6 unicast 3333::1/128 detail Wed Apr 21 05:26:33.662 UTC BGP routing table entry for 3333::1/128, Route Distinguisher: 1:1 Versions: Process bRIB/RIB SendTblVer Speaker 8 8 Flags: 0x00041001+0x00000000; Last Modified: Apr 14 17:24:01.575 for 6d12h Paths: (1 available, best #1) Not advertised to any peer Path #1: Received by speaker 0 Flags: 0x2000000085060005, import: 0x9f Not advertised to any peer Local 2001::3 (metric 30) from 2001::3 (3.3.3.3), if-handle 0x00000000 Received Label 0xe00300 Origin incomplete, metric 0, localpref 100, valid, internal, best, group-best, import-candidate, imported Received Path ID 0, Local Path ID 1, version 8 Extended community: RT:1:1 PSID-Type:L3, SubTLV Count:1, R:0x00, SubTLV: T:1(Sid information), Sid:fcbb:bb00:3::, F:0x00, R2:0x00, Behavior:62, R3:0x00, SS-TLV Count:1 SubSubTLV: T:1(Sid structure): Length [Loc-blk,Loc-node,Func,Arg]:[32,16,16,0], Tpose-len:16, Tpose-offset:48 Source AFI: VPNv6 Unicast, Source VRF: 1, Source Route Distinguisher: 1:1 RP/0/RP0/CPU0:r1# RP/0/RP0/CPU0:r1#show cef vrf 1 ipv6 3333::1/128 detail Wed Apr 21 05:32:37.066 UTC 3333::1/128, version 3, SRv6 Headend, internal 0x5000001 0x30 (ptr 0xe209668) [1], 0x0 (0xe3a1e28), 0x0 (0xf636498) Updated Apr 14 17:24:01.188 Prefix Len 128, traffic index 0, precedence n/a, priority 3 gateway array (0xe20fda8) reference count 1, flags 0x10, source rib (7), 0 backups [2 type 3 flags 0x8441 (0xe2bce38) ext 0x0 (0x0)] LW-LDI[type=3, refc=1, ptr=0xe3a1e28, sh-ldi=0xe2bce38] gateway array update type-time 1 Apr 14 17:24:01.189 LDI Update time Apr 14 17:24:01.190 LW-LDI-TS Apr 14 17:24:01.190 Level 1 - Load distribution: 0 [0] via fcbb:bb00:3::/128, recursive via fcbb:bb00:3::/128, 5 dependencies, recursive [flags 0x6000] path-idx 0 NHID 0x0 [0xe20b890 0x0] next hop VRF - \u0026#39;default\u0026#39;, table - 0xe0800000 next hop fcbb:bb00:3::/128 via fcbb:bb00:3::/48 SRv6 H.Encaps.Red SID-list {fcbb:bb00:3:e003::} Load distribution: 0 (refcount 2) Hash OK Interface Address 0 Y GigabitEthernet0/0/0/0 remote RP/0/RP0/CPU0:r1# ","date":"21 April 2021","externalUrl":null,"permalink":"/blog/srv6/","section":"Blog","summary":"最近测试了 SRv6,顺便记录下， SRv6 具体是什么？对比我们平常的 MPLS VPN 的网络，数据转发采用的 MPLS 标签， 那 MPLS 标签常见的可以是 LDP 或者 SR 分配的； SRv6 使用的 IPv6 的报头进行转发，在 IPv6 Header 中新增 SRH(Segment Routing Header)用来记录 128bit IPv6 地址格式的 SRv6 SID（segment ID）如下图所示：","title":"SRv6 simple configuration example(uSID)","type":"blog"},{"content":"# VMDK–\u0026gt;qcow2: qemu-img convert -f vmdk -O qcow2 source-name.vmdk target-name.img # qcow2–\u0026gt;raw: qemu-img convert -O qcow2 source-name.raw target-name.qcow ","date":"13 April 2021","externalUrl":null,"permalink":"/blog/vmdk-to-qcow2/","section":"Blog","summary":"# VMDK–\u0026gt;qcow2: qemu-img convert -f vmdk -O qcow2 source-name.","title":"VMDK格式的镜像转成qcow2","type":"blog"},{"content":"ANX(Advanced NETCONF Explorer) 是一个 cisco 开源软件， 发布如下 github 上，能帮助我们快速的查找一些 sensor path， 做一些 telemetry 的实验， 具体的安装步骤可参考 github 主页。\nhttps://github.com/cisco-ie/anx\n安装 # [root@xuxing239 ~]# git clone https://github.com/cisco-ie/anx [root@xuxing239 ~]# cd anx/ [root@xuxing239 anx]# docker build -t netconf-explorer . [root@xuxing239 anx]# docker run --name netconf-exlorer -d -p 9269:8080 netconf-explorer [root@xuxing239 anx]# docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 34cd21044420 netconf-explorer \u0026#34;/usr/share/jetty9/b…\u0026#34; 3 days ago Up 3 days 0.0.0.0:9269-\u0026gt;8080/tcp netconf-exlorer [root@xuxing239 anx]# 安装完成后浏览器访问 server 的 9269 端口即可。\n连接设备 # 这里使用 IOS XR 设备做演示， 首先 IOS XR 设备上需要配置相应的 ssh netconf 配置， 使用 ssh 用户名密码登录 IOS XR 设备。\nNCS5501: ssh server v2 ssh server netconf vrf default RP/0/RP0/CPU0:R2-5501#show run netconf-yang agent Thu Oct 31 04:24:33.798 UTC netconf-yang agent ssh RP/0/RP0/CPU0:R2-5501#show run netconf Thu Oct 31 04:24:22.880 UTC netconf agent tty 如何快速获得 sensor path # 如下， 采取关键字搜索：\n如何快速的 get 到该 sensor path 下的数据呢,我们需要使用 NETCONF console 的工具:\nTelemetry 其他测试 # Telemetry 分为两种模式 Dial-Out/Dial-In， 之前文章 Telemetry simple configuration in Cisco XR devices 介绍了 Dial-Out 的模式， 设备按一定的频率 pull 数据到 server， 以下是一个 Dial-in 的配置案例：(server 只去订阅自己感兴趣的数据)\nRP/0/RP0/CPU0:NCS5516-B#show run telemetry model-driven telemetry model-driven sensor-group cpu sensor-path Cisco-IOS-XR-wdsysmon-fd-oper:system-monitoring/cpu-utilization ! RP/0/RP0/CPU0:NCS5516-B#show run grpc grpc port 57999 no-tls ! 当你订阅 cpu 相关信息后， ANX 会自动往路由推送如下配置, 该配置会在你关闭采集窗口后自动 remove 掉。\nRP/0/RP0/CPU0:NCS5516-B#show configuration commit changes last 1 Building configuration... !! IOS XR Configuration 7.0.2 grpc ! telemetry model-driven subscription anx-1617013486397 sensor-group-id cpu sample-interval 15000 ! ! end Refe:\nhttps://www.cisco.com/c/en/us/td/docs/routers/asr9000/software/asr9k-r6-5/telemetry/configuration/guide/b-telemetry-cg-asr9000-65x/b-telemetry-cg-asr9000-65x_chapter_010.html#id_36262\nBRKSPG-2503\n","date":"29 March 2021","externalUrl":null,"permalink":"/blog/anx-a-tools-to-help-test-telemetry/","section":"Blog","summary":"ANX(Advanced NETCONF Explorer) 是一个 cisco 开源软件， 发布如下 github 上，能帮助我们快速的查找一些 sensor path， 做一些 telemetry 的实验， 具体的安装步骤可参考 github 主页。","title":"ANX-a tool to test telemetry","type":"blog"},{"content":"一个简单的从 global rib 往 vrf 内 leak 路由的配置案例.\nRP/0/0/CPU0:PE4#show run vrf A Sun Mar 28 16:35:18.881 UTC vrf A address-family ipv4 unicast import from default-vrf route-policy test advertise-as-vpn \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; import route-target 1:1 ! export route-target 1:1 ! ! ! RP/0/0/CPU0:PE4# RP/0/0/CPU0:PE4# RP/0/0/CPU0:PE4#show run route-policy test Sun Mar 28 16:35:28.070 UTC route-policy test if destination in test then pass else drop endif end-policy ! RP/0/0/CPU0:PE4# RP/0/0/CPU0:PE4#show run prefix-set test Sun Mar 28 16:35:34.210 UTC prefix-set test 11.11.11.11/32 end-set ! RP/0/0/CPU0:PE4# 如图 PE4 从 CE 测收到 11.11.11.11/32 的路由放入 default vrf 下， 然后 leak 到 vrf A 中， 若需要将此 leak 的路由通过 vpnv4 邻居通告给其他路由器如 P1，需要在 import vrf 的时候加“advertise-as-vpn” 关键字.\nRP/0/0/CPU0:PE4#show bgp ipv4 unicast 11.11.11.11/32 Sun Mar 28 16:41:10.876 UTC BGP routing table entry for 11.11.11.11/32 Versions: Process bRIB/RIB SendTblVer Speaker 9 9 Last Modified: Mar 26 10:52:55.657 for 2d05h Paths: (1 available, best #1) Not advertised to any peer Path #1: Received by speaker 0 Not advertised to any peer 10 10.1.12.2 from 10.1.12.2 (192.168.0.10) Origin IGP, metric 0, localpref 100, valid, external, best, group-best, import-candidate Received Path ID 0, Local Path ID 1, version 9 Origin-AS validity: (disabled) RP/0/0/CPU0:PE4# RP/0/0/CPU0:PE4#show bgp vrf A ipv4 unicast 11.11.11.11/32 Sun Mar 28 16:42:44.220 UTC BGP routing table entry for 11.11.11.11/32, Route Distinguisher: 1:2 Versions: Process bRIB/RIB SendTblVer Speaker 52 52 Local Label: 24012 Last Modified: Mar 26 11:06:14.657 for 2d05h Paths: (1 available, best #1) Not advertised to any peer Path #1: Received by speaker 0 Not advertised to any peer 10 10.1.12.2 from 10.1.12.2 (192.168.0.10) Origin IGP, metric 0, localpref 100, valid, external, best, group-best, import-candidate, imported Received Path ID 0, Local Path ID 1, version 52 Extended community: RT:1:1 Origin-AS validity: (disabled) Source AFI: IPv4 Unicast, Source VRF: default, Source Route Distinguisher: 0:0:0 RP/0/0/CPU0:PE4# Other Way import prefix # Community # route-policy dyna-route-leak-comm-9-x if community matches-every (65008:9) then pass endif end-policy vrf vrf2 address-family ipv4 unicast import from default-vrf route-policy dyna-route-leak-comm-9-x import route-target 1:2 As-path/prefix # route-policy dyna-route-leak-aspath-prefix-10-x if as-path originates-from \u0026#39;65008\u0026#39; and destination in (10.0.0.0/24) then pass endif end-policy ! vrf vrf3 address-family ipv4 unicast import from default-vrf route-policy dyna-route-leak-aspath-prefix-10-x import route-target 1:3 Refer:\nhttps://learningnetwork.cisco.com/s/question/0D53i00000KstGr/ios-xr-leaking-the-routes-between-vrf-and-global-rib\nhttps://community.cisco.com/t5/service-providers-documents/cisco-bgp-dynamic-route-leaking-feature-interaction-with-juniper/ta-p/3139676\n","date":"28 March 2021","externalUrl":null,"permalink":"/blog/ios-xr-leaking-the-routes-between-vrf-and-global-rib/","section":"Blog","summary":"一个简单的从 global rib 往 vrf 内 leak 路由的配置案例.","title":"IOS XR / Leaking the routes between VRF and global RIB","type":"blog"},{"content":" Normal monitor session # RP/0/RP0/CPU0:NCS55A2-A#show run int tenGigE 0/0/0/0 Mon Mar 15 10:15:55.008 UTC interface TenGigE0/0/0/0 mtu 9000 ipv6 address 2000:0:0:1::1/64 monitor-session mon1 ethernet direction rx-only port-level ! RP/0/RP0/CPU0:NCS55A2-A# RP/0/RP0/CPU0:NCS55A2-A#show run monitor-session mon1 Mon Mar 15 10:16:00.046 UTC monitor-session mon1 ethernet destination interface TenGigE0/0/0/11 ! ACL base monitor session # RP/0/RP0/CPU0:NCS55A2-A#show run | in hw Mon Mar 15 10:16:11.623 UTC Building configuration... hw-module profile tcam format access-list ipv6 src-addr src-port dst-addr next-hdr enable-capture \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; Need reload RP/0/RP0/CPU0:NCS55A2-A#show run int tenGigE 0/0/0/0 Mon Mar 15 10:15:55.008 UTC interface TenGigE0/0/0/0 mtu 9000 ipv6 address 2000:0:0:1::1/64 monitor-session mon1 ethernet direction rx-only port-level acl ! load-interval 30 ipv6 access-group xuxing ingress ! RP/0/RP0/CPU0:NCS55A2-A# RP/0/RP0/CPU0:NCS55A2-A#show run monitor-session mon1 Mon Mar 15 10:16:00.046 UTC monitor-session mon1 ethernet destination interface TenGigE0/0/0/11 ! RP/0/RP0/CPU0:NCS55A2-A#show run ipv6 access-list xuxing Mon Mar 15 10:16:06.058 UTC ipv6 access-list xuxing 10 permit ipv6 host 2000:0:0:1::2 host 2222::2 capture \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; packet hit this ACE will monitor 20 permit ipv6 any any ! RP/0/RP0/CPU0:NCS55A2-A# ","date":"15 March 2021","externalUrl":null,"permalink":"/blog/ncs55-monitor-session/","section":"Blog","summary":"Normal monitor session # RP/0/RP0/CPU0:NCS55A2-A#show run int tenGigE 0/0/0/0 Mon Mar 15 10:15:55.","title":"NCS55 Monitor-session","type":"blog"},{"content":" ESI # ESI 主要用来标识 CE， 相同 CE 使用一样的 ESI.\nEVPN 技术为 PE 与某一 CE 的连接定义唯一的标识 ESI（Ethernet Segment Identifier），连接同一 CE 的多个 PE 上的 ESI 值是相同，连接不同 CE 的 ESI 值不同。PE 之间进行路由传播时，路由中会携带 ESI 值使 PE 间可以感知到连接同一 CE 的其他 PE 设备。\nESI 共 10 字节， 1 字节的 type， 9 字节 vlaue。\n配置案例：\nRP/0/RSP0/CPU0:9001-2-PE4#show run evpn Thu Mar 11 07:36:12.984 UTC evpn interface Bundle-Ether100 ethernet-segment identifier type 0 11.11.11.11.11.11.11.11.11 \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;MHD 多个PE上要配置相同的ESI，RT也需要配置一样（RT-4 通告用来发现MHD的peer PE， RT用来限制导入） bgp route-target 1111.1111.1111 ! ! ! EVPN BGP Route-Type # Route-type 2: MAC Advertisement # 格式如下：\n//COMMAND #show l2vpn forwarding bridge-domain 100:300 mac-address location 0/0/CPU0 #show evpn evi vpn-id 300 mac #show bgp l2vpn evpn rd 10.1.1.1:300 route-type 2 #show bgp l2vpn evpn rd 10.1.1.1:300 [2][0][48][0011.0100.0001][0]/104 #show l2route evpn mac all detail RP/0/RSP0/CPU0:ASR9901-3-PE1# show l2vpn forwarding bridge-domain 100:300 mac-address location 0/0/CPU0 Thu Jun 25 13:30:57.226 GMT+8 To Resynchronize MAC table from the Network Processors, use the command... l2vpn resynchronize forwarding mac-address-table location \u0026lt;r/s/i\u0026gt; Mac Address Type Learned from/Filtered on LC learned Resync Age/Last Change Mapped to -------------- ------- --------------------------- ---------- ---------------------- -------------- 0012.0100.0001 EVPN BD id: 0 N/A N/A N/A 0012.0100.0002 EVPN BD id: 0 N/A N/A N/A 0012.0100.0003 EVPN BD id: 0 N/A N/A N/A 0012.0100.0004 EVPN BD id: 0 N/A N/A N/A 0012.0100.0005 EVPN BD id: 0 N/A N/A N/A 0012.0100.0006 EVPN BD id: 0 N/A N/A N/A 0012.0100.0007 EVPN BD id: 0 N/A N/A N/A 0012.0100.0008 EVPN BD id: 0 N/A N/A N/A 0012.0100.0009 EVPN BD id: 0 N/A N/A N/A 0012.0100.000a EVPN BD id: 0 N/A N/A N/A 0011.0100.0001 dynamic BE100.33 N/A 25 Jun 13:28:27 N/A 0011.0100.0002 dynamic BE100.33 N/A 25 Jun 13:28:27 N/A 0011.0100.0003 dynamic BE100.33 N/A 25 Jun 13:28:27 N/A 0011.0100.0004 dynamic BE100.33 N/A 25 Jun 13:27:57 N/A 0011.0100.0005 dynamic BE100.33 N/A 25 Jun 13:28:27 N/A 0011.0100.0006 dynamic BE100.33 N/A 25 Jun 13:28:27 N/A 0011.0100.0007 dynamic BE100.33 N/A 25 Jun 13:28:27 N/A 0011.0100.0008 dynamic BE100.33 N/A 25 Jun 13:28:27 N/A 0011.0100.0009 dynamic BE100.33 N/A 25 Jun 13:28:27 N/A 0011.0100.000a dynamic BE100.33 N/A 25 Jun 13:28:27 N/A 005f.8603.6401 dynamic BE100.33 N/A 25 Jun 13:28:27 N/A RP/0/RSP0/CPU0:ASR9901-3-PE1# RP/0/RSP0/CPU0:ASR9901-3-PE1#show evpn evi vpn-id 300 mac Thu Jun 25 13:31:22.199 GMT+8 VPN-ID Encap MAC address IP address Nexthop Label ---------- ------ -------------- ---------------------------------------- --------------------------------------- -------- 300 MPLS 0011.0100.0001 :: Bundle-Ether100.33 24000 300 MPLS 0011.0100.0002 :: Bundle-Ether100.33 24000 300 MPLS 0011.0100.0003 :: Bundle-Ether100.33 24000 300 MPLS 0011.0100.0004 :: Bundle-Ether100.33 24000 300 MPLS 0011.0100.0005 :: Bundle-Ether100.33 24000 300 MPLS 0011.0100.0006 :: Bundle-Ether100.33 24000 300 MPLS 0011.0100.0007 :: Bundle-Ether100.33 24000 300 MPLS 0011.0100.0008 :: Bundle-Ether100.33 24000 300 MPLS 0011.0100.0009 :: Bundle-Ether100.33 24000 300 MPLS 0011.0100.000a :: Bundle-Ether100.33 24000 300 MPLS 0012.0100.0001 :: 10.1.3.3 24001 300 MPLS 0012.0100.0001 :: 10.1.4.4 24007 300 MPLS 0012.0100.0002 :: 10.1.3.3 24001 300 MPLS 0012.0100.0002 :: 10.1.4.4 24007 300 MPLS 0012.0100.0003 :: 10.1.3.3 24001 300 MPLS 0012.0100.0003 :: 10.1.4.4 24007 300 MPLS 0012.0100.0004 :: 10.1.3.3 24001 300 MPLS 0012.0100.0004 :: 10.1.4.4 24007 300 MPLS 0012.0100.0005 :: 10.1.3.3 24001 300 MPLS 0012.0100.0005 :: 10.1.4.4 24007 300 MPLS 0012.0100.0006 :: 10.1.3.3 24001 300 MPLS 0012.0100.0006 :: 10.1.4.4 24007 300 MPLS 0012.0100.0007 :: 10.1.3.3 24001 300 MPLS 0012.0100.0007 :: 10.1.4.4 24007 300 MPLS 0012.0100.0008 :: 10.1.3.3 24001 300 MPLS 0012.0100.0008 :: 10.1.4.4 24007 300 MPLS 0012.0100.0009 :: 10.1.3.3 24001 300 MPLS 0012.0100.0009 :: 10.1.4.4 24007 300 MPLS 0012.0100.000a :: 10.1.3.3 24001 300 MPLS 0012.0100.000a :: 10.1.4.4 24007 300 MPLS 005f.8603.6401 :: Bundle-Ether100.33 24000 RP/0/RSP0/CPU0:ASR9901-3-PE1#show bgp l2vpn evpn rd 10.1.1.1:300 route-type 2 Thu Jun 25 13:32:02.731 GMT+8 BGP router identifier 10.1.1.1, local AS number 65001 BGP generic scan interval 60 secs Non-stop routing is enabled BGP table state: Active Table ID: 0x0 RD version: 0 BGP main routing table version 1156 BGP NSR Initial initsync version 1 (Reached) BGP NSR/ISSU Sync-Group versions 0/0 BGP scan interval 60 secs Status codes: s suppressed, d damped, h history, * valid, \u0026gt; best i - internal, r RIB-failure, S stale, N Nexthop-discard Origin codes: i - IGP, e - EGP, ? - incomplete Network Next Hop Metric LocPrf Weight Path Route Distinguisher: 10.1.1.1:300 (default for vrf 300) *\u0026gt; [2][0][48][0011.0100.0001][0]/104 0.0.0.0 0 i *\u0026gt; [2][0][48][0011.0100.0002][0]/104 0.0.0.0 0 i *\u0026gt; [2][0][48][0011.0100.0003][0]/104 0.0.0.0 0 i *\u0026gt; [2][0][48][0011.0100.0004][0]/104 0.0.0.0 0 i *\u0026gt; [2][0][48][0011.0100.0005][0]/104 0.0.0.0 0 i *\u0026gt; [2][0][48][0011.0100.0006][0]/104 0.0.0.0 0 i *\u0026gt; [2][0][48][0011.0100.0007][0]/104 0.0.0.0 0 i *\u0026gt; [2][0][48][0011.0100.0008][0]/104 0.0.0.0 0 i *\u0026gt; [2][0][48][0011.0100.0009][0]/104 0.0.0.0 0 i *\u0026gt; [2][0][48][0011.0100.000a][0]/104 0.0.0.0 0 i *\u0026gt;i[2][0][48][0012.0100.0001][0]/104 10.1.3.3 100 0 i * i 10.1.4.4 100 0 i *\u0026gt;i[2][0][48][0012.0100.0002][0]/104 10.1.3.3 100 0 i * i 10.1.4.4 100 0 i *\u0026gt;i[2][0][48][0012.0100.0003][0]/104 10.1.3.3 100 0 i * i 10.1.4.4 100 0 i *\u0026gt;i[2][0][48][0012.0100.0004][0]/104 10.1.3.3 100 0 i * i 10.1.4.4 100 0 i *\u0026gt;i[2][0][48][0012.0100.0005][0]/104 10.1.3.3 100 0 i * i 10.1.4.4 100 0 i *\u0026gt;i[2][0][48][0012.0100.0006][0]/104 10.1.3.3 100 0 i * i 10.1.4.4 100 0 i *\u0026gt;i[2][0][48][0012.0100.0007][0]/104 10.1.3.3 100 0 i * i 10.1.4.4 100 0 i *\u0026gt;i[2][0][48][0012.0100.0008][0]/104 10.1.3.3 100 0 i * i 10.1.4.4 100 0 i *\u0026gt;i[2][0][48][0012.0100.0009][0]/104 10.1.3.3 100 0 i * i 10.1.4.4 100 0 i *\u0026gt;i[2][0][48][0012.0100.000a][0]/104 10.1.3.3 100 0 i * i 10.1.4.4 100 0 i *\u0026gt; [2][0][48][005f.8603.6401][0]/104 0.0.0.0 0 i Processed 21 prefixes, 31 paths RP/0/RSP0/CPU0:ASR9901-3-PE1# RP/0/RSP0/CPU0:ASR9901-3-PE1#show bgp l2vpn evpn rd 10.1.1.1:300 [2][0][48][0011.0100.0001][0]/104 Thu Jun 25 13:32:56.482 GMT+8 BGP routing table entry for [2][0][48][0011.0100.0001][0]/104, Route Distinguisher: 10.1.1.1:300 Versions: Process bRIB/RIB SendTblVer Speaker 1097 1097 Local Label: 24000 Last Modified: Jun 25 06:30:25.832 for 07:02:31 Paths: (1 available, best #1) Advertised to update-groups (with more than one peer): 0.2 Path #1: Received by speaker 0 Advertised to update-groups (with more than one peer): 0.2 Local 0.0.0.0 from 0.0.0.0 (10.1.1.1) Origin IGP, localpref 100, valid, redistributed, best, group-best, import-candidate, rib-install Received Path ID 0, Local Path ID 1, version 1097 Extended community: SoO:10.1.1.1:300 RT:65001:300 EVPN ESI: 0022.2222.2222.2222.2222 RP/0/RSP0/CPU0:ASR9901-3-PE1# Route-type 3: Inclusive Multicast Advertisement # 格式如下:\n//COMMAND show evpn evi vpn-id 300 inclusive-multicast detail show bgp l2vpn evpn rd 10.1.1.1:300 route-type 3 show bgp l2vpn evpn rd 10.1.1.1:300 [3][0][32][10.1.1.1]/80 detail show l2vpn forwarding bridge-domain evpn inclusive-multicast detail location 0/0/CPU0 RP/0/RSP0/CPU0:ASR9901-3-PE1#show evpn evi vpn-id 300 inclusive-multicast detail Thu Jun 25 13:50:32.307 GMT+8 VPN-ID Encap EtherTag Originating IP ---------- ------ ---------- ---------------------------------------- 300 MPLS 0 10.1.1.1 TEPid : 0xffffffff Nexthop: :: Label : 24001 Source : Local 300 MPLS 0 10.1.3.3 TEPid : 0xffffffff Nexthop: 10.1.3.3 Label : 24002 Source : Remote 300 MPLS 0 10.1.4.4 TEPid : 0xffffffff Nexthop: 10.1.4.4 Label : 24008 Source : Remote RP/0/RSP0/CPU0:ASR9901-3-PE1# RP/0/RSP0/CPU0:ASR9901-3-PE1# RP/0/RSP0/CPU0:ASR9901-3-PE1# RP/0/RSP0/CPU0:ASR9901-3-PE1#show bgp l2vpn evpn r rd regexp rnh route-policy route-type rt-set RP/0/RSP0/CPU0:ASR9901-3-PE1#show bgp l2vpn evpn rd 10.1.1.1:300 route-type 3 Thu Jun 25 13:50:54.613 GMT+8 BGP router identifier 10.1.1.1, local AS number 65001 BGP generic scan interval 60 secs Non-stop routing is enabled BGP table state: Active Table ID: 0x0 RD version: 0 BGP main routing table version 1156 BGP NSR Initial initsync version 1 (Reached) BGP NSR/ISSU Sync-Group versions 0/0 BGP scan interval 60 secs Status codes: s suppressed, d damped, h history, * valid, \u0026gt; best i - internal, r RIB-failure, S stale, N Nexthop-discard Origin codes: i - IGP, e - EGP, ? - incomplete Network Next Hop Metric LocPrf Weight Path Route Distinguisher: 10.1.1.1:300 (default for vrf 300) *\u0026gt; [3][0][32][10.1.1.1]/80 0.0.0.0 0 i *\u0026gt;i[3][0][32][10.1.3.3]/80 10.1.3.3 100 0 i *\u0026gt;i[3][0][32][10.1.4.4]/80 10.1.4.4 100 0 i Processed 3 prefixes, 3 paths RP/0/RSP0/CPU0:ASR9901-3-PE1#show bgp l2vpn evpn rd 10.1.1.1:300 [3][0][32][10.1.1.1]/80 detail Thu Jun 25 13:51:21.093 GMT+8 BGP routing table entry for [3][0][32][10.1.1.1]/80, Route Distinguisher: 10.1.1.1:300 Versions: Process bRIB/RIB SendTblVer Speaker 2 2 Flags: 0x00040001+0x00000000; Last Modified: Jun 22 08:10:34.832 for 3d05h Paths: (1 available, best #1) Advertised to update-groups (with more than one peer): 0.2 Path #1: Received by speaker 0 Flags: 0x402000000504000b, import: 0x00 Advertised to update-groups (with more than one peer): 0.2 Local 0.0.0.0 from 0.0.0.0 (10.1.1.1) Origin IGP, localpref 100, valid, redistributed, best, group-best, import-candidate Received Path ID 0, Local Path ID 1, version 2 Extended community: RT:65001:300 PMSI: flags 0x00, type 6, label 24001, ID 0x0a010101 RP/0/RSP0/CPU0:ASR9901-3-PE1# RP/0/RSP0/CPU0:ASR9901-3-PE1# RP/0/RSP0/CPU0:ASR9901-3-PE1# RP/0/RSP0/CPU0:ASR9901-3-PE1# RP/0/RSP0/CPU0:ASR9901-3-PE1#show l2vpn forwarding bridge-domain 100:300 evpn inclusive-multicast de ldebug detail RP/0/RSP0/CPU0:ASR9901-3-PE1#show l2vpn forwarding bridge-domain 100:300 evpn inclusive-multicast detail location 0/0/CPU0 Thu Jun 25 13:51:57.462 GMT+8 Bridge-Domain Name BD-ID XCID TEP-id Next Hop Label/VNI Encap Status -------------------------------- ------ ---------- ---------- --------------- ---------- -------- ------- 100:300 0 0x80000003 Status: bound Flags: default multicast replication 0xffffffff 10.1.3.3 24002 10 bound \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; 0xffffffff 10.1.4.4 24008 10 bound \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; Route-type 4: DF Election # //Command: show evpn ethernet-segment interface Bundle-Ether100 detail show bgp l2vpn evpn rd 10.1.3.3:0 route-type ethernet-segment show bgp l2vpn evpn rd 10.1.3.3:0 [4][0011.1111.1111.1111.1111][32][10.1.3.3]/128 detail show bgp rt l2vpn evpn show evpn ethernet-segment interface Bundle-Ether100 detail show evpn ethernet-segment interface Bundle-Ether100 carving detail RP/0/RSP0/CPU0:9901-1-PE3#show evpn ethernet-segment interface bundle-Ether 100 detail Thu Nov 26 02:05:25.194 HKT Legend: B - No Forwarders EVPN-enabled, C - Backbone Source MAC missing (PBB-EVPN), RT - ES-Import Route Target missing, E - ESI missing, H - Interface handle missing, I - Name (Interface or Virtual Access) missing, M - Interface in Down state, O - BGP End of Download missing, P - Interface already Access Protected, Pf - Interface forced single-homed, R - BGP RID not received, S - Interface in redundancy standby state, X - ESI-extracted MAC Conflict SHG - No local split-horizon-group label allocated Ethernet Segment Id Interface Nexthops ------------------------ ---------------------------------- -------------------- 0011.1111.1111.1111.1111 BE100 10.1.3.3 10.1.4.4 ES to BGP Gates : Ready ES to L2FIB Gates : P Main port : Interface name : Bundle-Ether100 Interface MAC : f4db.e68d.352b IfHandle : 0x00000720 State : Up Redundancy : Not Defined ESI type : 0 Value : 11.1111.1111.1111.1111 ES Import RT : 1111.1111.1111 (Local) Source MAC : 0000.0000.0000 (N/A) Topology : Operational : MH, Single-flow-active Configured : All-active (AApF) (default) Service Carving : Auto-selection Multicast : Disabled Peering Details : 10.1.3.3 [MOD:P:00] 10.1.4.4 [MOD:P:00] Service Carving Results: Forwarders : 2 Elected : 0 Not Elected : 0 EVPN-VPWS Service Carving Results: Primary : 0 Backup : 0 Non-DF : 0 MAC Flushing mode : STP-TCN Peering timer : 3 sec [not running] Recovery timer : 30 sec [not running] Carving timer : 0 sec [not running] Local SHG label : 24005 Remote SHG labels : 1 24009 : nexthop 10.1.4.4 Access signal mode: Bundle OOS (Default) RP/0/RSP0/CPU0:9901-1-PE3# show bgp l2vpn evpn rd 10.1.3.3:0 route-type ? \u0026lt;1-8\u0026gt; Route type value ethernet-ad Display EVPN Ethernet Advertisement routes ethernet-segment Display EVPN Ethernet Segment routes igmp-join-synch Display EVPN MCAST Join synch routes igmp-leave-synch Display EVPN MCAST Leave synch routes inclusive-mcast Display EVPN Inclusive Multicast routes ip-advertisement Display EVPN IP Advertisement routes mac-advertisement Display EVPN MAC Advertisement routes RP/0/RSP0/CPU0:9901-1-PE3# show bgp l2vpn evpn rd 10.1.3.3:0 route-type ethernet-segment Thu Nov 26 02:06:16.996 HKT BGP router identifier 10.1.3.3, local AS number 65001 BGP generic scan interval 60 secs Non-stop routing is enabled BGP table state: Active Table ID: 0x0 RD version: 0 BGP main routing table version 427 BGP NSR Initial initsync version 1 (Reached) BGP NSR/ISSU Sync-Group versions 0/0 BGP scan interval 60 secs Status codes: s suppressed, d damped, h history, * valid, \u0026gt; best i - internal, r RIB-failure, S stale, N Nexthop-discard Origin codes: i - IGP, e - EGP, ? - incomplete Network Next Hop Metric LocPrf Weight Path Route Distinguisher: 10.1.3.3:0 (default for vrf ES:GLOBAL) *\u0026gt; [4][0011.1111.1111.1111.1111][32][10.1.3.3]/128 0.0.0.0 0 i *\u0026gt;i[4][0011.1111.1111.1111.1111][32][10.1.4.4]/128 10.1.4.4 100 0 i Processed 2 prefixes, 2 paths RP/0/RSP0/CPU0:9901-1-PE3# show bgp l2vpn evpn rd 10.1.3.3:0 [4][0011.1111.1111.1111.1111][32][10.1.3.3]/128 detail Thu Nov 26 02:06:36.320 HKT BGP routing table entry for [4][0011.1111.1111.1111.1111][32][10.1.3.3]/128, Route Distinguisher: 10.1.3.3:0 Versions: Process bRIB/RIB SendTblVer Speaker 299 299 Flags: 0x00040001+0x00000000; Last Modified: Nov 25 18:09:33.833 for 07:57:03 Paths: (1 available, best #1) Advertised to update-groups (with more than one peer): 0.2 Path #1: Received by speaker 0 Flags: 0x400002000504000b, import: 0x00, EVPN: 0x0 Advertised to update-groups (with more than one peer): 0.2 Local 0.0.0.0 from 0.0.0.0 (10.1.3.3), if-handle 0x00000000 Origin IGP, localpref 100, valid, redistributed, best, group-best, import-candidate, rib-install Received Path ID 0, Local Path ID 1, version 299 Extended community: EVPN ES Import:1111.1111.1111 DF Election:0:0x0000:0 RP/0/RSP0/CPU0:9901-1-PE3#show bgp rt rt rt-set RP/0/RSP0/CPU0:9901-1-PE3#show bgp rt l2vpn evpn Thu Nov 26 02:07:02.324 HKT EXTCOMM IMP/EXP RT:65001:300 1 / 1 RT:65001:400 1 / 1 EVPN ES Import:1111.1111.1111 1 / 0 Processed 3 entries RP/0/RSP0/CPU0:9901-1-PE3# RP/0/RSP0/CPU0:9901-1-PE3# RP/0/RSP0/CPU0:9901-1-PE3# RP/0/RSP0/CPU0:9901-1-PE3# RP/0/RSP0/CPU0:9901-1-PE3#show evpn ethernet-segment interface bundle-Ether 100 carving detail Thu Nov 26 02:07:46.647 HKT Legend: B - No Forwarders EVPN-enabled, C - Backbone Source MAC missing (PBB-EVPN), RT - ES-Import Route Target missing, E - ESI missing, H - Interface handle missing, I - Name (Interface or Virtual Access) missing, M - Interface in Down state, O - BGP End of Download missing, P - Interface already Access Protected, Pf - Interface forced single-homed, R - BGP RID not received, S - Interface in redundancy standby state, X - ESI-extracted MAC Conflict SHG - No local split-horizon-group label allocated Ethernet Segment Id Interface Nexthops ------------------------ ---------------------------------- -------------------- 0011.1111.1111.1111.1111 BE100 10.1.3.3 10.1.4.4 ES to BGP Gates : Ready ES to L2FIB Gates : P Main port : Interface name : Bundle-Ether100 Interface MAC : f4db.e68d.352b IfHandle : 0x00000720 State : Up Redundancy : Not Defined ESI type : 0 Value : 11.1111.1111.1111.1111 ES Import RT : 1111.1111.1111 (Local) Source MAC : 0000.0000.0000 (N/A) Topology : Operational : MH, Single-flow-active Configured : All-active (AApF) (default) Service Carving : Auto-selection Multicast : Disabled Peering Details : 10.1.3.3 [MOD:P:00] 10.1.4.4 [MOD:P:00] Service Carving Results: Forwarders : 2 Elected : 0 Not Elected : 0 EVPN-VPWS Service Carving Results: Primary : 0 Backup : 0 Non-DF : 0 MAC Flushing mode : STP-TCN Peering timer : 3 sec [not running] Recovery timer : 30 sec [not running] Carving timer : 0 sec [not running] Local SHG label : 24005 Remote SHG labels : 1 24009 : nexthop 10.1.4.4 Access signal mode: Bundle OOS (Default) Route-type 1 ES-EAD ( Split-Horizon ) # PE4 收到从 CE 过来的广播流量会复制两份， 一份发给 PE1 封装为 SR Label / BUM Label ; 一份给 PE3 封装为 SR Label / BUM Label / SHG label\n//COMMAND show evpn ethernet-segment interface Bundle-Ether100 detail show bgp l2vpn evpn route-type ethernet-ad show bgp l2vpn evpn rd 10.1.3.3:0 [1][10.1.3.3:1][0011.1111.1111.1111.1111][4294967295]/184 detail show bgp l2vpn evpn rd 10.1.3.3:300 route-type 1 RP/0/RSP0/CPU0:9901-1-PE3#show evpn ethernet-segment interface bundle-Ether 100 detail Thu Nov 26 15:34:46.741 HKT Legend: B - No Forwarders EVPN-enabled, C - Backbone Source MAC missing (PBB-EVPN), RT - ES-Import Route Target missing, E - ESI missing, H - Interface handle missing, I - Name (Interface or Virtual Access) missing, M - Interface in Down state, O - BGP End of Download missing, P - Interface already Access Protected, Pf - Interface forced single-homed, R - BGP RID not received, S - Interface in redundancy standby state, X - ESI-extracted MAC Conflict SHG - No local split-horizon-group label allocated Ethernet Segment Id Interface Nexthops ------------------------ ---------------------------------- -------------------- 0011.1111.1111.1111.1111 BE100 10.1.3.3 10.1.4.4 ES to BGP Gates : Ready ES to L2FIB Gates : P Main port : Interface name : Bundle-Ether100 Interface MAC : f4db.e68d.352b IfHandle : 0x00000720 State : Up Redundancy : Not Defined ESI type : 0 Value : 11.1111.1111.1111.1111 ES Import RT : 1111.1111.1111 (Local) Source MAC : 0000.0000.0000 (N/A) Topology : Operational : MH, Single-flow-active Configured : All-active (AApF) (default) Service Carving : Auto-selection Multicast : Disabled Peering Details : 10.1.3.3 [MOD:P:00] 10.1.4.4 [MOD:P:00] Service Carving Results: Forwarders : 2 Elected : 0 Not Elected : 0 EVPN-VPWS Service Carving Results: Primary : 0 Backup : 0 Non-DF : 0 MAC Flushing mode : STP-TCN Peering timer : 3 sec [not running] Recovery timer : 30 sec [not running] Carving timer : 0 sec [not running] Local SHG label : 24005 Remote SHG labels : 1 24009 : nexthop 10.1.4.4 Access signal mode: Bundle OOS (Default) RP/0/RSP0/CPU0:9901-1-PE3# RP/0/RSP0/CPU0:9901-1-PE3# RP/0/RSP0/CPU0:9901-1-PE3# RP/0/RSP0/CPU0:9901-1-PE3#show bgp l2vpn evpn route-type ethernet-ad Thu Nov 26 15:35:04.527 HKT BGP router identifier 10.1.3.3, local AS number 65001 BGP generic scan interval 60 secs Non-stop routing is enabled BGP table state: Active Table ID: 0x0 RD version: 0 BGP main routing table version 427 BGP NSR Initial initsync version 1 (Reached) BGP NSR/ISSU Sync-Group versions 0/0 BGP scan interval 60 secs Status codes: s suppressed, d damped, h history, * valid, \u0026gt; best i - internal, r RIB-failure, S stale, N Nexthop-discard Origin codes: i - IGP, e - EGP, ? - incomplete Network Next Hop Metric LocPrf Weight Path Route Distinguisher: 10.1.1.1:1 *\u0026gt;i[1][10.1.1.1:1][0022.2222.2222.2222.2222][4294967295]/184 10.1.1.1 100 0 i Route Distinguisher: 10.1.1.1:300 *\u0026gt;i[1][0022.2222.2222.2222.2222][0]/120 10.1.1.1 100 0 i Route Distinguisher: 10.1.1.1:400 *\u0026gt;i[1][0022.2222.2222.2222.2222][0]/120 10.1.1.1 100 0 i Route Distinguisher: 10.1.3.3:0 (default for vrf ES:GLOBAL) *\u0026gt; [1][10.1.3.3:1][0011.1111.1111.1111.1111][4294967295]/184 0.0.0.0 0 i Route Distinguisher: 10.1.3.3:300 (default for vrf 300) *\u0026gt; [1][0011.1111.1111.1111.1111][0]/120 0.0.0.0 0 i * i 10.1.4.4 100 0 i *\u0026gt;i[1][0011.1111.1111.1111.1111][4294967295]/120 10.1.4.4 100 0 i *\u0026gt;i[1][0022.2222.2222.2222.2222][0]/120 10.1.1.1 100 0 i *\u0026gt;i[1][0022.2222.2222.2222.2222][4294967295]/120 10.1.1.1 100 0 i Route Distinguisher: 10.1.3.3:400 (default for vrf 400) *\u0026gt; [1][0011.1111.1111.1111.1111][0]/120 0.0.0.0 0 i * i 10.1.4.4 100 0 i *\u0026gt;i[1][0011.1111.1111.1111.1111][4294967295]/120 10.1.4.4 100 0 i *\u0026gt;i[1][0022.2222.2222.2222.2222][0]/120 10.1.1.1 100 0 i *\u0026gt;i[1][0022.2222.2222.2222.2222][4294967295]/120 10.1.1.1 100 0 i Route Distinguisher: 10.1.4.4:1 *\u0026gt;i[1][10.1.4.4:1][0011.1111.1111.1111.1111][4294967295]/184 10.1.4.4 100 0 i Route Distinguisher: 10.1.4.4:300 *\u0026gt;i[1][0011.1111.1111.1111.1111][0]/120 10.1.4.4 100 0 i Route Distinguisher: 10.1.4.4:400 *\u0026gt;i[1][0011.1111.1111.1111.1111][0]/120 10.1.4.4 100 0 i Processed 15 prefixes, 17 paths RP/0/RSP0/CPU0:9901-1-PE3# RP/0/RSP0/CPU0:9901-1-PE3# RP/0/RSP0/CPU0:9901-1-PE3#show bgp l2vpn evpn rd 10.1.3.3:0 [1][10.1.3.3:1][0011.1111.1111.1111.1111][4294967295]/184 detail Thu Nov 26 15:36:24.408 HKT BGP routing table entry for [1][10.1.3.3:1][0011.1111.1111.1111.1111][4294967295]/184, Route Distinguisher: 10.1.3.3:0 Versions: Process bRIB/RIB SendTblVer Speaker 304 304 Local Label: 0 (no rewrite); Flags: 0x00040001+0x00000000; Last Modified: Nov 25 18:09:36.833 for 21:26:48 Paths: (1 available, best #1) Advertised to update-groups (with more than one peer): 0.2 Path #1: Received by speaker 0 Flags: 0x402002000504000b, import: 0x00, EVPN: 0x0 Advertised to update-groups (with more than one peer): 0.2 Local 0.0.0.0 from 0.0.0.0 (10.1.3.3), if-handle 0x00000000 Origin IGP, localpref 100, valid, redistributed, best, group-best, import-candidate, rib-install Received Path ID 0, Local Path ID 1, version 304 Extended community: EVPN ESI Label:0x02:24005 RT:65001:300 RT:65001:400 RP/0/RSP0/CPU0:9901-1-PE3# RP/0/RSP0/CPU0:9901-1-PE3#show bgp l2vpn evpn rd 10.1.3.3:300 route-type 1 Thu Nov 26 15:37:29.610 HKT BGP router identifier 10.1.3.3, local AS number 65001 BGP generic scan interval 60 secs Non-stop routing is enabled BGP table state: Active Table ID: 0x0 RD version: 0 BGP main routing table version 427 BGP NSR Initial initsync version 1 (Reached) BGP NSR/ISSU Sync-Group versions 0/0 BGP scan interval 60 secs Status codes: s suppressed, d damped, h history, * valid, \u0026gt; best i - internal, r RIB-failure, S stale, N Nexthop-discard Origin codes: i - IGP, e - EGP, ? - incomplete Network Next Hop Metric LocPrf Weight Path Route Distinguisher: 10.1.3.3:300 (default for vrf 300) *\u0026gt; [1][0011.1111.1111.1111.1111][0]/120 0.0.0.0 0 i * i 10.1.4.4 100 0 i *\u0026gt;i[1][0011.1111.1111.1111.1111][4294967295]/120 10.1.4.4 100 0 i *\u0026gt;i[1][0022.2222.2222.2222.2222][0]/120 10.1.1.1 100 0 i *\u0026gt;i[1][0022.2222.2222.2222.2222][4294967295]/120 10.1.1.1 100 0 i Processed 4 prefixes, 5 paths Route-type 1 EVI-EAD(Aliasing) # 生么是 aliasing：\nCommand: show bgp l2vpn evpn rd 10.1.1.1:300 route-type 1 show bgp l2vpn evpn rd 10.1.1.1:300 [1][0011.1111.1111.1111.1111][0]/120 detail show evpn internal-label vpn-id 300 detail show cli history detail RP/0/RSP0/CPU0:ASR9901-3-PE1#show bgp l2vpn evpn rd 10.1.1.1:300 route-type 1 Fri Jun 26 03:57:53.556 GMT+8 BGP router identifier 10.1.1.1, local AS number 65001 BGP generic scan interval 60 secs Non-stop routing is enabled BGP table state: Active Table ID: 0x0 RD version: 0 BGP main routing table version 1156 BGP NSR Initial initsync version 1 (Reached) BGP NSR/ISSU Sync-Group versions 0/0 BGP scan interval 60 secs Status codes: s suppressed, d damped, h history, * valid, \u0026gt; best i - internal, r RIB-failure, S stale, N Nexthop-discard Origin codes: i - IGP, e - EGP, ? - incomplete Network Next Hop Metric LocPrf Weight Path Route Distinguisher: 10.1.1.1:300 (default for vrf 300) *\u0026gt;i[1][0011.1111.1111.1111.1111][0]/120 10.1.3.3 100 0 i * i 10.1.4.4 100 0 i *\u0026gt;i[1][0011.1111.1111.1111.1111][4294967295]/120 10.1.3.3 100 0 i * i 10.1.4.4 100 0 i *\u0026gt; [1][0022.2222.2222.2222.2222][0]/120 0.0.0.0 0 i Processed 3 prefixes, 5 paths RP/0/RSP0/CPU0:ASR9901-3-PE1# RP/0/RSP0/CPU0:ASR9901-3-PE1# RP/0/RSP0/CPU0:ASR9901-3-PE1# RP/0/RSP0/CPU0:ASR9901-3-PE1# RP/0/RSP0/CPU0:ASR9901-3-PE1# RP/0/RSP0/CPU0:ASR9901-3-PE1# RP/0/RSP0/CPU0:ASR9901-3-PE1# RP/0/RSP0/CPU0:ASR9901-3-PE1#show bgp l2vpn evpn rd 10.1.1.1:300 [1][0011.1111.1111.1111.1111][0]/120 detail Fri Jun 26 03:58:28.256 GMT+8 BGP routing table entry for [1][0011.1111.1111.1111.1111][0]/120, Route Distinguisher: 10.1.1.1:300 Versions: Process bRIB/RIB SendTblVer Speaker 1091 1091 Flags: 0x00001001+0x00010000; Last Modified: Jun 25 06:29:04.832 for 21:29:24 Paths: (2 available, best #1) Not advertised to any peer Path #1: Received by speaker 0 Flags: 0x4000020005068005, import: 0x80 Not advertised to any peer Local, (received \u0026amp; used) 10.1.3.3 (metric 2) from 10.1.3.3 (10.1.3.3) Received Label 24001 Origin IGP, localpref 100, valid, internal, best, group-best, import-candidate, imported, rib-install Received Path ID 0, Local Path ID 1, version 1091 Extended community: RT:65001:300 Source AFI: L2VPN EVPN, Source VRF: default, Source Route Distinguisher: 10.1.3.3:300 Path #2: Received by speaker 0 Flags: 0x4000020004028005, import: 0x80 Not advertised to any peer Local, (received \u0026amp; used) 10.1.4.4 (metric 2) from 10.1.4.4 (10.1.4.4) Received Label 24007 Origin IGP, localpref 100, valid, internal, import-candidate, imported, rib-install Received Path ID 0, Local Path ID 0, version 0 Extended community: RT:65001:300 Source AFI: L2VPN EVPN, Source VRF: default, Source Route Distinguisher: 10.1.4.4:300 RP/0/RSP0/CPU0:ASR9901-3-PE1# RP/0/RSP0/CPU0:ASR9901-3-PE1# RP/0/RSP0/CPU0:ASR9901-3-PE1# RP/0/RSP0/CPU0:ASR9901-3-PE1# RP/0/RSP0/CPU0:ASR9901-3-PE1# RP/0/RSP0/CPU0:ASR9901-3-PE1#show evpn internal-label vpn-id 300 detail Fri Jun 26 03:59:07.981 GMT+8 VPN-ID Encap Ethernet Segment Id EtherTag Label ---------- ------ --------------------------- -------- -------- 300 MPLS 0011.1111.1111.1111.1111 0 24003 Multi-paths resolved: TRUE (Remote all-active) Multi-paths Internal label: 24003 Pathlists: MAC 10.1.3.3 24001 10.1.4.4 24007 EAD/ES 10.1.3.3 0 10.1.4.4 0 EAD/EVI 10.1.3.3 24001 10.1.4.4 24007 Summary pathlist: 0xffffffff 10.1.3.3 24001 0xffffffff 10.1.4.4 24007 配置 # PE1 # RP/0/RSP0/CPU0:ASR9901-3-PE1#show run l2vpn Fri Jun 26 05:24:34.678 GMT+8 l2vpn description elan bridge group 100 bridge-domain 300 description elan interface Bundle-Ether100.33 split-horizon group ! evi 300 ! ! bridge-domain 400 description elan interface Bundle-Ether100.44 split-horizon group ! evi 400 ! ! ! ! RP/0/RSP0/CPU0:ASR9901-3-PE1# RP/0/RSP0/CPU0:ASR9901-3-PE1# RP/0/RSP0/CPU0:ASR9901-3-PE1#show run evpn Fri Jun 26 05:24:38.189 GMT+8 evpn evi 300 bgp route-target import 65001:300 route-target export 65001:300 ! advertise-mac ! ! evi 400 bgp route-target import 65001:400 route-target export 65001:400 ! advertise-mac ! ! interface Bundle-Ether100 ethernet-segment identifier type 0 22.22.22.22.22.22.22.22.22 bgp route-target 2222.2222.2222 ! ! ! RP/0/RSP0/CPU0:ASR9901-3-PE1# RP/0/RSP0/CPU0:ASR9901-3-PE1#show run router bgp Fri Jun 26 05:24:46.108 GMT+8 router bgp 65001 bgp router-id 10.1.1.1 address-family l2vpn evpn ! neighbor 10.1.3.3 remote-as 65001 update-source Loopback100 address-family l2vpn evpn soft-reconfiguration inbound always ! ! neighbor 10.1.4.4 remote-as 65001 update-source Loopback100 address-family l2vpn evpn soft-reconfiguration inbound always ! ! ! RP/0/RSP0/CPU0:ASR9901-3-PE1# RP/0/RSP0/CPU0:ASR9901-3-PE1#show run router isis Fri Jun 26 05:24:49.847 GMT+8 router isis xuxing is-type level-2-only net 49.0000.0000.0001.00 address-family ipv4 unicast metric-style wide segment-routing mpls ! interface Loopback100 passive circuit-type level-2-only address-family ipv4 unicast prefix-sid absolute 16001 ! ! interface GigabitEthernet0/0/0/0 circuit-type level-2-only point-to-point address-family ipv4 unicast fast-reroute per-prefix fast-reroute per-prefix ti-lfa metric 1 ! ! ! RP/0/RSP0/CPU0:ASR9901-3-PE1#show run int bundle-ether 100* Fri Jun 26 05:26:06.184 GMT+8 interface Bundle-Ether100 lacp system mac 0100.0100.0100 load-interval 30 ! interface Bundle-Ether100.33 l2transport encapsulation dot1q 33 rewrite ingress tag pop 1 symmetric ! interface Bundle-Ether100.44 l2transport encapsulation dot1q 44 rewrite ingress tag pop 1 symmetric ! PE3 # RP/0/RSP0/CPU0:9901-1-PE3#show run l2vpn Thu Nov 26 17:32:50.916 HKT l2vpn description elan bridge group 100 bridge-domain 300 description elan interface Bundle-Ether100.33 split-horizon group ! evi 300 ! ! bridge-domain 400 description elan interface Bundle-Ether100.44 split-horizon group ! evi 400 ! ! ! ! RP/0/RSP0/CPU0:9901-1-PE3#show run evpn Thu Nov 26 17:32:53.898 HKT evpn evi 300 bgp route-target import 65001:300 route-target export 65001:300 ! advertise-mac ! ! evi 400 bgp route-target import 65001:400 route-target export 65001:400 ! advertise-mac ! ! interface Bundle-Ether100 ethernet-segment identifier type 0 11.11.11.11.11.11.11.11.11 bgp route-target 1111.1111.1111 ! ! ! RP/0/RSP0/CPU0:9901-1-PE3#show run router bgp Thu Nov 26 17:32:57.445 HKT router bgp 65001 bgp router-id 10.1.3.3 address-family l2vpn evpn ! neighbor 10.1.1.1 remote-as 65001 update-source Loopback100 address-family l2vpn evpn ! ! neighbor 10.1.4.4 remote-as 65001 update-source Loopback100 address-family l2vpn evpn ! ! ! RP/0/RSP0/CPU0:9901-1-PE3#show run router isis Thu Nov 26 17:33:03.779 HKT router isis xuxing is-type level-2-only net 49.0000.0000.0003.00 address-family ipv4 unicast metric-style wide segment-routing mpls ! interface Loopback100 passive circuit-type level-2-only address-family ipv4 unicast prefix-sid absolute 16003 ! ! interface TenGigE0/0/0/30 circuit-type level-2-only point-to-point address-family ipv4 unicast fast-reroute per-prefix fast-reroute per-prefix ti-lfa metric 1 ! ! ! RP/0/RSP0/CPU0:9901-1-PE3# RP/0/RSP0/CPU0:9901-1-PE3#show run int bundle-ether 100* Thu Nov 26 17:33:08.354 HKT interface Bundle-Ether100 lacp system mac 0100.0100.0100 load-interval 30 ! interface Bundle-Ether100.33 l2transport encapsulation dot1q 33 rewrite ingress tag pop 1 symmetric ! interface Bundle-Ether100.44 l2transport encapsulation dot1q 44 rewrite ingress tag pop 1 symmetric PE4 # RP/0/RSP0/CPU0:9001-2-PE4#show run l2vpn Fri Mar 12 00:06:17.309 UTC l2vpn description elan bridge group 100 bridge-domain 300 description elan interface Bundle-Ether100.33 split-horizon group ! evi 300 ! ! bridge-domain 400 description elan interface Bundle-Ether100.44 split-horizon group ! evi 400 ! ! ! ! RP/0/RSP0/CPU0:9001-2-PE4#show run evpn Fri Mar 12 00:06:22.449 UTC evpn evi 300 bgp route-target import 65001:300 route-target export 65001:300 ! advertise-mac ! ! evi 400 bgp route-target import 65001:400 route-target export 65001:400 ! advertise-mac ! ! interface Bundle-Ether100 ethernet-segment identifier type 0 11.11.11.11.11.11.11.11.11 bgp route-target 1111.1111.1111 ! ! ! RP/0/RSP0/CPU0:9001-2-PE4#show run route rbg ^ % Invalid input detected at \u0026#39;^\u0026#39; marker. RP/0/RSP0/CPU0:9001-2-PE4#show run router bgp Fri Mar 12 00:06:31.815 UTC router bgp 65001 bgp router-id 10.1.4.4 address-family l2vpn evpn ! neighbor 10.1.1.1 remote-as 65001 update-source Loopback100 address-family l2vpn evpn ! ! neighbor 10.1.3.3 remote-as 65001 update-source Loopback100 address-family l2vpn evpn ! ! ! RP/0/RSP0/CPU0:9001-2-PE4#show run router isis Fri Mar 12 00:06:35.304 UTC router isis xuxing is-type level-2-only net 49.0000.0000.0004.00 address-family ipv4 unicast metric-style wide segment-routing mpls ! interface Loopback100 passive circuit-type level-2-only address-family ipv4 unicast prefix-sid absolute 16004 ! ! interface TenGigE0/0/2/2 circuit-type level-2-only point-to-point address-family ipv4 unicast fast-reroute per-prefix fast-reroute per-prefix ti-lfa metric 1 ! ! ! RP/0/RSP0/CPU0:9001-2-PE4# RP/0/RSP0/CPU0:9001-2-PE4# RP/0/RSP0/CPU0:9001-2-PE4#show run int bundle-ether 100* Fri Mar 12 00:06:41.755 UTC interface Bundle-Ether100 lacp system mac 0100.0100.0100 load-interval 30 ! interface Bundle-Ether100.33 l2transport encapsulation dot1q 33 rewrite ingress tag pop 1 symmetric ! interface Bundle-Ether100.44 l2transport encapsulation dot1q 44 rewrite ingress tag pop 1 symmetric ! ","date":"11 March 2021","externalUrl":null,"permalink":"/blog/evpn-native-evpn/","section":"Blog","summary":"ESI # ESI 主要用来标识 CE， 相同 CE 使用一样的 ESI.","title":"EVPN - Native EVPN","type":"blog"},{"content":"在之前的文章里， 介绍 install command 升级 Cisco 8000 的方法， 这篇文章记录下使用 PXE bring up 一台新的 Cisco 8000 的过程\nReload chassis 按 ESC 进入 BIOS， 选择 Boot Manager \u0026mdash;\u0026ndash; PXE 3. 输入 config 进入图像化界面， 配置 net0 \u0026laquo;\u0026lt; 管理口\niPXE initialising devices...ok iPXE 1.0.0+ (b965) -- Open Source Network Boot Firmware -- http://ipxe.org Features: DNS HTTP HTTPS TFTP EFI ISO9660_grub Menu iPXE\u0026gt; iPXE\u0026gt; ifopen net0 iPXE\u0026gt; iPXE\u0026gt; iPXE\u0026gt; ifstat net0: 08:4f:a9:5c:fb:c9 using i210 on PCI02:00.0 (open) [Link:up, TX:0 TXE:0 RX:10 RXE:3] [RXE: 1 x \u0026#34;The socket is not connected (http://ipxe.org/380f6093)\u0026#34;] [RXE: 1 x \u0026#34;Error 0x440e6083 (http://ipxe.org/440e6083)\u0026#34;] [RXE: 1 x \u0026#34;Operation not supported (http://ipxe.org/3c086083)\u0026#34;] net1: 00:a0:c9:00:00:00 using x557 on PCI04:00.0 (closed) [Link:down, TX:0 TXE:0 RX:0 RXE:0] [Link status: Down (http://ipxe.org/38086193)] net2: 08:4f:a9:5c:fb:ca using x557 on PCI04:00.1 (closed) [Link:down, TX:0 TXE:0 RX:0 RXE:0] [Link status: Down (http://ipxe.org/38086193)] iPXE\u0026gt; iPXE\u0026gt; config 4. Boot Cisco 8000 XR image\n\u0026ldquo;boot tftp://10.76.76.160/8000-x64-7.0.14.iso \u0026quot;\niPXE\u0026gt; boot tftp://10.76.76.160/8000-x64-7.0.14.iso \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; tftp://10.76.76.160/8000-x64-7.0.14.iso... ok Booting /EFI/BOOT/bootx64.efi Welcome to GRUB! Verifying (cd0)/EFI/BOOT/grub.cfg... (cd0)/EFI/BOOT/grub.cfg verified using Pkcs7 signature. [ 0.000000] Uhhuh. NMI received for unknown reason 3c on CPU 0. [ 0.000000] Do you have a strange power saving mode enabled? [ 0.000000] Dazed and confused, but trying to continue Feb 25 06:31:46.515: Prepare install environment Feb 25 06:31:46.517: Preparing installation environment Feb 25 06:31:46.897: Attempting PD notification of reimage Feb 25 06:31:47.563: Succeeded PD notification of reimage Feb 25 06:31:47.565: Attempting to punch watchdog Stage2 control register configured to 0x01900001 Stage1 control register configured to 0x07080011 Watchdog State = Stage 1 (1) Watchdog Timer = 1800 Watchdog Stage 1 Config: enable=1, action=1, timer=1800 cat: /proc/0/comm: No such file or directory Watchdog Stage 2 Config: enable=1, action=0, timer=400 Feb 25 06:31:47.610: Succeeded punching watchdog Feb 25 06:31:47.612: Wait for install device Feb 25 06:31:47.614: Create, format and mount partitions Feb 25 06:31:47.618: Creating partitions on /dev/sda 10000+0 records in 10000+0 records out 10240000 bytes (10 MB, 9.8 MiB) copied, 0.130044 s, 78.7 MB/s Process \u0026#39;/etc/udev/scripts/mount.sh\u0026#39; failed with exit code 1. Process \u0026#39;/etc/udev/scripts/mount.sh\u0026#39; failed with exit code 1. Process \u0026#39;/etc/udev/scripts/mount.sh\u0026#39; failed with exit code 1. [ 6.449733] EXT4-fs (sda2): error loading journal Feb 25 06:31:47.866: END Feb 25 06:31:47.872: Formatting partitions Physical volume \u0026#34;/dev/sda3\u0026#34; successfully created. Physical volume \u0026#34;/dev/sda3\u0026#34; changed 1 physical volume(s) resized / 0 physical volume(s) not resized Volume group \u0026#34;main-xr-vg\u0026#34; successfully created Feb 25 06:31:49.777: Saving old /var/log contents Rounding up size to full physical extent 956.00 MiB Logical volume \u0026#34;boot-lv\u0026#34; created. Using default stripesize 64.00 KiB. Process \u0026#39;/etc/udev/scripts/mount.sh\u0026#39; failed with exit code 1. Process \u0026#39;/etc/udev/scripts/mount.sh\u0026#39; failed with exit code 1. Process \u0026#39;/etc/udev/scripts/mount.sh\u0026#39; failed with exit code 1. Process \u0026#39;/etc/udev/scripts/mount.sh\u0026#39; failed with exit code 1. Logical volume \u0026#34;install-rootfs-thinpool\u0026#34; created. Using default stripesize 64.00 KiB. Process \u0026#39;/etc/udev/scripts/mount.sh\u0026#39; failed with exit code 1. Process \u0026#39;/etc/udev/scripts/mount.sh\u0026#39; failed with exit code 1. Logical volume \u0026#34;install-data-thinpool\u0026#34; created. Feb 25 06:31:51.043: Formatting Boot (/dev/main-xr-vg/boot-lv) umount: /dev/main-xr-vg/boot-lv: not mounted Using default stripesize 64.00 KiB. Process \u0026#39;/etc/udev/scripts/mount.sh\u0026#39; failed with exit code 1. Process \u0026#39;/etc/udev/scripts/mount.sh\u0026#39; failed with exit code 1. Process \u0026#39;/etc/udev/scripts/mount.sh\u0026#39; failed with exit code 1. Process \u0026#39;/etc/udev/scripts/mount.sh\u0026#39; failed with exit code 1. Process \u0026#39;/etc/udev/scripts/mount.sh\u0026#39; failed with exit code 1. Process \u0026#39;/etc/udev/scripts/mount.sh\u0026#39; failed with exit code 1. Logical volume \u0026#34;install-rootfs-snapshot-1614234707\u0026#34; created. Feb 25 06:31:51.790: Formatting ThinXR (/dev/main-xr-vg/install-rootfs-snapshot-1614234707) umount: /dev/main-xr-vg/install-rootfs-snapshot-1614234707: not mounted Using default stripesize 64.00 KiB. Rounding up size to full physical extent 4.62 GiB Process \u0026#39;/etc/udev/scripts/mount.sh\u0026#39; failed with exit code 1. Process \u0026#39;/etc/udev/scripts/mount.sh\u0026#39; failed with exit code 1. Process \u0026#39;/etc/udev/scripts/mount.sh\u0026#39; failed with exit code 1. Process \u0026#39;/etc/udev/scripts/mount.sh\u0026#39; failed with exit code 1. Process \u0026#39;/etc/udev/scripts/mount.sh\u0026#39; failed with exit code 1. Process \u0026#39;/etc/udev/scripts/mount.sh\u0026#39; failed with exit code 1. Logical volume \u0026#34;install-data-log\u0026#34; created. Feb 25 06:31:52.546: Formatting Log (/dev/main-xr-vg/install-data-log) umount: /dev/main-xr-vg/install-data-log: not mounted Using default stripesize 64.00 KiB. Logical volume \u0026#34;install-data-scratch\u0026#34; created. Feb 25 06:31:52.993: Formatting Scratch (/dev/main-xr-vg/install-data-scratch) umount: /dev/main-xr-vg/install-data-scratch: not mounted Using default stripesize 64.00 KiB. Logical volume \u0026#34;install-data-docker\u0026#34; created. Feb 25 06:31:53.437: Formatting Docker (/dev/main-xr-vg/install-data-docker) umount: /dev/main-xr-vg/install-data-docker: not mounted Using default stripesize 64.00 KiB. WARNING: Sum of all thin volume sizes (111.93 GiB) exceeds the size of thin pools and the amount of free space in volume group (48.00 MiB)! For thin pool auto extension activation/thin_pool_autoextend_threshold should be below 100. Logical volume \u0026#34;install-data-disk1\u0026#34; created. Feb 25 06:31:53.879: Formatting Disk1 (/dev/main-xr-vg/install-data-disk1) umount: /dev/main-xr-vg/install-data-disk1: not mounted umount: /dev/sda1: not mounted umount: /dev/sda2: not mounted Feb 25 06:31:53.963: Not formatting Disaster Recovery partition Feb 25 06:31:53.965: Mounting partitions [ 12.596306] EXT4-fs (sda2): error loading journal mount: wrong fs type, bad option, bad superblock on /dev/sda2, missing codepage or helper program, or other error In some cases useful info is found in syslog - try dmesg | tail or so. Cannot mount \u0026#39;/mnt/disk///mnt/dr_part\u0026#39; Feb 25 06:31:54.301: Setup repo for ISO boot (/mnt/disk/) Feb 25 06:31:54.303: Starting bootstrap for an ISO system. Root mount: /mnt/disk/ Feb 25 06:31:54.307: Populating RPM repository with RPMs from the ISO Feb 25 06:32:07.942: Creating internal repository at /mnt/disk//var/opt/cisco/iosxr/install/mirror/iosxr_install_internal_repo/ Feb 25 06:32:12.328: Dumping rpm cert into file Feb 25 06:32:12.330: Dumping RPM Cert into file /mnt/disk//certs Feb 25 06:32:12.419: RPM Release Cert installed Feb 25 06:32:14.028: Copying files into the mirror at /mnt/disk//var/opt/cisco/iosxr/install/mirror/ Feb 25 06:32:14.034: Bootstrap for an ISO system done Preparing IMA... Searching for IMA trusted keyring -\u0026gt;IMA trusted keyring found Importing IMA x509 certificate into IMA keyring -\u0026gt;IMA certificate found: /etc/keys/dbCisco-3.der (RELEASE) -\u0026gt;Certificate imported into IMA keyring Feb 25 06:32:16.991: Install targets (/mnt/disk/:RP:8201) Feb 25 06:32:16.993: Install targets Feb 25 06:32:16.995: Install Targets Feb 25 06:32:16.997: Performing preparation prior to installing RPMs Feb 25 06:32:17.012: Preparing IMA labeling environment Announced that card is performing an image installation step: Installing IMA tools Announced that card is performing an image installation step: Installing IMA tools done Feb 25 06:32:21.976: Installing RPMs Announced that card is performing an image installation step: Installing systemd and card-pid Announced that card is performing an image installation step: Installing all remaining packages Announced that card is performing an image installation step: Installing all remaining packages done Feb 25 06:35:01.445: Performing post-install scripts after installing RPMs Feb 25 06:35:01.448: Running post-install scripts Feb 25 06:35:01.534: Running XR post-install scripts enabling systemd service ds Created symlink /mnt/disk/etc/systemd/system/ios-xr.target.requires/ds.service → /etc/systemd/system/ds.service. enabling systemd service xr_startup Created symlink /mnt/disk/etc/systemd/system/ios-xr.target.requires/xr_startup.service → /etc/systemd/system/xr_startup.service. enabling systemd service xr-install Created symlink /mnt/disk/etc/systemd/system/ios-xr.target.requires/xr-install.service → /etc/systemd/system/xr-install.service. enabling systemd service lighttpd Created symlink /mnt/disk/etc/systemd/system/iso-xr.target.wants/lighttpd.service → /etc/systemd/system/lighttpd.service. enabling systemd service xr_kdump Created symlink /mnt/disk/etc/systemd/system/multi-user.target.wants/xr_kdump.service → /etc/systemd/system/xr_kdump.service. enabling systemd service xr_cgroups Created symlink /mnt/disk/etc/systemd/system/ios-xr.target.requires/xr_cgroups.service → /etc/systemd/system/xr_cgroups.service. enabling systemd service var_log_copier Created symlink /mnt/disk/etc/systemd/system/sysinit.target.wants/var_log_copier.service → /etc/systemd/system/var_log_copier.service. enabling systemd service fstrim Created symlink /mnt/disk/etc/systemd/system/ios-xr.target.wants/fstrim.service → /etc/systemd/system/fstrim.service. enabling systemd timer fstrim Created symlink /mnt/disk/etc/systemd/system/timers.target.wants/fstrim.timer → /etc/systemd/system/fstrim.timer. Feb 25 06:35:08.112: Install bootloader (/mnt/disk/::RP) cp /mnt/disk//boot/grub2-secure/bootx64.efi /mnt/disk//boot/efi/EFI/BOOT/bootx64.efi Feb 25 06:35:08.355: Prepare switch root (/mnt/disk/) Feb 25 06:35:08.357: Attempting PD prepare switch root Feb 25 06:35:08.361: Succeeded PD prepare switch root Feb 25 06:35:09.112: Syncing during switch root Feb 25 06:35:12.754: Attempting to notify PD reimage done Feb 25 06:35:13.351: Succeeded to notify PD reimage done Feb 25 06:35:13.353: Attempting to stop punching workdog /usr/local/etc/fpga-functions: line 713: 506 Terminated /usr/local/etc/punch-wd.sh Stage2 control register configured to 0x01900001 Stage1 control register configured to 0x15180011 Feb 25 06:35:13.410: Succeeded to stop punching workdog Feb 25 06:35:13.412: Clearing DNF makecache info Feb 25 06:35:13.415: Switching to new root filesystem (/mnt/disk/:) Feb 25 06:35:13.420: boot = /mnt/disk/, root = , console=ttyS0,115200 boardtype=RP platform=spitfire quiet rootflags=i_version ima_appraise=log ciscoima leaba_svn=1.6.2.4 bigphysarea=10M noissu pci=hpmemsize=0M,hpiosize=0M crashkernel=256M fsck.repair=yes fsck.mode=force intremap=off page_poison=on slab_nomerge vsyscall=none Feb 25 06:35:13.424: Clearing Boot Option to boot from disk Boot option reg: 0x00000000 [ 214.584274] kexec_core: Starting new kernel [ 1.258735] Created proc for bigphysarea Reading all physical volumes. This may take a while... Found volume group \u0026#34;main-xr-vg\u0026#34; using metadata type lvm2 8 logical volume(s) in volume group \u0026#34;main-xr-vg\u0026#34; now active 8 logical volume(s) in volume group \u0026#34;main-xr-vg\u0026#34; now active 8 logical volume(s) in volume group \u0026#34;main-xr-vg\u0026#34; now active Overriding bzImage fsck from util-linux 2.28.1 e2fsck 1.43 (17-May-2016) Pass 1: Checking inodes, blocks, and sizes Pass 2: Checking directory structure Pass 3: Checking directory connectivity Pass 4: Checking reference counts Pass 5: Checking group summary information Boot: 24/61184 files (4.2% non-contiguous), 38149/244736 blocks fsck from util-linux 2.28.1 e2fsck 1.43 (17-May-2016) Disk1: recovering journal Pass 1: Checking inodes, blocks, and sizes Pass 2: Checking directory structure Pass 3: Checking directory connectivity Pass 4: Checking reference counts Pass 5: Checking group summary information Disk1: 11/3407872 files (0.0% non-contiguous), 259923/13612032 blocks fsck from util-linux 2.28.1 e2fsck 1.43 (17-May-2016) Docker: recovering journal Pass 1: Checking inodes, blocks, and sizes Pass 2: Checking directory structure Pass 3: Checking directory connectivity Pass 4: Checking reference counts Pass 5: Checking group summary information Docker: 11/378256 files (0.0% non-contiguous), 59477/1512448 blocks fsck from util-linux 2.28.1 e2fsck 1.43 (17-May-2016) Log: recovering journal Pass 1: Checking inodes, blocks, and sizes Pass 2: Checking directory structure Pass 3: Checking directory connectivity Pass 4: Checking reference counts Pass 5: Checking group summary information Free blocks count wrong (1156200, counted=1155999). Fix? yes Free inodes count wrong (303093, counted=303081). Fix? yes Log: ***** FILE SYSTEM WAS MODIFIED ***** Log: 23/303104 files (0.0% non-contiguous), 54369/1210368 blocks fsck from util-linux 2.28.1 e2fsck 1.43 (17-May-2016) Scratch: recovering journal Pass 1: Checking inodes, blocks, and sizes Pass 2: Checking directory structure Pass 3: Checking directory connectivity Pass 4: Checking reference counts Pass 5: Checking group summary information Free blocks count wrong (874838, counted=874836). Fix? yes Free inodes count wrong (227125, counted=227123). Fix? yes Scratch: ***** FILE SYSTEM WAS MODIFIED ***** Scratch: 13/227136 files (0.0% non-contiguous), 32428/907264 blocks fsck from util-linux 2.28.1 e2fsck 1.43 (17-May-2016) ThinXR: recovering journal Pass 1: Checking inodes, blocks, and sizes Pass 2: Checking directory structure Pass 3: Checking directory connectivity Pass 4: Checking reference counts Pass 5: Checking group summary information Free blocks count wrong (11863675, counted=10781100). Fix? yes Free inodes count wrong (3025109, counted=2975795). Fix? yes ThinXR: ***** FILE SYSTEM WAS MODIFIED ***** ThinXR: 49325/3025120 files (0.3% non-contiguous), 1318484/12099584 blocks Invoke selinux initialization... Enable selinux to relabel filesystem from initramfs Checking SELinux security contexts: * First booting, filesystem will be relabeled... ","date":"25 February 2021","externalUrl":null,"permalink":"/blog/cisco-8000-software-upgrade-pxe/","section":"Blog","summary":"在之前的文章里， 介绍 install command 升级 Cisco 8000 的方法， 这篇文章记录下使用 PXE bring up 一台新的 Cisco 8000 的过程","title":"CISCO 8000 Software Upgrade Method 2(PXE)","type":"blog"},{"content":"记录一下 LPTS EPFT 这个 feature， LPTS 是用来保护 Cisco XR 设备 CPU 的，防止一些 ARP/DHCP/DNS/ICMP 等攻击流量 punt 到板卡的 CPU，那 LPTS EPFT 这个 feature 使能后会对这些流量进行一些监控， 超过一定速率就会进行一些惩罚。\n配置： # RP/0/RSP0/CPU0:ASR9006-M#show run lpts punt excessive-flow-trap Fri Jan 29 16:42:08.014 UTC lpts punt excessive-flow-trap penalty-rate arp 100 penalty-timeout arp 1 subscriber-interfaces non-subscriber-interfaces 对那些流量进行监控: # RP/0/RSP0/CPU0:ASR9006-M#show lpts punt excessive-flow-trap information Fri Jan 29 16:02:59.820 UTC -------------------------------------------------------------- Police Penalty Rate (pps) Timeout (mins) Protocol Default Config Default Config Punt Reasons -------- -------------- -------------- ---------------- ARP 10 - 15 - ARP Reverse ARP Dynamic ARP Inspection (DAI) ICMP 10 - 15 - ICMP ICMP-local ICMP-app ICMP-control ICMP-default DHCP 10 - 15 - DHCP Snoop Request DHCP Snoop Reply DHCP Broadcast PPPOE 10 - 15 - PPP over Ethernet (PPPoE) PPPoE packets for RSP PPPoE packet/config mismatch PPPoE packet/config mismatch for RSP PPP 10 - 15 - Point-to-Point Protocol (PPP) PPP packets for RSP IGMP 10 - 15 - IGMP IGMP Snoop MLD snooping IPv4/v6 10 - 15 - IP Subscriber (IPSUB) IPv4 options IPv4 FIB IPv4 TTL exceeded IPv4 fragmentation needed IPv4/v6 adjacency IPV4/v6 unknown IFIB UDP-known UDP-listen IPv4 tunnel not configred UDP-default TCP-known TCP-listen TCP-cfg-peer TCP-default Raw-listen Raw-default L2TP 10 - 15 - Layer 2 Tunneling Protocol, version 2 (L2TPv2) L2TPv2-default L2TPv2-known L2TPv3 UNCLASSIFIED 10 - 15 - Unclassified packets Unclassified packets for RSP OSPF 0 - 15 - OSPF-mc-known OSPF-mc-default OSPF-uc-known OSPF-uc-default BGP 0 - 15 - BGP-known BGP-cfg-peer BGP-default 超过多少速率会被惩罚： # 这个监控是基于一种采样算法的, 计算方式如下：（计算公式中有三个参数可调）。也就是说默认速率为 1000 packet / 800ms, 可满足一些正常的 ARP、SSH DHCP 的流量。\n100(sample 0.01) x 2(pick 2 packet) x 5(5 times) = 1000 packets/ 800ms RP/0/RSP0/CPU0:ASR9006-M#run attach 0/0/cpu0 Fri Jan 29 16:17:36.395 UTC attach: Starting session 1 to node 0/0/cpu0 # spp_ui spp-ui\u0026gt; copp table Eviction threshold: 2 \u0026lt;\u0026lt;\u0026lt; change by \u0026#34;lpts punt exces eviction-threshold \u0026lt;\u0026gt;\u0026#34; Report threshold: 5 \u0026lt;\u0026lt;\u0026lt; change by \u0026#34;lpts punt exces report-threshold \u0026lt;\u0026gt;\u0026#34; Max-IPG: 800 \u0026lt;\u0026lt;\u0026lt; change by \u0026#34;lpts punt exce max-flow-gap \u0026lt;\u0026gt;\u0026#34; 惩罚方式 # 主接口 # 对于主而言，超过速率惩罚措施为 15 分钟内来自某 MAC 地址的流量均被 DROP，会有如下 log 显示\n这里的问题在于，如下我们下联设备误 PING 了， 由于 ICMP 的速率可能会达到 2500pps， 和容易处罚该惩罚， 这样就会造成从 peer 接口过来的流量会被全部 drop， 如果起了路由协议，路由协议也会中断。\nRP/0/RP1/CPU0:CORE6-ASR9922-A#show logging | in TRAP Wed Jan 13 07:39:01.788 UTC LC/0/1/CPU0:Jan 13 06:48:24.362 : flowtrap[196]: %OS-FLOWTRAP-4-BAD_ACTOR_MAC_DETECTED : Excessive ICMP-app flow detected from source MAC address 78ba.f96b.eb82 on interface TenGigE0/1/0/1. Traffic from this MAC address will be dropped for 15 minutes. 子接口 # 对于子接口而言， 超过速率惩罚措施为 15 分钟内流量会被限制为 10pps ， 有如下 log 显示\n这个惩罚为， 出方向所有流量都被限速 10pps， 入方向所有 for us 的流量被限速 10pps(穿越流量不受)。\nLC/0/0/CPU0:Jan 12 00:35:58.370 CST: flowtrap[217]: %OS-FLOWTRAP-4-BAD_ACTOR_INTF_DETECTED : Excessive ICMP-app flow detected on interface TenGigE0/0/0/3.38032178. The interface will be penalty-policed at 10 pps for 15 minutes. 默认限速是 10pps， 可以使用命令“lpts punt excessive-flow-trap penalty-rate xx”修改\n默认惩罚时间是 15min， 可以使用命令 lpts punt excessive-flow-trap penalty-timeout xx 修改\n","date":"29 January 2021","externalUrl":null,"permalink":"/blog/lpts-epft-feature/","section":"Blog","summary":"记录一下 LPTS EPFT 这个 feature， LPTS 是用来保护 Cisco XR 设备 CPU 的，防止一些 ARP/DHCP/DNS/ICMP 等攻击流量 punt 到板卡的 CPU，那 LPTS EPFT 这个 feature 使能后会对这些流量进行一些监控， 超过一定速率就会进行一些惩罚。","title":"LPTS EPFT feature","type":"blog"},{"content":"Input error giant A giant frame is any frame whose size exceeds the maximum transmission unit (MTU) Input error runt A runt is a frame that is smaller than the minimum frame size for IEEE-802.3 standard frames. In ethernet thats 64 bytes. Input error jabbers A jabber is a frame longer than 1518 octets (which exclude framing bits, but include FCS octets), which does not end with an even number of octets (alignment error) or has a bad FCS error. Input error fragments Shows the number of packets received incorrectly having a CRC error and a noninteger number of octets. On a LAN, this is usually the result of collisions or a malfunctioning Ethernet device. Input error CRC Indicates that the cyclic redundancy checksum generated by the originating LAN station or far-end device does not match the checksum calculated from the data received. On a LAN, this usually indicates noise or transmission problems on the LAN interface or the LAN bus itself. A high number of CRCs is usually the result of collisions or a station transmitting bad data. Input error collisions Collisions are expected when Ethernet is operating in half duplex mode.both devices use the same approach. Either both devices should auto negotiate both speed and duplex or both devices should set both speed and duplex. Input error symbol A Symbol error means the interface detects an undefined (invalid) Symbol received. Small amounts of symbol errors can be ignored. Large amounts of symbol errors can indicate a bad fiber or Optics. Overrun Shows the number of times that the receiver hardware was incapable of handing received data to a hardware buffer because the input rate exceeded the receiver\u0026#39;s capability to handle the data. Ignored Shows the number of received packets ignored by the interface because the interface hardware ran low on internal buffers. These buffers are different from the system buffers mentioned previously in the buffer description. Broadcast storms and bursts of noise can cause the ignored count to be increased. ","date":"28 January 2021","externalUrl":null,"permalink":"/blog/interface-error-description-giant-jabbers/","section":"Blog","summary":"Input error giant A giant frame is any frame whose size exceeds the maximum transmission unit (MTU) Input error runt A runt is a frame that is smaller than the minimum frame size for IEEE-802.","title":"Interface error description  (giant/jabbers)","type":"blog"},{"content":" Upgrade Method # Cisco 8000 升级方式和其他 XR 产品类似可大致分为三类：\nUSB re-image PXE re-image Install command （本文 log 一下用 install command 升级的过程） 准备工作 # 下载安装包，以及 optional RPM 包。并 copy 到设备主引擎 harddisk: 中。\nRP/0/RP0/CPU0:ios#dir harddisk: Wed Jan 20 06:45:46.006 UTC Directory of harddisk: 15 -rw-r--r--. 1 737280 Jan 20 06:44 8000-optional-rpms.7.0.14.tar \u0026lt;\u0026lt;\u0026lt;\u0026lt; 524289 drwxrwxrwx. 2 4096 Jan 20 05:00 dumper 13 -rw-r--r--. 1 987228160 Jan 20 05:53 8000-x64-7.0.14.iso \u0026lt;\u0026lt;\u0026lt; 14 -rw-r--r--. 1 1003520 Jan 20 06:44 8000-k9sec-rpms.7.0.14.tar \u0026lt;\u0026lt;\u0026lt;\u0026lt; 3407873 drwxr-xr-x. 2 4096 Jan 20 05:00 showtech 11 drwx------. 2 16384 Jan 20 04:49 lost+found 1310721 drwx------. 3 4096 Jan 20 04:58 ima 3670017 drwxrwxrwx. 5 4096 Jan 20 05:25 cisco_support 655361 drwxr-xr-x. 3 4096 Jan 20 05:00 pam 2883585 drwxrwxrwx. 2 4096 Jan 20 04:54 shutdown 12 -rw-rw-rw-. 1 31 Jan 20 04:54 debug_shell_client.log 262145 drwxrwxrwx. 2 4096 Jan 20 04:55 .sppdc 3932161 drwxrwxrwx. 2 4096 Jan 20 04:54 nvram 如上所示， ISO 包中已经包含了一些基础的功能包，如 BGP ISIS OSPF， 还有些存在于 optional 的 tar 包中。\nInstall Replace(iso) ****** # Command\n#install package replace harddisk:/8000-x64-7.0.14.iso synchronous or #install replace harddisk:/8000-x64-7.0.14.iso synchronous //install package replace VS install replace install replace 在安装完ISO文件后直接重启完成更新， 好处就是不用输入“install apply”让设备重启了， 但是这样做你就无法安装其他功能包， 只能在重启后继续安装功能包，另外install replace 命令多用于用gISO升级， 因为在制作gISO的时候会将所有的rpm压进去，install replace 直接升级重启设备就行。 RP/0/RP1/CPU0:8808# install replace /harddisk:/8000-x64-7.0.14.iso synchron$ Wed Jan 20 03:58:26.400 UTC Once the packaging dependencies have been determined, the install operation may have to reload the system. \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; If you want to control the timing of system reload, you must not continue, but use the \u0026#39;install package replace\u0026#39; command instead, followed by \u0026#39;install apply\u0026#39;. Continue? [yes/no]:[yes] no LOG\nRP/0/RP0/CPU0:ios#show platform Wed Jan 20 06:23:35.956 UTC Node Type State Config state -------------------------------------------------------------------------------- 0/RP0/CPU0 8201-SYS(Active) IOS XR RUN NSHUT 0/RP0/BMC0 8201-SYS OPERATIONAL NSHUT 0/PM0 PSU2KW-ACPE OPERATIONAL NSHUT 0/PM1 PSU2KW-ACPE OPERATIONAL NSHUT 0/FT0 FAN-1RU-PE OPERATIONAL NSHUT 0/FT1 FAN-1RU-PE OPERATIONAL NSHUT 0/FT2 FAN-1RU-PE OPERATIONAL NSHUT 0/FT3 FAN-1RU-PE OPERATIONAL NSHUT 0/FT4 FAN-1RU-PE OPERATIONAL NSHUT RP/0/RP0/CPU0:ios#show install active summary Wed Jan 20 06:23:38.941 UTC Active Packages: XR: 171 All: 1188 Label: 7.0.12 Software Hash: 38bad736984debbde3000e25d64c8071 Optional Packages Version ---------------------------------------------------- --------------------------- xr-8000-mcast 7.0.12v1.0.0-1 xr-8000-netflow 7.0.12v1.0.0-1 xr-bgp 7.0.12v1.0.0-1 xr-cdp 7.0.12v1.0.0-1 xr-eigrp 7.0.12v1.0.0-1 xr-healthcheck 7.0.12v1.0.0-1 xr-ipsla 7.0.12v1.0.0-1 xr-is-is 7.0.12v1.0.0-1 xr-lldp 7.0.12v1.0.0-1 xr-mcast 7.0.12v1.0.0-1 xr-mpls-oam 7.0.12v1.0.0-1 xr-netflow 7.0.12v1.0.0-1 xr-ospf 7.0.12v1.0.0-1 xr-perfmgmt 7.0.12v1.0.0-1 xr-rip 7.0.12v1.0.0-1 xr-telnet 7.0.12v1.0.0-1 xr-track 7.0.12v1.0.0-1 RP/0/RP0/CPU0:ios# RP/0/RP0/CPU0:ios# RP/0/RP0/CPU0:ios# RP/0/RP0/CPU0:ios#install package re remove replace RP/0/RP0/CPU0:ios#install package replace harddisk:/8000-x64-7.0.14.iso synchronous Wed Jan 20 06:24:03.218 UTC Starting: install package replace /harddisk:/8000-x64-7.0.14.iso Packaging operation 1.1.1 The install operation will continue in the background Press Ctrl-C to return to the exec prompt. This will not cancel the install operation Current activity: Initializing ... Current activity: Veto check .............. .. Current activity: Package add or other package operation ............ ..................... .............. Packaging operation 1.1.1: \u0026#39;install package replace /harddisk:/8000-x64-7.0.14.iso\u0026#39; completed without error Exception in thread Thread-1: Traceback (most recent call last): File \u0026#34;tools/python3/shared/obj-x86_64-thinxr/python_tree/cpython/Lib/threading.py\u0026#34;, line 914, in _bootstrap_inner File \u0026#34;tools/python3/shared/obj-x86_64-thinxr/python_tree/cpython/Lib/threading.py\u0026#34;, line 862, in run File \u0026#34;infra/install/src/_xrinstall/_inotify.py\u0026#34;, line 197, in _wait_for_subproc File \u0026#34;infra/install/src/_xrinstall/_inotify.py\u0026#34;, line 267, in stop File \u0026#34;infra/install/src/_xrinstall/_inotify.py\u0026#34;, line 207, in _kill_proc AttributeError: \u0026#39;NoneType\u0026#39; object has no attribute \u0026#39;terminate\u0026#39; RP/0/RP0/CPU0:ios# RP/0/RP0/CPU0:ios# RP/0/RP0/CPU0:ios# RP/0/RP0/CPU0:ios# RP/0/RP0/CPU0:ios# RP/0/RP0/CPU0:ios# RP/0/RP0/CPU0:ios# RP/0/RP0/CPU0:ios#show install request Wed Jan 20 06:36:09.506 UTC User request: install package replace /harddisk:/8000-x64-7.0.14.iso Operation ID: 1.1.1 State: Success since 2021-01-20 06:35:42 UTC Current activity: Await user input Time started: 2021-01-20 06:35:42 The following actions are available: install package add install package remove install package upgrade install package downgrade install package replace install package rollback install package abort latest install package abort all-since-apply install apply reload Install add option rpm packet ****** # 安装 optional 的 rpm 包的时候有三种方法：\nOn Box Directory（使用本地路径的方式） Local Repository Remote Repository On Box Directory # RP/0/RP0/CPU0:P1#install source /harddisk:/TELNET xr-telnet-7.0.1.131Sv1.0.0-1.x86_64.rpm Remote Repository # 这里以 centos 为例子， 创建一个 remote repo：\n//Centos [root@xuxing239 ~]# yum -y install httpd createrepo [root@xuxing239 ~]# systemctl start httpd //将你的rpm包解压缩后放到路径：/var/www/html/下 [root@xuxing239 ~]# createrepo --database /var/www/html/ Saving Primary metadata Saving file lists metadata Saving other metadata Generating sqlite DBs Sqlite DBs complete [root@xuxing239 ~]# //Cisco 8000 remove repo 配置： RP/0/RP0/CPU0:ios#show run install install repository REPO url http://6.2.41.10 Local repository **** # RP/0/RP0/CPU0:ios#run Wed Jan 20 06:45:58.984 UTC [node0_RP0_CPU0:~]$cd /harddisk\\: [node0_RP0_CPU0:/harddisk:]$mkdir repo [node0_RP0_CPU0:/harddisk:]$ [node0_RP0_CPU0:/harddisk:]$ [node0_RP0_CPU0:/harddisk:]$mv 8000-optional-rpms.7.0.14.tar repo/ [node0_RP0_CPU0:/harddisk:]$mv 8000-k9sec-rpms.7.0.14.tar repo/ [node0_RP0_CPU0:/harddisk:]$ [node0_RP0_CPU0:/harddisk:]$ [node0_RP0_CPU0:/harddisk:]$cd repo/ [node0_RP0_CPU0:/harddisk:/repo]$ [node0_RP0_CPU0:/harddisk:/repo]$ [node0_RP0_CPU0:/harddisk:/repo]$ls 8000-k9sec-rpms.7.0.14.tar 8000-optional-rpms.7.0.14.tar [node0_RP0_CPU0:/harddisk:/repo]$ [node0_RP0_CPU0:/harddisk:/repo]$ [node0_RP0_CPU0:/harddisk:/repo]$ [node0_RP0_CPU0:/harddisk:/repo]$ [node0_RP0_CPU0:/harddisk:/repo]$ [node0_RP0_CPU0:/harddisk:/repo]$ [node0_RP0_CPU0:/harddisk:/repo]$tar -xvf 8000-k9sec-rpms.7.0.14.tar optional-rpms/k9sec/ optional-rpms/k9sec/xr-k9sec-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/k9sec/xr-k9sec-7dee261fe41a15d8-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/k9sec/xr-k9sec-8201-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/k9sec/xr-k9sec-8202-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/k9sec/xr-k9sec-8800-lc-36fh-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/k9sec/xr-k9sec-8800-lc-48h-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/k9sec/xr-k9sec-8800-rp-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/k9sec/xr-k9sec-c1d82c6c34a39c33-7.0.14v1.0.0-1.x86_64.rpm [node0_RP0_CPU0:/harddisk:/repo]$tar -xvf 8000-optional-rpms.7.0.14.tar optional-rpms/cdp/ optional-rpms/cdp/xr-cdp-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/cdp/xr-cdp-7dee261fe41a15d8-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/cdp/xr-cdp-8201-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/cdp/xr-cdp-8202-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/cdp/xr-cdp-8800-lc-36fh-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/cdp/xr-cdp-8800-lc-48h-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/cdp/xr-cdp-8800-rp-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/cdp/xr-cdp-c1d82c6c34a39c33-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/cdp/xr-cdp-fbaabb7554875ebc-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/healthcheck/ optional-rpms/healthcheck/xr-healthcheck-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/healthcheck/xr-healthcheck-7dee261fe41a15d8-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/healthcheck/xr-healthcheck-8201-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/healthcheck/xr-healthcheck-8202-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/healthcheck/xr-healthcheck-8800-lc-36fh-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/healthcheck/xr-healthcheck-8800-lc-48h-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/healthcheck/xr-healthcheck-8800-rp-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/healthcheck/xr-healthcheck-c1d82c6c34a39c33-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/telnet/ optional-rpms/telnet/xr-telnet-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/telnet/xr-telnet-7dee261fe41a15d8-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/telnet/xr-telnet-8201-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/telnet/xr-telnet-8202-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/telnet/xr-telnet-8800-lc-36fh-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/telnet/xr-telnet-8800-lc-48h-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/telnet/xr-telnet-8800-rp-7.0.14v1.0.0-1.x86_64.rpm optional-rpms/telnet/xr-telnet-c1d82c6c34a39c33-7.0.14v1.0.0-1.x86_64.rpm [node0_RP0_CPU0:/harddisk:/repo]$ [node0_RP0_CPU0:/harddisk:/repo]$ [node0_RP0_CPU0:/harddisk:/repo]$ [node0_RP0_CPU0:/harddisk:/repo]$ [node0_RP0_CPU0:/harddisk:/repo]$ls 8000-k9sec-rpms.7.0.14.tar 8000-optional-rpms.7.0.14.tar optional-rpms [node0_RP0_CPU0:/harddisk:/repo]$rm -rf 8000-k9sec-rpms.7.0.14.tar [node0_RP0_CPU0:/harddisk:/repo]$rm -rf 8000-optional-rpms.7.0.14.tar [node0_RP0_CPU0:/harddisk:/repo]$ [node0_RP0_CPU0:/harddisk:/repo]$ [node0_RP0_CPU0:/harddisk:/repo]$ [node0_RP0_CPU0:/harddisk:/repo]$ [node0_RP0_CPU0:/harddisk:/repo]$ [node0_RP0_CPU0:/harddisk:/repo]$ [node0_RP0_CPU0:/harddisk:/repo]$exit logout RP/0/RP0/CPU0:ios# RP/0/RP0/CPU0:ios#conf Wed Jan 20 06:48:17.088 UTC RP/0/RP0/CPU0:ios(config)#install RP/0/RP0/CPU0:ios(config-install)# repository local-repo RP/0/RP0/CPU0:ios(config-repository)# url file:///harddisk:/repo RP/0/RP0/CPU0:ios(config-repository)# ! RP/0/RP0/CPU0:ios(config-repository)# RP/0/RP0/CPU0:ios(config-repository)# RP/0/RP0/CPU0:ios(config-repository)#commit Wed Jan 20 06:48:20.909 UTC RP/0/RP0/CPU0:ios(config-repository)# RP/0/RP0/CPU0:ios#show install available | in local-repo \u0026lt;\u0026lt;\u0026lt;\u0026lt; check repo packet Wed Jan 20 06:49:47.431 UTC xr-cdp x86_64 7.0.14v1.0.0-1 local-repo xr-healthcheck x86_64 7.0.14v1.0.0-1 local-repo xr-k9sec x86_64 7.0.14v1.0.0-1 local-repo xr-telnet x86_64 7.0.14v1.0.0-1 local-repo RP/0/RP0/CPU0:ios# RP/0/RP0/CPU0:ios#install package add xr-cdp xr-healthcheck xr-k9sec xr-telnet synchronous Wed Jan 20 06:50:12.608 UTC Starting: install package add xr-cdp xr-healthcheck xr-k9sec xr-telnet Packaging operation 1.1.2 The install operation will continue in the background Press Ctrl-C to return to the exec prompt. This will not cancel the install operation Current activity: Initializing Current activity: Veto check .. Current activity: Package add or other package operation . Packaging operation 1.1.2: \u0026#39;install package add xr-cdp xr-healthcheck xr-k9sec xr-telnet\u0026#39; completed without error Install apply | install commit # RP/0/RP0/CPU0:ios#install apply Wed Jan 20 06:51:47.581 UTC This install operation will reload the system. Continue? [yes/no]:[yes] yes Install apply operation has started Install operation will continue in the background RP/0/RP0/CPU0:ios# RP/0/RP0/CPU0:ios# RP/0/RP0/CPU0:ios# RP/0/RP0/CPU0:ios# RP/0/RP0/CPU0:ios# RP/0/RP0/CPU0:ios#RP/0/RP0/CPU0:Jan 20 06:52:03.782 UTC: instorch[153]: %INFRA-INSTALL-2-SYSTEM_RELOAD : As part of an install operation, a full system reload will take place in order to apply the installed software. Preparing system for backup. This may take a few minutes especially for large configurations. Status report: node0_RP0_CPU0: BACKUP INPROGRESS Status report: node0_RP0_CPU0: BACKUP HAS COMPLETED SUCCESSFULLY [Done] //重启结束后install commit 参考 # Software Installation Guide for Cisco 8000 Series Routers, IOS XR Release 7.0.x\nCisco_8000_Series_Upgrade_MOP_7014.pdf\n","date":"20 January 2021","externalUrl":null,"permalink":"/blog/cisco-8000-software-upgrade-install-command/","section":"Blog","summary":"Upgrade Method # Cisco 8000 升级方式和其他 XR 产品类似可大致分为三类：","title":"CISCO 8000 Software Upgrade Method 1(install command)","type":"blog"},{"content":"#yum -y install tcpdump #tcpdump -i ens32 host 10.75.49.33 -w 332.pcap ","date":"20 January 2021","externalUrl":null,"permalink":"/blog/tcpdump/","section":"Blog","summary":"#yum -y install tcpdump #tcpdump -i ens32 host 10.","title":"Tcpdump 抓包","type":"blog"},{"content":"","date":"20 January 2021","externalUrl":null,"permalink":"/tags/windows/","section":"Tags","summary":"","title":"Windows","type":"tags"},{"content":"目前还是用WINDOWS作为办公系统， 所以想着记录下目前我在WINDOWS常用有软件，换机的时候可以快速恢复。\nEarTrumpet # 用于调整软件声音输出的硬件。\nSumatraPDF # PDF阅读软件，轻量级，可以记住上次未关闭的PDF文件，下次打开时候自动打开。\nPicPick # 截图工具，提供简单的图片处理功能，例如加文字，加马赛克等\nA7SM.exe # 配置脚本生成器。\nIDM（Internet Download Manager） # 最好的下载工具，付费买个整身使用权，美滋滋。\n7-Zip (文件压缩、解压缩工具) # Everything（文件检索工具） # HedEx （华为文档工具） # Chrome（主力浏览器） # Notpad++（最好的log 查看工具） # OBS（录屏工具） # Secret CRT/Xshell (网工必装软件) # WinSCP(用于往LINUX主机传文件) # TeamViewer/Cisco Webex(多用于远程控制软件) # FileZilla (FTP/SFTP cilent) # PotPlayer(视频播放软件) # Wirshark（抓包软件） # Office 365 全家桶 # 云盘 # OneDrive(免费5G+10G邀请奖励【淘宝几块钱买的】)-主要用于文档同步 百度云-主要用于视频、大文件备份 ICloud-照片备份 QTTabBar(资源管理器) # ","date":"20 January 2021","externalUrl":null,"permalink":"/blog/windows-software/","section":"Blog","summary":"目前还是用WINDOWS作为办公系统， 所以想着记录下目前我在WINDOWS常用有软件，换机的时候可以快速恢复。","title":"WINDOWS常用软件","type":"blog"},{"content":"[root@xuxing ~]#yum -y install expect [root@xuxing ~]# cat 123 #!/bin/expect spawn ssh root@10.124.45.123 expect \u0026#34;password:\u0026#34; send \u0026#34;cisco\\r\u0026#34; interact [root@xuxing ~]# chmod 777 123 [root@xuxing ~]# [root@xuxing ~]# [root@xuxing ~]# ./123 spawn ssh root@10.124.45.123 root@10.124.45.123\u0026#39;s password: Last login: Fri Nov 20 04:53:03 2020 from 10.140.0.42 [root@nso ~]# [root@nso ~]# 四个命令的解释 # send：用于向进程发送字符串\nexpect：从进程接收字符串\nspawn：启动新的进程\ninteract：允许用户交互，如果没有该命令会直接终端 session，返回之前的终端\n","date":"20 November 2020","externalUrl":null,"permalink":"/blog/shell-ssh-auto/","section":"Blog","summary":"[root@xuxing ~]#yum -y install expect [root@xuxing ~]# cat 123 #!","title":"Shell脚本实现ssh自动登录","type":"blog"},{"content":"由于测试，需要安装一个 syslog server， Windows 上的免费软件搜到了 KIWI Syslog Server，但是需要注册，然后还得去等两天的审核，想想还是算了不折腾了，打算在 Linux 上装一个，还好过滤看 log。\nInstall # [root@xuxing ~]#yum install rsyslog Configure # [root@xuxing ~]# vi /etc/rsyslog.conf $ModLoad imudp $UDPServerRun 514 [root@xuxing ~]# systemctl restart rsyslog [root@xuxing ~]# systemctl enable rsyslog [root@xuxing ~]# firewall-cmd --permanent --add-port=514/udp [root@xuxing ~]# firewall-cmd --reload [root@xuxing ~]# netstat -antup | grep 514 udp 0 0 0.0.0.0:514 0.0.0.0:* 623/rsyslogd udp6 0 0 :::514 :::* 623/rsyslogd //check syslog file [root@xuxing ~]# tail -f -n 1 /var/log/messages Nov 8 14:38:57 9006j UTC: 13132: LC/0/3/CPU0:Nov 8 14:38:57.197 UTC: fib_mgr[192]: %ROUTING-FIB-3-PLATF_UPD_FAIL : FIB platform update failed: Obj=DATA_TYPE_LABEL_INFO[ptr 配置 # $template TMP,\u0026#34;%timegenerated% %FROMHOST% %msg%\\n\u0026#34; local7.* /var/log/syslog;TMP If $fromhost-ip == ‘xxx.xxx.xxx.xxx’ or $fromhost-ip == ‘xxx.xxx.xxx.xxx’ then /home/log/archive.log;templateName ","date":"8 November 2020","externalUrl":null,"permalink":"/blog/setup-syslog-server-on-centos-7/","section":"Blog","summary":"由于测试，需要安装一个 syslog server， Windows 上的免费软件搜到了 KIWI Syslog Server，但是需要注册，然后还得去等两天的审核，想想还是算了不折腾了，打算在 Linux 上装一个，还好过滤看 log。","title":"Setup SysLog Server on CentOS 7","type":"blog"},{"content":"","date":"1 November 2020","externalUrl":null,"permalink":"/tags/mpls-te/","section":"Tags","summary":"","title":"Mpls-Te","type":"tags"},{"content":"reoptimize timers delay cleanup 60 reoptimize timers delay installation 60 reoptimize timers delay path-protection 50 Install delay: How much time the head end waits before it \u0026#34;activates\u0026#34; the reoptimized LSP after receiving the RESV. This gives some time to mid/tail nodes to program their fowardng. Cleanup delay: How much time the \u0026#34;old\u0026#34; LSP is kept around after the new reoptimize LSP has been installed. This makes sure there\u0026#39;s no longer and traffic flowing over the \u0026#34;old\u0026#34; LSP before tearing it down Path-protection Delays the time between path protection switchover event and tunnel reoptimization. //default values: cleanup delay: 20 installation delay: 20 path-protection: 180 2021-0709 更新 #### 测试log 记录： RP/0/0/CPU0:Jul 8 15:52:32.563 UTC: ifmgr[228]: %PKT_INFRA-LINK-5-CHANGED : Interface GigabitEthernet0/0/0/2, changed state to Administratively Down RP/0/0/CPU0:Jul 8 15:52:32.943 UTC: config[65746]: %MGBL-CONFIG-6-DB_COMMIT : Configuration committed by user \u0026#39;cisco\u0026#39;. Use \u0026#39;show configuration commit changes 1000000036\u0026#39; to view the changes. RP/0/0/CPU0:BR02_R2# show mpls traff$ Thu Jul 8 15:53:55.588 UTC Tunnel LSP Destination Source Tun FRR LSP Path Name ID Address Address State State Role Prot ----------------- ----- --------------- --------------- ------ ------ ---- ----- tunnel-te1 22 10.100.0.4 10.100.0.2 up Inact Head Ready tunnel-te1 23 10.100.0.4 10.100.0.2 up Inact Head Ready Jul 8 15:52:32.583 mpls_te/unique 0/0/CPU0 6# t1 T:1, Type:TE, switchover Successful (L:21-\u0026gt;L:22) reason:Path Error with PSR flag Rcvd Jul 8 15:55:32.601 mpls_te/unique 0/0/CPU0 5# t1 T:1, Type:TE, pp reopt timer expired. scheduling for reoptimization Jul 8 15:55:32.601 mpls_te/unique 0/0/CPU0 11# t1 T:1, Type:TE, [REOPT] L:24, better cumulative metric Jul 8 15:55:32.681 mpls_te/unique 0/0/CPU0 7# t1 T:1, Type:TE, started install timer:20 secs, 100 msec, [CURRENT] L:22, [REOPT] L:24 Jul 8 15:55:52.799 mpls_te/unique 0/0/CPU0 16# t1 T:1, Type:TE, Tunnel RW now owned by LSP id 24 Jul 8 15:55:52.799 mpls_te/unique 0/0/CPU0 5# t1 T:1, Type:TE, install timer expired; install RW for [REOPT] L:24 and start cleanup timer:20 secs Jul 8 15:55:52.799 mpls_te/unique 0/0/CPU0 5# t1 T:1, Type:TE, pp lspid(22) does not match the lspid of the current lsp(24), stdby L:23 Jul 8 15:55:52.979 mpls_te/unique 0/0/CPU0 168# t15 Type:p2p, head, STANDBY, T:1, L:25, S:10.100.0.2, E:10.100.0.2, D:10.100.0.4, Sent event (PATH) Jul 8 15:55:52.959 mpls_te/unique 0/0/CPU0 14# t1 T:1, Type:TE, standby LSP (diversity type:6) up (Curr L:24, standby L:25) Jul 8 15:56:12.918 mpls_te/unique 0/0/CPU0 31# t1 ADMISSION:3972: rrr_lm_destroy_s2l: Destroying T:1, L:22 [4 tunnels total left, p2mp 4294967295] RP/0/0/CPU0:BR02_R2#show mpls traffic-eng tunnels 1 Thu Jul 8 16:41:34.432 UTC Name: tunnel-te1 Destination: 10.100.0.4 Ifhandle:0x70 Signalled-Name: BR02_R2_t1 Status: Admin: up Oper: up Path: valid Signalling: connected path option 100, type dynamic (Basis for Setup, path weight 10000) Accumulative metrics: TE 10000 IGP 10000 Delay 300000 path option 100, type dynamic (Basis for Standby, path weight 20000) Accumulative metrics: TE 20000 IGP 20000 Delay 600000 path option 200, type dynamic G-PID: 0x0800 (derived from egress interface properties) Bandwidth Requested: 0 kbps CT0 Creation Time: Thu Jul 8 09:41:49 2021 (06:59:45 ago) Config Parameters: Bandwidth: 0 kbps (CT0) Priority: 7 7 Affinity: 0x0/0xffff Metric Type: TE (global) Path Selection: Tiebreaker: Min-fill (default) Hop-limit: disabled Cost-limit: disabled Delay-limit: disabled Path-invalidation timeout: 10000 msec (default), Action: Tear (default) AutoRoute: enabled LockDown: disabled Policy class: not set Forward class: 0 (not enabled) Forwarding-Adjacency: disabled Autoroute Destinations: 0 Loadshare: 0 equal loadshares Auto-bw: disabled Auto-Capacity: Disabled: Fast Reroute: Disabled, Protection Desired: None Path Protection: Enabled BFD Fast Detection: Disabled Reoptimization after affinity failure: Enabled Soft Preemption: Disabled History: Tunnel has been up for: 03:05:18 (since Thu Jul 08 13:36:16 UTC 2021) Current LSP: Uptime: 00:46:02 (since Thu Jul 08 15:55:32 UTC 2021) Reopt. LSP: Last Failure: LSP not signalled, identical to the [CURRENT] LSP Date/Time: Thu Jul 08 12:03:02 UTC 2021 [04:38:32 ago] Standby Reopt LSP: Last Failure: LSP not signalled, identical to the [STANDBY] LSP Date/Time: Thu Jul 08 12:03:02 UTC 2021 [04:38:32 ago] First Destination Failed: 10.100.0.4 Prior LSP: ID: 22 Path Option: 100 Removal Trigger: reoptimization completed Standby LSP: Uptime: 00:45:42 (since Thu Jul 08 15:55:52 UTC 2021) Path info (IS-IS 1 level-2): Node hop count: 1 Hop0: 10.100.4.13 Hop1: 10.100.0.4 Standby LSP Path info (IS-IS 1 level-2), Oper State: Up : Node hop count: 2 Hop0: 10.100.4.5 Hop1: 10.100.4.10 Hop2: 10.100.0.4 Note: 系统会每间隔一定时间默认3600s进行重优化， 使用以下命令查看下一次重优化时间：\nRP/0/0/CPU0:BR02_R2#show mpls traffic-eng tunnels summary | in reop Thu Jul 8 17:50:49.477 UTC Periodic reoptimization: every 180 seconds, next in 130 seconds RP/0/0/CPU0:BR02_R2# ","date":"1 November 2020","externalUrl":null,"permalink":"/blog/notes-about-reoptimize-timer/","section":"Blog","summary":"reoptimize timers delay cleanup 60 reoptimize timers delay installation 60 reoptimize timers delay path-protection 50 Install delay: How much time the head end waits before it \u0026#34;activates\u0026#34; the reoptimized LSP after receiving the RESV.","title":"Notes about reoptimize timer","type":"blog"},{"content":" 免密登录设置：\n进入到我的 home 目录 cd ~/.ssh 生成 ssh 免登陆秘钥 ssh-keygen -t rsa （四个回车）执行完这个命令后，会生成两个文件 id_rsa（私钥）、id_rsa.pub（公钥） 将公钥拷贝到要免登陆的机器上 将公钥添加到要免登陆机器的.ssh 文件夹下的 authorized_keys 中,确保该文件权限为 600. cat id_rsa.pub \u0026raquo; authorized_keys //SSH client [root@localhost ~]# cd .ssh [root@localhost .ssh]# ls authorized_keys known_hosts [root@localhost .ssh]# ssh-keygen -t rsa \u0026lt;\u0026lt;\u0026lt; 默认是2024 -d 可以修改 -C 加注释 [root@localhost .ssh]# ls authorized_keys id_rsa id_rsa.pub known_hosts [root@localhost .ssh]# scp id_rsa.pub root@10.124.45.85:/root root@10.124.45.85\u0026#39;s password: id_rsa.pub 100% 408 134.2KB/s 00:00 //SSH server [root@localhost ~]# cat id_rsa.pub \u0026gt;\u0026gt; .ssh/authorized_keys [root@localhost ~]# ","date":"18 October 2020","externalUrl":null,"permalink":"/blog/ssh-without-password/","section":"Blog","summary":"免密登录设置：","title":"SSH 免密登陆","type":"blog"},{"content":"Cisco IOS XRv 9000路由器是一款虚拟路由器，部署在运行64位IOS XR软件的x86服务器硬件上的虚拟机（VM）实例上。Cisco IOS XRv 9000路由器以虚拟化的形式提供传统的提供商边缘（PE）服务以及虚拟路由反射器（vRR）功能 。\n这里简单记录下在ESXI 上的安装过程。\n首先去官网下载安装包，四个安装包下载其一即可，分别为default or for vRR两类, 然后是否支持VGA接口。\n其中default是用于vPE路由器使用的，vRR是用于路由反射器。\n解压缩后有三个安装文件.iso .ova .qcow2. 如果要安装在ESXI上只能用.iso的或者.ova文件。\n我这里使用的是.iso， 上传iso到ESXI，创建虚机并配置如下设备：\n- Harddisk ， IDE 类型- CD drive 挂载XRv 9000的iso镜像文件- 添加至少4个网卡，类型为E1000， 第一个是XRv 9000的MGMT接口，第二个第三个暂时没有用到， 从第四个开始是业务口编号从Gi0/0/0/0 开始 - 添加3个串口，第一个为XR console口，第二个为AUX 口，第三个为sysadmin 口. 串口配置如下：Telnet地址为EXSI地址， 端口号为1024以上接口，并在vCenter上将防火墙放开。\n配置完成后就可以启动该虚机，等待至少10分钟安装完成，telnet第一个串口即可访问XR.\n//参考以下官方文档 Cisco IOS XRv 9000路由器的发行说明，IOS XR版本7.1.1 Cisco IOS XRv 9000 Router Installation and Configuration Guide RP/0/RP0/CPU0:ios#show ip int br Fri Oct 16 16:33:00.400 UTC Interface IP-Address Status Protocol Vrf-Name MgmtEth0/RP0/CPU0/0 10.75.49.236 Up Up default GigabitEthernet0/0/0/0 unassigned Shutdown Down default RP/0/RP0/CPU0:ios# RP/0/RP0/CPU0:ios#show platform Fri Oct 16 16:33:02.899 UTC Node Type State Config state -------------------------------------------------------------------------------- 0/0/CPU0 R-IOSXRV9000-LC-C IOS XR RUN NSHUT 0/RP0/CPU0 R-IOSXRV9000-RP-C(Active) IOS XR RUN NSHUT RP/0/RP0/CPU0:ios#show version Fri Oct 16 16:33:09.825 UTC Cisco IOS XR Software, Version 6.6.2 Copyright (c) 2013-2019 by Cisco Systems, Inc. Build Information: Built By : ahoang Built On : Fri Apr 26 15:47:48 PDT 2019 Built Host : iox-ucs-033 Workspace : /auto/srcarchive16/prod/6.6.2/xrv9k/ws Version : 6.6.2 Location : /opt/cisco/XR/packages/ cisco IOS-XRv 9000 () processor System uptime is 1 day 6 hours 11 minutes RP/0/RP0/CPU0:ios# ","date":"16 October 2020","externalUrl":null,"permalink":"/blog/xrv-9000-install/","section":"Blog","summary":"Cisco IOS XRv 9000路由器是一款虚拟路由器，部署在运行64位IOS XR软件的x86服务器硬件上的虚拟机（VM）实例上。Cisco IOS XRv 9000路由器以虚拟化的形式提供传统的提供商边缘（PE）服务以及虚拟路由反射器（vRR）功能 。","title":"ESXI上安装Cisco XRv 9000","type":"blog"},{"content":" Using COA, Change of Authorization for Access and BNG platforms\nhttps://community.cisco.com/t5/service-providers-documents/using-coa-change-of-authorization-for-access-and-bng-platforms/ta-p/3121215\n","date":"29 September 2020","externalUrl":null,"permalink":"/blog/coa-bng/","section":"Blog","summary":"Using COA, Change of Authorization for Access and BNG platforms","title":"Using COA, Change of Authorization for Access and BNG platforms","type":"blog"},{"content":"喜大普奔，XR 终于出了内置的 Packet Tracer 工具了（类似的 XE 中也提供类似的 feature，不过应该是很早就支持了）。该工具作用是用于跟踪数据包进入路由器后经过的组件,监视数据包信息，查找数据包丢失或最后一次见到的位置 .\n如我们常用的 ACL 匹配数据包一样，需要设定特定的匹配条件，然后执行该内置的工具进行数据包的匹配。\nPacket Tracer Conditions - Offset/Value/Mask # 如何生成这个匹配条件，我们提供了一个 web 工具，如下，包含丰富的数据包类型：\n该 Web 工具发布在 Github，可以参考以下 link 完成安装使用：\nhttps://github.com/xr-packet-tracer/xr-embedded-packet-tracer-condition-generator\n[root@xuxing ~]# wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash [root@xuxing ~]# nvm install 12.14.1 \u0026lt;\u0026lt;\u0026lt; 安装12.14.1的node [root@xuxing ~]# git clone https://github.com/xr-packet-tracer/xr-embedded-packet-tracer-condition-generator [root@xuxing ~]# cd xr-embedded-packet-tracer-condition-generator/ [root@xuxing xr-embedded-packet-tracer-condition-generator]# npm install [root@xuxing xr-embedded-packet-tracer-condition-generator]# npm start Compiled successfully! You can now view packet-tracer-condition in the browser. Local: http://localhost:3000/ On Your Network: http://10.75.49.238:3000/ Note that the development build is not optimized. To create a production build, use npm run build. 2023-01-26 更新如下： 上述 install 过程是在一台 centos7 上操作了，默认安装 nvm 后 node 和 npm 的 version 都很高；这样就导致后续执行 npm install 和 start 的时候会有很多的报错，导致服务起不来，所以这里使用了nvm install 12.14.1 更改 node 的 version 为 12.14.1，这个时候执行 node -v 和 npm -v 就会看到以下的版本：\n$ node -v v12.14.1 $ npm -v 6.13.4 后续我又尝试在 MAC OS 上装了一遍，发现 MAC OS 上即使 node/npm 的 version 很高有报错， 最后的服务也可以起起来，不得不服！！！\n# brew install node # git clone https://github.com/xr-packet-tracer/xr-embedded-packet-tracer-condition-generator # npm install # npm start ~ ❯ npm -v 9.3.1 ~ ❯ node -v v19.5.0 ~ ❯ Packet Trace Use Case # 这里使用一个很简单的环境测试下这个 feature，用来抓取 ICMP 数据包进入路由器后的路径。\nRP/0/RSP0/CPU0:9901-2#packet-trace condition interface tenGigE 0/0/0/30 RP/0/RSP0/CPU0:9901-2#packet-trace condition 1 Offset 23 Value 0x01 Mask 0xff RP/0/RSP0/CPU0:9901-2#packet-trace condition 2 Offset 26 Value 0x7b7b7a02 Mask 0xffffffff RP/0/RSP0/CPU0:9901-2#packet-trace condition 3 Offset 30 Value 0x7b7b7a01 Mask 0xffffffff RP/0/RSP0/CPU0:9901-2#packet-trace start RP/0/RSP0/CPU0:9901-2#ping 123.123.122.2 count 1000 Wed Aug 26 04:11:01.157 HKT Type escape sequence to abort. Sending 1000, 100-byte ICMP Echos to 123.123.122.2, timeout is 2 secondsuccess rate is 100 percent (1000/1000), round-trip min/avg/max = 1/1/12 ms RP/0/RSP0/CPU0:9901-2#show packet-trace results Wed Aug 26 04:11:14.893 HKT T: D - Drop counter; P - Pass counter Location | Source | Counter | T | Last-Attribute | Count ------------ ------------ ------------------------- - ---------------------------------------- --------------- 0/0/CPU0 NP1 PACKET_MARKED P TenGigE0_0_0_30 1000 0/0/CPU0 NP1 PACKET_TO_PUNT P 1000 0/RSP0/CPU0 SPP_PD PKT_SPP_PD_PUNT_DROP D 1 Other userful command # // 清除之前的一些设置 #packet-trace atop #clear packet-trace conditions all #clear packet-trace counters all //show command #show packet-trace status #show packet-trace status detail #show packet-trace descriptions #show packet-trace results counter PACKET_MARKED location 0/0/CPU0 #show packet-trace results counter PACKET_MARKED source NP1 location 0/0/CPU0 限制 # 7.1.2 开始，5th, 4th and 3rd generation line cards (aka Lightspeed Plus, Lighstpeed, Tomahawk).\nReference # XR Embedded Packet Tracer\n","date":"24 September 2020","externalUrl":null,"permalink":"/blog/xr-embedded-packet-tracer/","section":"Blog","summary":"喜大普奔，XR 终于出了内置的 Packet Tracer 工具了（类似的 XE 中也提供类似的 feature，不过应该是很早就支持了）。该工具作用是用于跟踪数据包进入路由器后经过的组件,监视数据包信息，查找数据包丢失或最后一次见到的位置 .","title":"XR Embedded Packet Tracer","type":"blog"},{"content":" 6PE # 什么是 6PE # 摘录一段华为文档的解释：\n6PE（IPv6 Provider Edge）是一种 IPv4 到 IPv6 过渡的技术。通过 6PE 技术，ISP 可以利用已有的 IPv4 骨干网为分散的 IPv6 网络提供接入能力，使得 IPv6 孤岛穿越 IPv4 骨干网进行通信。\n- 在基于 MPLS 的 6PE 网络中：6PE 和 CE 之间利用 IPv6 路由协议交换 IPv6 路由信息。\n- 6PE 之间利用 MP-BGP 交换 IPv6 路由信息，并为 IPv6 前缀分配 MPLS 标签。\n- IPv4 骨干网络中 6PE 和 P 之间利用 IPv4 路由协议交换路由信息，并利用 MPLS 在 6PE 间建立 LSP。\n6PE 不涉及 VPN 路由即 VRF，其目的就是为了让 IPv6 孤岛能通过 IPv4 骨干网传输。所以对于骨干网只需要在 PE 侧进行配置即可，如下拓扑，简单测试下 6PE：\n配置 # TOPO 是随便找的测试环境，主要为测了下 6vPE ，所以 6PE 这块就不在 CE/PE 间进行 IPv6 配置， 简单使用 PE1/PE2 loopback 进行连通性测试。AS132203 是 v4 的骨干网环境，配置了 ISIS/LDP。\nPE1 # RP/0/0/CPU0:ios#show run router router router-convergence RP/0/0/CPU0:ios#show run router bgp Thu Sep 17 09:35:26.678 UTC router bgp 132203 nsr bfd minimum-interval 500 bfd multiplier 3 bgp router-id 10.100.0.1 address-family ipv6 unicast redistribute connected allocate-label all ! neighbor 10.100.0.3 \u0026lt;\u0026lt;\u0026lt;\u0026lt; 与PE2建立ipv6 label unicast邻居 remote-as 132203 update-source Loopback0 address-family ipv6 labeled-unicast ! RP/0/0/CPU0:ios#show run int loopback 0 Thu Sep 17 09:35:31.087 UTC interface Loopback0 ipv4 address 10.100.0.1 255.255.255.255 ipv6 address 2000::1/128 ! PE2 # RP/0/0/CPU0:ios#show run router bgp Thu Sep 17 09:48:13.907 UTC router bgp 132203 nsr bfd minimum-interval 500 bfd multiplier 3 bgp router-id 10.100.0.3 address-family ipv6 unicast redistribute connected allocate-label all ! neighbor 10.100.0.1 remote-as 132203 update-source Loopback0 address-family ipv6 labeled-unicast ! RP/0/0/CPU0:ios#show run int lo0 Thu Sep 17 09:49:21.972 UTC interface Loopback0 ipv4 address 10.100.0.3 255.255.255.255 ipv6 address 2000::3/128 ! 连通性检查 # RP/0/0/CPU0:ios#show bgp ipv6 labeled-unicast summary Thu Sep 17 09:44:57.719 UTC BGP router identifier 10.100.0.1, local AS number 132203 BGP generic scan interval 60 secs Non-stop routing is enabled BGP table state: Active Table ID: 0xe0800000 RD version: 12 BGP main routing table version 12 BGP NSR Initial initsync version 2 (Reached) BGP NSR/ISSU Sync-Group versions 0/0 BGP scan interval 60 secs BGP is operating in STANDALONE mode. Process RcvTblVer bRIB/RIB LabelVer ImportVer SendTblVer StandbyVer Speaker 12 12 12 12 12 0 Neighbor Spk AS MsgRcvd MsgSent TblVer InQ OutQ Up/Down St/PfxRcd 10.100.0.3 0 132203 488 489 12 0 0 05:39:26 1 RP/0/0/CPU0:ios# RP/0/0/CPU0:ios#show bgp ipv6 labeled-unicast Thu Sep 17 09:45:03.778 UTC BGP router identifier 10.100.0.1, local AS number 132203 BGP generic scan interval 60 secs Non-stop routing is enabled BGP table state: Active Table ID: 0xe0800000 RD version: 12 BGP main routing table version 12 BGP NSR Initial initsync version 2 (Reached) BGP NSR/ISSU Sync-Group versions 0/0 BGP scan interval 60 secs Status codes: s suppressed, d damped, h history, * valid, \u0026gt; best i - internal, r RIB-failure, S stale, N Nexthop-discard Origin codes: i - IGP, e - EGP, ? - incomplete Network Next Hop Metric LocPrf Weight Path *\u0026gt; 2000::1/128 :: 0 32768 ? *\u0026gt;i2000::3/128 10.100.0.3 0 100 0 ? Processed 2 prefixes, 2 paths RP/0/0/CPU0:ios#show bgp ipv6 labeled-unicast 2000::3/128 detail Thu Sep 17 09:45:12.188 UTC BGP routing table entry for 2000::3/128 Versions: Process bRIB/RIB SendTblVer Speaker 12 12 Flags: 0x00001001+0x00000000; Last Modified: Sep 17 04:05:36.288 for 05:39:35 Paths: (1 available, best #1) Not advertised to any peer Path #1: Received by speaker 0 Flags: 0x4000000001060005, import: 0x20 Not advertised to any peer Local 10.100.0.3 (metric 20000) from 10.100.0.3 (10.100.0.3) Received Label 24007 Origin incomplete, metric 0, localpref 100, valid, internal, best, group-best Received Path ID 0, Local Path ID 0, version 12 RP/0/0/CPU0:ios# RP/0/0/CPU0:ios#show route ipv6 2000::3/128 Thu Sep 17 09:45:25.967 UTC Routing entry for 2000::3/128 Known via \u0026#34;bgp 132203\u0026#34;, distance 200, metric 0, type internal Installed Sep 17 04:05:36.583 for 05:39:49 Routing Descriptor Blocks ::ffff:10.100.0.3, from ::ffff:10.100.0.3 Nexthop in Vrf: \u0026#34;default\u0026#34;, Table: \u0026#34;default\u0026#34;, IPv4 Unicast, Table Id: 0xe0000000 Route metric is 0 No advertising protos. RP/0/0/CPU0:ios# RP/0/0/CPU0:ios#show cef 10.100.0.3 Thu Sep 17 09:46:29.312 UTC 10.100.0.3/32, version 86, internal 0x1000001 0x0 (ptr 0xa1455b74) [1], 0x0 (0xa143b3b0), 0xa28 (0xa183807c) Updated Sep 17 01:47:42.680 local adjacency 10.100.4.6 Prefix Len 32, traffic index 0, precedence n/a, priority 3 via 10.100.4.6/32, GigabitEthernet0/0/0/1, 5 dependencies, weight 0, class 0 [flags 0x0] path-idx 0 NHID 0x0 [0xa0f3d3f4 0x0] next hop 10.100.4.6/32 local adjacency local label 24002 labels imposed {24002} via 10.100.4.10/32, GigabitEthernet0/0/0/2, 5 dependencies, weight 0, class 0 [flags 0x0] path-idx 1 NHID 0x0 [0xa0f3d4f0 0x0] next hop 10.100.4.10/32 local adjacency local label 24002 labels imposed {24001} RP/0/0/CPU0:ios#show cef ipv6 2000::3/128 detail Thu Sep 17 09:46:41.681 UTC 2000::3/128, version 11, internal 0x1000001 0x0 (ptr 0xa1303ff4) [1], 0x0 (0x0), 0x208 (0xa1513118) Updated Sep 17 04:05:36.603 Prefix Len 128, traffic index 0, precedence n/a, priority 4 gateway array (0xa124dc6c) reference count 1, flags 0x4038, source rib (7), 0 backups [1 type 1 flags 0x48441 (0xa152d320) ext 0x0 (0x0)] LW-LDI[type=0, refc=0, ptr=0x0, sh-ldi=0x0] gateway array update type-time 1 Sep 17 04:05:36.603 LDI Update time Sep 17 04:05:36.603 via ::ffff:10.100.0.3/128, 5 dependencies, recursive [flags 0x6000] path-idx 0 NHID 0x0 [0xa1794050 0x0] recursion-via-/128 next hop VRF - \u0026#39;default\u0026#39;, table - 0xe0000000 next hop ::ffff:10.100.0.3/128 via 24002/0/21 next hop 10.100.4.6/32 Gi0/0/0/1 labels imposed {24002 24007} \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; 外层为LDP标签/内层为MP-BGP分配的 next hop 10.100.4.10/32 Gi0/0/0/2 labels imposed {24001 24007} Load distribution: 0 (refcount 1) Hash OK Interface Address 0 Y Unknown ::ffff:10.100.0.3:0 RP/0/0/CPU0:ios# RP/0/0/CPU0:ios# RP/0/0/CPU0:ios#traceroute 2000::3 source 2000::1 Thu Sep 17 09:48:12.945 UTC Type escape sequence to abort. Tracing the route to 2000::3 1 ::ffff:10.100.0.2 [MPLS: Labels 24002/24007 Exp 0] 9 msec 9 msec 9 msec 2 2000::3 9 msec 9 msec 9 msec RP/0/0/CPU0:ios# 6vPE # 什么是 6vPE # 对比 6PE 来看， 6vPE 是为了解决 VPN 用户的连通性问题，涉及到 VPN 路由的传递。\n配置 # VRF Configuration # RP/0/0/CPU0:ios#show run vrf GLOBAL Thu Sep 17 09:56:10.322 UTC vrf GLOBAL address-family ipv6 unicast import route-target 100:100 ! export route-target 100:100 ! ! ! RP/0/0/CPU0:ios#show run int gigabitEthernet 0/0/0/3 Thu Sep 17 09:59:44.148 UTC interface GigabitEthernet0/0/0/3 vrf GLOBAL ipv4 address 10.100.8.1 255.255.255.252 ipv6 address 2001::1/64 ! BGP VPNv6 Address Family # router bgp 132203 nsr bfd minimum-interval 500 bfd multiplier 3 bgp router-id 10.100.0.1 address-family vpnv6 unicast ! neighbor 10.100.0.3 remote-as 132203 update-source Loopback0 address-family vpnv6 unicast ! ! BGP IPv6 VRF address-family # RP/0/0/CPU0:ios#show run router bgp 132203 vrf GLOBAL Thu Sep 17 10:01:03.712 UTC router bgp 132203 vrf GLOBAL rd auto address-family ipv6 unicast ! neighbor 2001::2 remote-as 64512 address-family ipv6 unicast route-policy pass-all in route-policy pass-all out ! ! 连通性测试 # //PE1 RP/0/0/CPU0:ios#show bgp vpnv6 unicast summary Thu Sep 17 10:02:19.067 UTC BGP router identifier 10.100.0.1, local AS number 132203 BGP generic scan interval 60 secs Non-stop routing is enabled BGP table state: Active Table ID: 0x0 RD version: 0 BGP main routing table version 30 BGP NSR Initial initsync version 1 (Reached) BGP NSR/ISSU Sync-Group versions 0/0 BGP scan interval 60 secs BGP is operating in STANDALONE mode. Process RcvTblVer bRIB/RIB LabelVer ImportVer SendTblVer StandbyVer Speaker 30 30 30 30 30 0 Neighbor Spk AS MsgRcvd MsgSent TblVer InQ OutQ Up/Down St/PfxRcd 10.100.0.3 0 132203 505 506 30 0 0 05:56:47 1 RP/0/0/CPU0:ios#show bgp vpnv6 unicast Thu Sep 17 10:02:21.597 UTC BGP router identifier 10.100.0.1, local AS number 132203 BGP generic scan interval 60 secs Non-stop routing is enabled BGP table state: Active Table ID: 0x0 RD version: 0 BGP main routing table version 30 BGP NSR Initial initsync version 1 (Reached) BGP NSR/ISSU Sync-Group versions 0/0 BGP scan interval 60 secs Status codes: s suppressed, d damped, h history, * valid, \u0026gt; best i - internal, r RIB-failure, S stale, N Nexthop-discard Origin codes: i - IGP, e - EGP, ? - incomplete Network Next Hop Metric LocPrf Weight Path Route Distinguisher: 10.100.0.1:0 (default for vrf GLOBAL) *\u0026gt; 2011::1/128 2001::2 0 0 64512 i *\u0026gt;i2013::1/128 10.100.0.3 0 100 0 64513 i Route Distinguisher: 10.100.0.3:0 *\u0026gt;i2013::1/128 10.100.0.3 0 100 0 64513 i Processed 3 prefixes, 3 paths RP/0/0/CPU0:ios#show bgp vpnv6 unicast rd 10.100.0.3:0 2013::1/128 detail Thu Sep 17 10:02:31.756 UTC BGP routing table entry for 2013::1/128, Route Distinguisher: 10.100.0.3:0 Versions: Process bRIB/RIB SendTblVer Speaker 29 29 Flags: 0x00040001+0x00000200; Last Modified: Sep 17 04:05:36.288 for 05:56:55 Paths: (1 available, best #1) Not advertised to any peer Path #1: Received by speaker 0 Flags: 0x4000000025060005, import: 0x1f Not advertised to any peer 64513 10.100.0.3 (metric 20000) from 10.100.0.3 (10.100.0.3) Received Label 24008 Origin IGP, metric 0, localpref 100, valid, internal, best, group-best, import-candidate, not-in-vrf Received Path ID 0, Local Path ID 0, version 29 Extended community: RT:100:100 RP/0/0/CPU0:ios# RP/0/0/CPU0:ios# RP/0/0/CPU0:ios#show route vrf GLOBAL ipv6 2013::1/128 Thu Sep 17 10:02:53.335 UTC Routing entry for 2013::1/128 Known via \u0026#34;bgp 132203\u0026#34;, distance 200, metric 0 Tag 64513, type internal Installed Sep 17 04:05:36.353 for 05:57:17 Routing Descriptor Blocks ::ffff:10.100.0.3, from ::ffff:10.100.0.3 Nexthop in Vrf: \u0026#34;default\u0026#34;, Table: \u0026#34;default\u0026#34;, IPv4 Unicast, Table Id: 0xe0000000 Route metric is 0 No advertising protos. RP/0/0/CPU0:ios# //CE1 RP/0/0/CPU0:ios#show bgp ipv6 unicast summary Thu Sep 17 10:13:04.543 UTC BGP router identifier 10.100.8.2, local AS number 64512 BGP generic scan interval 60 secs Non-stop routing is enabled BGP table state: Active Table ID: 0xe0800000 RD version: 19 BGP main routing table version 19 BGP NSR Initial initsync version 2 (Reached) BGP NSR/ISSU Sync-Group versions 0/0 BGP scan interval 60 secs BGP is operating in STANDALONE mode. Process RcvTblVer bRIB/RIB LabelVer ImportVer SendTblVer StandbyVer Speaker 19 19 19 19 19 0 Neighbor Spk AS MsgRcvd MsgSent TblVer InQ OutQ Up/Down St/PfxRcd 2001::1 0 132203 441 439 19 0 0 07:12:20 1 RP/0/0/CPU0:ios#show bgp ipv6 unicast Thu Sep 17 10:13:07.483 UTC BGP router identifier 10.100.8.2, local AS number 64512 BGP generic scan interval 60 secs Non-stop routing is enabled BGP table state: Active Table ID: 0xe0800000 RD version: 19 BGP main routing table version 19 BGP NSR Initial initsync version 2 (Reached) BGP NSR/ISSU Sync-Group versions 0/0 BGP scan interval 60 secs Status codes: s suppressed, d damped, h history, * valid, \u0026gt; best i - internal, r RIB-failure, S stale, N Nexthop-discard Origin codes: i - IGP, e - EGP, ? - incomplete Network Next Hop Metric LocPrf Weight Path *\u0026gt; 2011::1/128 :: 0 32768 i *\u0026gt; 2013::1/128 2001::1 0 132203 64513 i Processed 2 prefixes, 2 paths RP/0/0/CPU0:ios# //CE RP/0/0/CPU0:ios#traceroute 2013::1 source 2011::1 Thu Sep 17 10:13:53.710 UTC Type escape sequence to abort. Tracing the route to 2013::1 1 2001::1 9 msec 0 msec 0 msec 2 ::ffff:10.100.0.2 [MPLS: Labels 24002/24008 Exp 0] 19 msec 19 msec 29 msec 3 2003::1 [MPLS: Label 24008 Exp 0] 29 msec 29 msec 29 msec 4 2013::1 19 msec 29 msec 19 msec RP/0/0/CPU0:ios# 相关文档 # 测试 TOPO/FULL CONFIG # Configuration Download\n","date":"17 September 2020","externalUrl":null,"permalink":"/blog/ipv6-over-mpls-6pe-6vpe/","section":"Blog","summary":"6PE # 什么是 6PE # 摘录一段华为文档的解释：","title":"IPv6 over MPLS 6PE/6vPE","type":"blog"},{"content":"首先放两张图，了解下 EVPN VPWS。EVPN VPWS 会使用到 Type1 和 Type 4 两类路由，也分为 Single-Home 和 Multi-home 两种架构，这里记录下 single-home 的简单配置。\nTOPO # Configuration # PE1:\nRP/0/RP0/CPU0:ASR9922-B#show run int bundle-ether 800 Thu Sep 10 08:48:09.262 UTC interface Bundle-Ether800 mtu 4860 l2transport ! ! RP/0/RP0/CPU0:ASR9922-B#show run l2vpn xconnect group cisco-l2vpn-evpn-vpws Thu Sep 10 08:48:29.189 UTC l2vpn xconnect group cisco-l2vpn-evpn-vpws p2p vpws_64900 interface Bundle-Ether800 description vpws_64900 neighbor evpn evi 64900 target 819 source 198 \u0026lt;\u0026lt;\u0026lt; evi 需要一致， source标识本端AC，targe标识对端AC ! ! ! ! RP/0/RP0/CPU0:ASR9922-B#show run evpn Thu Sep 10 08:48:33.611 UTC evpn evi 64900 bgp rd 10.1.12.1:64900 route-target import 9929:64900 route-target export 9929:64900 ! description vpws_test control-word-disable ! ! RP/0/RP0/CPU0:ASR9922-B#show run router bgp Thu Sep 10 08:51:28.092 UTC router bgp 38365 bgp router-id 10.1.1.1 ! address-family l2vpn evpn ! neighbor 10.1.2.2 remote-as 38365 update-source Loopback1000 address-family l2vpn evpn ! ! PE2：\nRP/0/RSP0/CPU0:ASR9006-L#show run int bundle-ether 800 Thu Sep 10 16:52:05.649 UTC interface Bundle-Ether800 mtu 4860 l2transport ! ! RP/0/RSP0/CPU0:ASR9006-L#show run l2vpn xconnect group cisco-l2vpn-evpn-vpws Thu Sep 10 16:52:09.704 UTC l2vpn xconnect group cisco-l2vpn-evpn-vpws p2p vpws_64900 interface Bundle-Ether800 description vpws_64900 neighbor evpn evi 64900 target 198 source 819 ! ! ! ! RP/0/RSP0/CPU0:ASR9006-L#show run evpn Thu Sep 10 16:52:13.473 UTC evpn evi 64900 bgp rd 10.1.12.2:64900 route-target import 9929:64900 route-target export 9929:64900 ! description vpws_test control-word-disable ! ! RP/0/RSP0/CPU0:ASR9006-L#show run router bgp Thu Sep 10 16:53:40.957 UTC router bgp 38365 bgp router-id 10.1.2.2 address-family l2vpn evpn ! neighbor 10.1.1.1 remote-as 38365 update-source Loopback1000 address-family l2vpn evpn ! ! ! 底层起 ISIS/LDP 或者 SR。\n测试命令 # #show l2vpn xconnnect \u0026lt;\u0026gt; #show evpn evi ead #show bgp l2vpn evpn route-type 1 RP/0/RP0/CPU0:ASR9922-B#show bgp l2vpn evpn summary Thu Sep 10 08:55:10.183 UTC BGP router identifier 10.1.1.1, local AS number 38365 BGP generic scan interval 60 secs Non-stop routing is enabled BGP table state: Active Table ID: 0x0 RD version: 0 BGP main routing table version 55 BGP NSR Initial initsync version 1 (Reached) BGP NSR/ISSU Sync-Group versions 55/0 BGP scan interval 60 secs BGP is operating in STANDALONE mode. Process RcvTblVer bRIB/RIB LabelVer ImportVer SendTblVer StandbyVer Speaker 55 55 55 55 55 55 Neighbor Spk AS MsgRcvd MsgSent TblVer InQ OutQ Up/Down St/PfxRcd 10.1.2.2 0 38365 21 20 55 0 0 00:16:51 1 RP/0/RP0/CPU0:ASR9922-B#show bgp l2vpn evpn Thu Sep 10 08:55:19.603 UTC BGP router identifier 10.1.1.1, local AS number 38365 BGP generic scan interval 60 secs Non-stop routing is enabled BGP table state: Active Table ID: 0x0 RD version: 0 BGP main routing table version 55 BGP NSR Initial initsync version 1 (Reached) BGP NSR/ISSU Sync-Group versions 55/0 BGP scan interval 60 secs Status codes: s suppressed, d damped, h history, * valid, \u0026gt; best i - internal, r RIB-failure, S stale, N Nexthop-discard Origin codes: i - IGP, e - EGP, ? - incomplete Network Next Hop Metric LocPrf Weight Path Route Distinguisher: 10.1.12.1:64900 (default for vrf VPWS:64900) *\u0026gt; [1][0000.0000.0000.0000.0000][198]/120 0.0.0.0 0 i *\u0026gt;i[1][0000.0000.0000.0000.0000][819]/120 10.1.2.2 100 0 i Route Distinguisher: 10.1.12.2:64900 *\u0026gt;i[1][0000.0000.0000.0000.0000][819]/120 10.1.2.2 100 0 i Processed 3 prefixes, 3 paths RP/0/RP0/CPU0:ASR9922-B#show bgp l2vpn evpn rd 10.1.12.1:64900 [1][0000.0000.0000.0000.0000][198]/120 detail Thu Sep 10 08:55:30.735 UTC BGP routing table entry for [1][0000.0000.0000.0000.0000][198]/120, Route Distinguisher: 10.1.12.1:64900 Versions: Process bRIB/RIB SendTblVer Speaker 47 47 Local Label: 24000 (no rewrite); Flags: 0x00040001+0x00000000; Last Modified: Sep 10 08:14:15.832 for 00:41:14 Paths: (1 available, best #1) Advertised to peers (in unique update groups): 10.1.2.2 Path #1: Received by speaker 0 Flags: 0x402002000504000b, import: 0x00, EVPN: 0x0 Advertised to peers (in unique update groups): 10.1.2.2 Local 0.0.0.0 from 0.0.0.0 (10.1.1.1), if-handle 0x00000260 Origin IGP, localpref 100, valid, redistributed, best, group-best, import-candidate, rib-install Received Path ID 0, Local Path ID 1, version 47 Extended community: EVPN L2 ATTRS:0x02:4846 RT:9929:64900 RP/0/RP0/CPU0:ASR9922-B# ","date":"10 September 2020","externalUrl":null,"permalink":"/blog/evpn-vpws/","section":"Blog","summary":"首先放两张图，了解下 EVPN VPWS。EVPN VPWS 会使用到 Type1 和 Type 4 两类路由，也分为 Single-Home 和 Multi-home 两种架构，这里记录下 single-home 的简单配置。","title":"EVPN VPWS","type":"blog"},{"content":"最为我们熟悉的时间同步协议是 NTP，配置起来相对简单，并不复杂；但是 NTP 实现的毫秒级的时间同步，在普通的网络中只是用来实现网络时间的同步管理。在 5G 网络中需要一种更为精确的时间同步协议，所以这个文章记录下微妙级的时间同步协议-PTP 配置案例。\n网络元素 # Grandmaster (GM) ：时间源设备， 所为其他网络设备提供计时，并且不将其本地时钟与其他网络设备同步。 T-BC（Boundary Clock）：边界时钟， 将其本地时钟与 T-GM 或上游 T-BC 时钟同步，并向下游 T-BC 或 T-TSC 时钟提供时序信息。 T-TSC： time slave clock， 从时钟将其本地时钟与另一个 PTP 时钟同步，但不向任何其他网络设备提供 PTP 同步。 设备端口状态 # INITPort is not ready to participate in PTP.LISTENINGFirst state when a port becomes ready to participate in PTP: In this state, the port listens to PTP masters for a (configurable) period of time.PRE-MASTERPort is ready to enter the MASTER state.MASTERPort provides timestamps for any Slave or boundary clocks that are listening.UNCALIBRATEDPort receives timestamps from a Master clock but, the router’s clock is not yet synchronized to the Master.SLAVEPort receives timestamps from a Master clock and the router’s clock is synchronized to the Master.PASSIVEPort is aware of a better clock than the one it would advertise if it was in MASTER state and is not a Slave clock to that Master clock. NCS55 G82751 配置案例 # T-GM # RP/0/RP0/CPU0:PE2-NCS55A2-A#show run ptp Sat Aug 22 16:11:00.559 UTC ptp clock domain 24 profile g.8275.1 clock-type T-GM identity mac-address 0100.4817.6033 clock-class 6 ! profile g82751_any multicast transport ethernet sync frequency 16 announce frequency 8 delay-request frequency 16 ! log servo events best-master-clock changes ! ! RP/0/RP0/CPU0:PE2-NCS55A2-A# RP/0/RP0/CPU0:PE2-NCS55A2-A# RP/0/RP0/CPU0:PE2-NCS55A2-A#show run frequency synchronization Sat Aug 22 16:11:09.727 UTC frequency synchronization quality itu-t option 1 log selection changes ! RP/0/RP0/CPU0:PE2-NCS55A2-A#show ptp interfaces brief Sat Aug 22 16:12:44.308 UTC Intf Port Port Line Name Number State Encap State Mechanism -------------------------------------------------------------------------------- Te0/0/0/8 1 Master Ethernet up 1-step DRRM RP/0/RP0/CPU0:PE2-NCS55A2-A# RP/0/RP0/CPU0:PE2-NCS55A2-A# RP/0/RP0/CPU0:PE2-NCS55A2-A#show run int tenGigE 0/0/0/8 Sat Aug 22 16:12:50.416 UTC interface TenGigE0/0/0/8 ptp profile g82751_any ! ipv4 address 10.99.1.2 255.255.255.252 frequency synchronization wait-to-restore 0 quality transmit exact itu-t option 1 PRC ! ! T-BC # RP/0/RP0/CPU0:NCS5516-B#show run ptp Sat Aug 22 16:37:52.667 UTC ptp clock domain 24 profile g.8275.1 clock-type T-BC priority2 100 clock-class 165 ! profile g82751_any multicast transport ethernet sync frequency 16 announce frequency 8 delay-request frequency 16 ! time-of-day priority 99 physical-layer-frequency log servo events best-master-clock changes ! ! RP/0/RP0/CPU0:NCS5516-B#show run frequency synchronization Sat Aug 22 16:38:06.764 UTC frequency synchronization quality itu-t option 1 log selection changes ! RP/0/RP0/CPU0:NCS5516-B#show run int tenGigE 0/1/0/0 Sat Aug 22 16:38:57.615 UTC interface TenGigE0/1/0/0 ptp profile g82751_any port state slave-only ! ipv4 address 10.99.1.1 255.255.255.252 frequency synchronization selection input priority 10 wait-to-restore 0 ! ! RP/0/RP0/CPU0:NCS5516-B#show ptp interfaces brief Sat Aug 22 16:39:01.662 UTC Intf Port Port Line Name Number State Encap State Mechanism -------------------------------------------------------------------------------- Te0/1/0/0 1 Slave Ethernet up 1-step DRRM Te0/1/0/1 2 Master Ethernet up 1-step DRRM Hu0/0/0/34 4 Master Ethernet up 1-step DRRM Hu0/0/0/35 3 Master Ethernet up 1-step DRRM ","date":"22 August 2020","externalUrl":null,"permalink":"/blog/ptp-configure/","section":"Blog","summary":"最为我们熟悉的时间同步协议是 NTP，配置起来相对简单，并不复杂；但是 NTP 实现的毫秒级的时间同步，在普通的网络中只是用来实现网络时间的同步管理。在 5G 网络中需要一种更为精确的时间同步协议，所以这个文章记录下微妙级的时间同步协议-PTP 配置案例。","title":"PTP-Precision Time Protocol configuration example","type":"blog"},{"content":"Capture - \u0026gt; Options - \u0026gt; Select interface and type filer\n","date":"4 August 2020","externalUrl":null,"permalink":"/blog/wireshark-how-to-filter-packet-when-captured/","section":"Blog","summary":"Capture - \u0026gt; Options - \u0026gt; Select interface and type filer","title":"Wireshark-How to filter packet when captured","type":"blog"},{"content":" Docker 容器相关操作 # #docker container run -d nginx #docker container run -ti ubuntu \u0026lt;\u0026lt;\u0026lt; 安全退出 Ctrl+P \u0026amp;\u0026amp; Ctrl+Q #docker container attach \u0026lt;CONTAINER ID\u0026gt; #docker container exec -it \u0026lt;CONTAINER ID\u0026gt; #docker ps -l //查看最新创建的容器 #docker ps -q //查看容器ID #docker ps -a //查看所有容器， 包括已经停止的 #docker logs \u0026lt;CONTAINER ID\u0026gt; //查看log #docker container stop //发送TERN信号等待10s后， 如果容器没停止发送KILL信号 #docker container kill //发送KILL信号，容器立刻停止 #docker container rm //删除已停止的容器， --force 强制删除 #docker container rm $(docker ps -aq) --force #docker container inspect \u0026lt;CONTAINER ID\u0026gt; //会打印出容器的详细信息 #docker container diff \u0026lt;CONTAINER ID\u0026gt; //查看容器 #docker run -it busybox //容器之间共享namespace #docker container run –d --name infra --ipc=shareable google/pause #docker container run –tid --name busybox01 \\ --pid=container:infra \\ --ipc=container:infra \\ --net=container:infra busybox #docker container run –tid --name busybox02 \\ --pid=container:infra \\ --ipc=container:infra \\ --net=container:infra busybox 查看 namespace\n//查看namespace [root@localhost ~]# docker container top 6a UID PID PPID C STIME TTY TIME CMD root 85420 85403 0 12:07 pts/0 00:00:00 sh [root@localhost ~]# [root@localhost ~]# [root@localhost ~]# [root@localhost ~]# lsns -p 85420 NS TYPE NPROCS PID USER COMMAND 4026531837 user 160 1 root /usr/lib/systemd/systemd --switched-root --system --deserialize 22 4026532680 ipc 3 85208 root /pause 4026532681 pid 3 85208 root /pause 4026532683 net 3 85208 root /pause 4026532753 mnt 1 85420 root sh 4026532754 uts 1 85420 root sh [root@localhost ~]# Docker 文件系统\n//docker 文件系统： [root@localhost ~]# df -h Filesystem Size Used Avail Use% Mounted on /dev/mapper/centos-root 50G 4.8G 46G 10% / devtmpfs 7.8G 0 7.8G 0% /dev tmpfs 7.8G 0 7.8G 0% /dev/shm tmpfs 7.8G 20M 7.8G 1% /run tmpfs 7.8G 0 7.8G 0% /sys/fs/cgroup /dev/sda1 1014M 152M 863M 15% /boot /dev/mapper/centos-home 142G 33M 142G 1% /home overlay 50G 4.8G 46G 10% /var/lib/docker/overlay2/7fd4fe6c93f7996c9751098d0f7288bd911f4d5cdd474f09a3f45e94f48ec67a/merged overlay 50G 4.8G 46G 10% /var/lib/docker/overlay2/6ef794bb4b4961c4006f0a239e68feab742609291777b08631c4665d851195c4/merged overlay 50G 4.8G 46G 10% /var/lib/docker/overlay2/4fadac2b7b13aff99ffed42990e293270a7aec57f80fe42d4b14736fec84bd4b/merged overlay 50G 4.8G 46G 10% /var/lib/docker/overlay2/27e3827db6450f1a6e98f9b735ab8addfa3007147385ab4e8a12f787d35c9253/merged tmpfs 1.6G 0 1.6G 0% /run/user/0 [root@localhost ~]# [root@localhost ~]# [root@localhost ~]# [root@localhost ~]# [root@localhost ~]# [root@localhost ~]# [root@localhost ~]# cd /var/lib/docker/overlay2/27e3827db6450f1a6e98f9b735ab8addfa3007147385ab4e8a12f787d35c9253/merged [root@localhost merged]# ls bin dev entrypoint.sh etc home lib media mnt opt proc root run sbin srv sys tmp usr var [root@localhost merged]# pwd /var/lib/docker/overlay2/27e3827db6450f1a6e98f9b735ab8addfa3007147385ab4e8a12f787d35c9253/merged [root@localhost merged]# exot -bash: exot: command not found [root@localhost merged]# Docker 镜像相关操作 # #docker search \u0026lt;NAME\u0026gt; #docker image pull #docker image run #docker image ls #docker image history # docker image history 1e4467b07108 --no-trunc #docker image save #docker image save nginx –o /mnt/nginx.tar.gz #docker image save nginx \u0026gt; /mnt/nginx.tar.gz #docker image load #docker image load –i nginx.tar.gz #docker image load \u0026lt; nginx.tar.gz #docker image rm #docker image tag Docker container commit 手动构建 Image\nDocker container run 运行容器 修改容器 Docker commit 将容器保存为新的镜像 [root@localhost merged]# docker container commit e13a9d6dfded myubuntu sha256:9de078569932b64a4b07879692fd13fed2b4bd0eaace4f15befa1ee67180909c [root@localhost merged]# [root@localhost merged]# docker image ls REPOSITORY TAG IMAGE ID CREATED SIZE myubuntu latest 9de078569932 10 seconds ago 97.8MB 镜像的 tag\ndocker image tag 命令用于给镜像打标签 标签一般标记 image 版本，开发者等相关的信息 一个镜像可以有多个标签，它们最终指向同一个 image id 标签的特殊用途 – “物流信息” docker image tag aa20 quay.io/alice/clock:v1 docker image push quay.io/alice/clock:v1 quay.io 是 registry 的地址，在使用 docker hub 以外的 registry 时，必须加上 这里面的 alice，称为 namespace，一般是和用户名关联 clock 是 alice namespace 下的其中一个仓库，一个仓库中一般含有一个应用的多个版本 v1 标记仓库中的某一个版本的应用的镜像 Namespace 可以为空，我们称这样的仓库为顶层仓库，一般预留给像 centos, ubuntu 等官方镜像使用 推送镜像到 Docker hub\n[root@localhost merged]# docker container commit 23950da8e736 testbusybox sha256:aaf33ea2c57b7cceeb52524e877834f3ec0bdbd8eb19fb4566782af4adb1257d [root@localhost merged]# [root@localhost merged]# docker image tag testbusybox xuxing123/docker_test:v1 [root@localhost merged]# [root@localhost merged]# docker login Login with your Docker ID to push and pull images from Docker Hub. If you don\u0026#39;t have a Docker ID, head over to https://hub.docker.com to create one. Username: xuxing123 Password: WARNING! Your password will be stored unencrypted in /root/.docker/config.json. Configure a credential helper to remove this warning. See https://docs.docker.com/engine/reference/commandline/login/#credentials-store Login Succeeded [root@localhost merged]# docker image push xuxing123/docker_test:v1 The push refers to repository [docker.io/xuxing123/docker_test] 4f42a2914972: Pushed 514c3a3e64d4: Mounted from library/busybox v1: digest: sha256:80abd9df785cc13a34a10148ba1a45389b215431110ceb2b75e43049d5d9bc8d size: 734 [root@localhost merged]# docker image tag --help Usage:\tdocker image tag SOURCE_IMAGE[:TAG] TARGET_IMAGE[:TAG] Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE [root@localhost merged]# ","date":"3 August 2020","externalUrl":null,"permalink":"/blog/docker-study-3/","section":"Blog","summary":"Docker 容器相关操作 # #docker container run -d nginx #docker container run -ti ubuntu \u0026lt;\u0026lt;\u0026lt; 安全退出 Ctrl+P \u0026amp;\u0026amp; Ctrl+Q #docker container attach \u0026lt;CONTAINER ID\u0026gt; #docker container exec -it \u0026lt;CONTAINER ID\u0026gt; #docker ps -l //查看最新创建的容器 #docker ps -q //查看容器ID #docker ps -a //查看所有容器， 包括已经停止的 #docker logs \u0026lt;CONTAINER ID\u0026gt; //查看log #docker container stop //发送TERN信号等待10s后， 如果容器没停止发送KILL信号 #docker container kill //发送KILL信号，容器立刻停止 #docker container rm //删除已停止的容器， --force 强制删除 #docker container rm $(docker ps -aq) --force #docker container inspect \u0026lt;CONTAINER ID\u0026gt; //会打印出容器的详细信息 #docker container diff \u0026lt;CONTAINER ID\u0026gt; //查看容器 #docker run -it busybox //容器之间共享namespace #docker container run –d --name infra --ipc=shareable google/pause #docker container run –tid --name busybox01 \\ --pid=container:infra \\ --ipc=container:infra \\ --net=container:infra busybox #docker container run –tid --name busybox02 \\ --pid=container:infra \\ --ipc=container:infra \\ --net=container:infra busybox 查看 namespace","title":"Docker study （3）- Docker container and image","type":"blog"},{"content":"","date":"27 July 2020","externalUrl":null,"permalink":"/tags/ise/","section":"Tags","summary":"","title":"Ise","type":"tags"},{"content":"Reference:\nInstall Cisco ISE Using CIMC\nConfigure Repository on ISE\nHow to Export Configuration and Operation Data Backup from ISE\n基于 ISE 对 Cisco 网络设备部署 AAA\n","date":"27 July 2020","externalUrl":null,"permalink":"/blog/ise/","section":"Blog","summary":"Reference:","title":"ISE Install and config example","type":"blog"},{"content":"Reference: Linux网络 - 数据包的接收过程 Linux网络 - 数据包的发送过程 Linux虚拟网络设备之tun/tap Linux虚拟网络设备之veth ","date":"26 July 2020","externalUrl":null,"permalink":"/blog/docker-study-2/","section":"Blog","summary":"Reference: Linux网络 - 数据包的接收过程 Linux网络 - 数据包的发送过程 Linux虚拟网络设备之tun/tap Linux虚拟网络设备之veth ","title":"Docker study （2）- Docker network","type":"blog"},{"content":"Reference:https://docs.docker.com/engine/install/centos/ https://docs.docker.com/config/daemon/systemd/#httphttps-proxy https://www.runoob.com/docker/docker-tutorial.html Centos Docker install # [root@localhost ~]# yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo [root@localhost ~]# sudo yum-config-manager --enable docker-ce-nightly [root@localhost ~]# sudo yum-config-manager --enable docker-ce-test [root@localhost ~]# yum install docker-ce docker-ce-cli containerd.io [root@localhost ~]# systemctl start docker [root@localhost ~]# systemctl status docker [root@localhost ~]# docker info [root@localhost ~]# docker run hello-world HTTP/HTTPS proxy # [root@localhost ~]#sudo mkdir -p /etc/systemd/system/docker.service.d [root@localhost ~]#vi /etc/systemd/system/docker.service.d/http-proxy.conf [Service] Environment=\u0026#34;HTTP_PROXY=http://xxx:80\u0026#34; Environment=\u0026#34;HTTPS_PROXY=http://xxx:80\u0026#34; Environment=\u0026#34;NO_PROXY=localhost,127.0.0.1,.cisco.com\u0026#34; [root@localhost ~]#sudo systemctl daemon-reload [root@localhost ~]#sudo systemctl restart docker [root@localhost ~]#sudo systemctl show --property=Environment docker [root@localhost ~]#docker run hello-world Attach Docker # docker attach docker exec, recommend use this command [root@localhost ~]# docker exec --help [root@localhost ~]# docker exec -it 35cd76f9a02d /bin/bash root@35cd76f9a02d:/var/www/html# ","date":"25 July 2020","externalUrl":null,"permalink":"/blog/docker-study-1/","section":"Blog","summary":"Reference:https://docs.docker.com/engine/install/centos/ https://docs.","title":"Docker study（1）- Initial install","type":"blog"},{"content":" How to install # //Yum [root@nso ~]# yum -y install screen //rpm [root@nso ~]#wget http://mirror-hk.koddos.net/centos/7.8.2003/os/x86_64/ Packages/screen-4.1.0-0.25.20120314git3c2946.el7.x86_64.rpm [root@nso ~]#rpm -ivh screen-4.1.0-0.25.20120314git3c2946.el7.x86_64.rpm Some Tips # Created a session, -S means special a name for that session.\n[root@xuxing ~]# screen [root@xuxing ~]# screen -S test Recover your session.\n[root@xuxing ~]# screen -ls There are screens on: 15741.test\t(Detached) 5971.pts-2.xuxing\t(Detached) 4485.pts-2.xuxing\t(Detached) 4409.pts-0.xuxing\t(Detached) 25997.9922a\t(Detached) 5 Sockets in /var/run/screen/S-root. [root@xuxing ~]# screen -r test // recover test session [detached from 15741.test] Detached session/Kill session\n//使用组合键 C-a D detach session, 即将session 放在后台 [root@xuxing ~]# screen -ls There are screens on: 15741.test\t(Detached) 5971.pts-2.xuxing\t(Detached) 4485.pts-2.xuxing\t(Detached) 4409.pts-0.xuxing\t(Detached) 25997.9922a\t(Detached) 5 Sockets in /var/run/screen/S-root. [root@xuxing ~]# kill -9 15741 [root@xuxing ~]# screen -ls There are screens on: 15741.test\t(Dead ???) 5971.pts-2.xuxing\t(Detached) 4485.pts-2.xuxing\t(Detached) 4409.pts-0.xuxing\t(Detached) 25997.9922a\t(Detached) Remove dead screens with \u0026#39;screen -wipe\u0026#39;. 5 Sockets in /var/run/screen/S-root. [root@xuxing ~]# screen -wipe There are screens on: 15741.test\t(Removed) 5971.pts-2.xuxing\t(Removed) 4485.pts-2.xuxing\t(Detached) 4409.pts-0.xuxing\t(Detached) 25997.9922a\t(Detached) 2 sockets wiped out. 3 Sockets in /var/run/screen/S-root. [root@xuxing ~]# screen -ls There are screens on: 4485.pts-2.xuxing\t(Detached) 4409.pts-0.xuxing\t(Detached) 25997.9922a\t(Detached) 3 Sockets in /var/run/screen/S-root. [root@xuxing ~]# About screen session log, we have 3 way to enable it:\n// Way 1: add -L to enable session log // it will auto generate a log file at user home folder $HOME with name session title name [root@xuxing ~]# screen -S -L test // Way 2: create a normal session ， type Ctrl+a, H to enable session log // it will be stored at user home folder too [root@xuxing ~]# screen -S test \u0026gt; Ctrl+a, H // Way 3: customize session log save folder by modify config file [root@server1 ~]# grep logfile /etc/screenrc logfile /var/log/screen/screenlog_%S_%t_%Y_%m_%d_%c.%n.log [root@xuxing ~]# screen -S -L test ","date":"25 July 2020","externalUrl":null,"permalink":"/blog/screen/","section":"Blog","summary":"How to install # //Yum [root@nso ~]# yum -y install screen //rpm [root@nso ~]#wget http://mirror-hk.","title":"Linux Tips：use screen to manage your session","type":"blog"},{"content":"证所周知，如果你需要 ssh 免密登陆到 ssh server，只需要将 ssh client 端的公钥复制到 ssh server 即可；那么如果需要实现 SSH 免密登陆 CISCO IOX 设备，只需要将你 ssh client 端的公钥复制到 CICCO IOX 设备即可，以下是复制的过程。\nSSH Client 生成 1024 公钥 # 虽然 CISCO IOX 官方文档说明支持 512-2024 长度的公钥，但是测试结果发现是导入 2024 长度的公钥是会报错的 ，所以这里我会选择使用 1024 长度的公钥。\nRP/0/RP1/CPU0:CORE6-ASR9922-A#admin Sat May 16 17:23:01.985 UTC RP/0/RP1/CPU0:CORE6-ASR9922-A(admin)#crypto key import authentication rsa username cisco harddisk:/myrouter_sshkey Sat May 16 17:23:05.548 UTC Cannot execute the command : Invalid argument \u0026lt;\u0026lt;\u0026lt;\u0026lt; 报错 SSH client 生成 1024 长度的公钥\n[root@xuxing ~]# ssh-keygen -t rsa -b 1024 Generating public/private rsa key pair. Enter file in which to save the key (/root/.ssh/id_rsa): /root/.ssh/id_rsa already exists. Overwrite (y/n)? y Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /root/.ssh/id_rsa. Your public key has been saved in /root/.ssh/id_rsa.pub. The key fingerprint is: SHA256:7ryKkFzYx90V7R9g4bEoYmOYttnspWdkItDLOgf1Xac root@xuxing The key\u0026#39;s randomart image is: +---[RSA 1024]----+ |.. . .+. | |. + . = . . o++ | | + * X * + .o+. | |. =tO.+.E... .. | | o.oooo S . ..| |o..oo. . .| | o+ . | | . . o | | . ..+. | +----[SHA256]-----+ [root@xuxing ~]# 创建密钥的二进制 base64 文件并将其导入路由器 # [root@xuxing ~]# cut -d\u0026#34; \u0026#34; -f2 .ssh/id_rsa.pub | base64 -d \u0026gt; myrouter_sshkey RP/0/RP1/CPU0:CORE6-ASR9922-A#scp root@10.75.49.222:/root/myrouter_sshkey harddisk: vrf MGMT Sat May 16 17:25:50.622 UTC Connecting to 10.75.49.238... Password: Transferred 151 Bytes 151 bytes copied in 0 sec (50333)bytes/sec RP/0/RP1/CPU0:CORE6-ASR9922-A# RP/0/RP1/CPU0:CORE6-ASR9922-A# RP/0/RP1/CPU0:CORE6-ASR9922-A#admin Sat May 16 17:25:58.538 UTC RP/0/RP1/CPU0:CORE6-ASR9922-A(admin)#crypto key import authentication rsa username cisco harddisk:/myrouter_sshkey Sat May 16 17:26:03.558 UTC RP/0/RP1/CPU0:CORE6-ASR9922-A(admin)# RP/0/RP1/CPU0:CORE6-ASR9922-A(admin)# RP/0/RP1/CPU0:CORE6-ASR9922-A(admin)# RP/0/RP1/CPU0:CORE6-ASR9922-A(admin)#show cr critmon crypto RP/0/RP1/CPU0:CORE6-ASR9922-A(admin)#show crypto key authentication rsa username cisco Sat May 16 17:26:33.651 UTC Key label: cisco Type : RSA public key authentication Size : 1024 Imported : 17:26:03 UTC Sat May 16 2020 Data : 30819F30 0D06092A 864886F7 0D010101 05000381 8D003081 89028181 00D5CD2F 8B735083 0E3A1393 4EDC3E5C 96D7AD4E A7555318 491295F5 1DEDC219 B1FDA75A 35439CE3 60FE4E6B E6C7D4D3 4B7C9AF9 1510B381 55011A89 690D95E8 A0EB6057 5B749F4C B01F02B1 877F865T 116ECB39 059A9E96 686293B3 023C5BDF 8B9F37A0 FA65DF81 AE273898 26CC0059 F8BAC64B 31661D5C 7D714317 392C26AB 2F020301 0001 RP/0/RP1/CPU0:CORE6-ASR9922-A(admin)# 验证结果 # [root@xuxing ~]# ssh -l cisco 9922a Last switch-over Sat May 2 11:36:06 2020: 2 weeks, 6 hours, 3 minutes ago RP/0/RP1/CPU0:CORE6-ASR9922-A# ","date":"16 May 2020","externalUrl":null,"permalink":"/blog/ssh-login-iox-without-password/","section":"Blog","summary":"证所周知，如果你需要 ssh 免密登陆到 ssh server，只需要将 ssh client 端的公钥复制到 ssh server 即可；那么如果需要实现 SSH 免密登陆 CISCO IOX 设备，只需要将你 ssh client 端的公钥复制到 CICCO IOX 设备即可，以下是复制的过程。","title":"SSH 免密登陆CISCO IOX设备","type":"blog"},{"content":" 查看路由表 # [root@xuxing ~]# ip route show default via 10.75.49.1 dev ens32 proto static metric 100 10.75.49.0/24 dev ens32 proto kernel scope link src 10.75.49.238 metric 100 [root@xuxing ~]# ip route show | column -t \u0026lt;\u0026lt;\u0026lt; 格式化显示 default via 10.75.49.1 dev ens32 proto static metric 100 10.75.49.0/24 dev ens32 proto kernel scope link src 10.75.49.238 metric 100 [root@xuxing ~]# [root@xuxing ~]# ip a 1: lo: \u0026lt;LOOPBACK,UP,LOWER_UP\u0026gt; mtu 65536 qdisc noqueue state UNKNOWN qlen 1 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host valid_lft forever preferred_lft forever 2: ens32: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000 link/ether 00:0c:29:10:f8:30 brd ff:ff:ff:ff:ff:ff inet 10.75.49.238/24 brd 10.75.49.255 scope global ens32 valid_lft forever preferred_lft forever inet6 fe80::b5ca:2b34:2fbe:4a03/64 scope link valid_lft forever preferred_lft forever 添加路由条目 # [root@xuxing ~]# ip route add 10.50.0.0/16 via 10.75.49.1 dev ens32 [root@xuxing ~]# ip route add 10.52.0.0/16 via 10.75.49.1 dev ens32 删除路由条目 # [root@xuxing ~]# ip route del 10.50.0.0/16 [root@xuxing ~]# ip route del 10.52.0.0/16 ","date":"11 May 2020","externalUrl":null,"permalink":"/blog/centos-static-route/","section":"Blog","summary":"查看路由表 # [root@xuxing ~]# ip route show default via 10.","title":"CentOS配置静态路由","type":"blog"},{"content":" 标签发布方式（Label Advertisement Mode） # 下游自主方式 DU（Downstream Unsolicited）：对于一个特定的 FEC，LSR 无需从上游获得标签请求消息即进行标签分配与分发。\n下游按需方式 DoD（Downstream on Demand）：对于一个特定的 FEC，LSR 获得标签请求消息之后才进行标签分配与分发。\n标签分配控制方式（Label Distribution Control Mode） # 独立标签分配控制方式（Independent）：本地 LSR 可以自主地分配一个标签绑定到某个 FEC，并通告给上游 LSR，而无需等待下游的标\n签。\n有序标签分配控制方式（Ordered）：对于 LSR 上某个 FEC 的标签映射，只有当该 LSR 已经具有此 FEC 下一跳的标签映射消息、或者\n该 LSR 就是此 FEC 的出节点时，该 LSR 才可以向上游发送此 FEC 的标签映射。\n标签保持方式（Label Retention Mode） # 自由标签保持方式（Liberal）：对于从邻居 LSR 收到的标签映射，无论邻居 LSR 是不是自己的下一跳都保留。\n保守标签保持方式（Conservative）：对于从邻居 LSR 收到的标签映射，只有当邻居 LSR 是自己的下一跳时才保留。\n华为 # 默认为/32 的 IGP 路由分标签，采用下游自主方式（DU）＋ 有序标签分配控制方式（Ordered）＋ 自由标签保持方式（Liberal）。\n思科 # 默认为非 BGP 路由分配标签，采用下游自主方式（DU） + 独立标签分配控制方式（Independent） + 自由标签保持方式（Liberal）。\nLDP 会话的建立过程 # Hello 消息中携带传输地址，双方使用传输地址建立 LDP 会话，传输地址较大的一方为主动发，主动发送 TCP 连接。\nLDP 会话存在两种关系，邻接和邻居关系。\nLDP 对等体之间，通过周期性发送 Hello 消息表明自己希望继续维持这种邻接关系。如果 Hello 保持定时器超时仍没有收到新的 Hello 消息，则删除 Hello 邻接关系。邻接关系被删除后，本端 LSR 将发送 Notification 消息，结束该 LDP 会话。 LDP 对等体之间通过 LDP 会话连接上传送的 Keepalive 消息来维持 LDP 会话。如果会话保持定时器(Keepalive 保持定时器)超时仍没有收到任何 Keepalive 消息，则关闭 TCP 连接，本端 LSR 将发送 Notification 消息，结束 LDP 会话。 Hello 报文是 UDP 报文，src 为接口地址，dst 为 224.0.0.2，TTL=1. Hello 数据包中总是携带 transport address.\nKeepalive 报文基于 TCP，src 为本端 transport 地址，dst 为对端宣告的 transport 地址,TTL =255\nRP/0/0/CPU0:R2#show mpls ldp parameters Mon Dec 20 03:38:08.447 UTC LDP Parameters: Role: Active Protocol Version: 1 Router ID: 10.1.2.2 Null Label: IPv4: Implicit Session: Hold time: 180 sec Keepalive interval: 60 sec Backoff: Initial:15 sec, Maximum:120 sec Global MD5 password: Disabled Discovery: Link Hellos: Holdtime:15 sec, Interval:5 sec Targeted Hellos: Holdtime:90 sec, Interval:10 sec Quick-start: Enabled (by default) Transport address: IPv4: 10.1.2.2 Graceful Restart: Disabled NSR: Disabled, Not Sync-ed Timeouts: Housekeeping periodic timer: 10 sec Local binding: 300 sec Forwarding state in LSD: 15 sec Delay in AF Binding Withdrawl from peer: 180 sec Max: 1500 interfaces (1200 attached, 300 TE tunnel), 2000 peers OOR state Memory: Normal 如上所示，hello 的 interval 是 5s，holdtime 是 15s；keeplive 的默认 interval 是 60s，holdtime 是 180s。\nNote:\n1.如果直连 link 存在 acl， block 了 udp 的 hello 包，将会 trigger 邻接关系 15s 内 down 进而邻居关系也会被 shutdown:\nRP/0/0/CPU0:Dec 20 03:04:00.467 : mpls_ldp[1181]: %ROUTING-LDP-5-HELLO_ADJ_CHANGE : VRF \u0026#39;default\u0026#39; (0x60000000), Link hello adjacency (10.1.23.3, GigabitEthernet0/0/0/1) with Nbr 10.1.3.3:0 is DOWN (Discovery Hello Hold Timer expired) RP/0/0/CPU0:Dec 20 03:04:00.477 : mpls_ldp[1181]: %ROUTING-LDP-5-NBR_CHANGE : VRF \u0026#39;default\u0026#39; (0x60000000), Neighbor 10.1.3.3:0 is DOWN (Discovery Hello Hold Timer expired) 2. 可以通过直连 link 建立邻接关系，非直连绕路建立邻居关系；因为是存在这种现象，建立邻居关系的 transport 的路由不是通过直连学到的。\n3. 关于 IGP ldp sync， 除了通过检查配置和 ldp 邻居关系， 还可以通过以下命令检查 ldp sync 的状态.\nmpls_ldp_sync.im_attr_ldp_sync_info_notify_handle,非 0 代表配置 igp ldp sync.\nmpls_ldp_sync.ldp_sync_info,TRUE 代表 LDP 邻居关系正常建立了\nRP/0/0/CPU0:BR01#show isis private all | include \u0026#34;Interface|mpls_ldp_sync\u0026#34; Tue Dec 14 13:22:29.276 UTC +++++++++++++++++++++++ IS-IS 1 Interface Private Data ++++++++++++++++++++++++ Interface GigabitEthernet0/0/0/0 mpls_ldp_sync.im_attr_ldp_sync_info_notify_handle : 303302848 mpls_ldp_sync.ldp_sync_info : TRUE mpls_ldp_sync.is_ldp_sync_info_ok : 1 Interface GigabitEthernet0/0/0/2 mpls_ldp_sync.im_attr_ldp_sync_info_notify_handle : 0 mpls_ldp_sync.ldp_sync_info : FALSE mpls_ldp_sync.is_ldp_sync_info_ok : 1 Interface Loopback0 mpls_ldp_sync.im_attr_ldp_sync_info_notify_handle : 0 mpls_ldp_sync.ldp_sync_info : FALSE mpls_ldp_sync.is_ldp_sync_info_ok : 0 ","date":"6 May 2020","externalUrl":null,"permalink":"/blog/ldp-summary/","section":"Blog","summary":"标签发布方式（Label Advertisement Mode） # 下游自主方式 DU（Downstream Unsolicited）：对于一个特定的 FEC，LSR 无需从上游获得标签请求消息即进行标签分配与分发。","title":"LDP 标签分配协议","type":"blog"},{"content":" ISIS 配置 # distribute link-state，将 IGP 的数据库导入 SR-TE 的数据库中。\nrouter isis 1 is-type level-2-only net 49.0000.0000.0001.00 distribute link-state address-family ipv4 unicast metric-style wide mpls traffic-eng level-2-only mpls traffic-eng router-id Loopback0 segment-routing mpls ! interface Loopback0 address-family ipv4 unicast prefix-sid index 1 ! ! SR-Policy 配置-显示路径 # segment-routing traffic-eng segment-list SIDLIST1 index 10 mpls label 16002 index 20 mpls label 16004 index 30 mpls label 16006 ! segment-list SIDLIST2 index 10 address ipv4 10.1.3.3 index 20 address ipv4 10.1.5.5 index 30 address ipv4 10.1.6.6 ! policy POLICY1 color 20 end-point ipv4 10.1.6.6 candidate-paths preference 50 explicit segment-list SIDLIST2 ! preference 100 explicit segment-list SIDLIST1 policy POLICY2 color 40 end-point ipv4 10.1.6.6 candidate-paths preference 100 explicit segment-list SIDLIST2 Some command # #show segment-routing traffic-eng policy #show segment-routing traffic-eng policy tabular #show segment-routing traffic-eng policy private #show segment-routing traffic-eng forwarding policy detail #show segment-routing traffic-eng ipv4 topology \u0026lt;\u0026lt;\u0026lt;\u0026lt; RP/0/0/CPU0:R1#show segment-routing traffic-eng policy Tue Apr 21 11:00:24.054 UTC SR-TE policy database --------------------- Color: 20, End-point: 10.1.6.6 Name: srte_c_20_ep_10.1.6.6 Status: Admin: up Operational: up for 02:14:58 (since Apr 21 08:45:26.009) Candidate-paths: Preference: 100 (configuration) (current) Name: POLICY1 Requested BSID: dynamic Explicit: segment-list SIDLIST1 (valid) Weight: 1, Metric Type: TE 16002 [Prefix-SID, 10.1.2.2] 16004 16006 Preference: 50 (configuration) Name: POLICY1 Requested BSID: dynamic Explicit: segment-list SIDLIST2 (invalid) Weight: 1, Metric Type: TE Attributes: Binding SID: 24006 Forward Class: 0 Steering BGP disabled: no IPv6 caps enable: yes Color: 40, End-point: 10.1.6.6 Name: srte_c_40_ep_10.1.6.6 Status: Admin: up Operational: up for 00:52:14 (since Apr 21 10:08:09.849) Candidate-paths: Preference: 100 (configuration) (current) Name: POLICY2 Requested BSID: dynamic Explicit: segment-list SIDLIST2 (valid) Weight: 1, Metric Type: TE 16003 [Prefix-SID, 10.1.3.3] 16005 [Prefix-SID, 10.1.5.5] 16006 [Prefix-SID, 10.1.6.6] Attributes: Binding SID: 24009 Forward Class: 0 Steering BGP disabled: no IPv6 caps enable: yes RP/0/0/CPU0:R1# RP/0/0/CPU0:R1# show segment-routing traffic-eng ipv4 topology Tue Apr 21 11:00:44.163 UTC SR-TE topology database ----------------------- Node 1 TE router ID: 10.1.1.1 Host name: R1 ISIS system ID: 0000.0000.0001 level-2 ISIS system ID: 0000.0000.0001 level-2 Prefix SID: Prefix 10.1.1.1, label 16001 (regular) Link[0]: local address 10.1.13.1, remote address 10.1.13.1 Local node: ISIS system ID: 0000.0000.0001 level-2 Remote node: TE router ID: 10.1.1.1 Host name: R1 ISIS system ID: 0000.0000.0001 level-2 Metric: IGP 10, TE 10 Bandwidth: Total link 125000000, Reservable 0 Admin-groups: 0x00000000 Adj SID: 24003 (unprotected) Link[1]: local address 10.1.12.1, remote address 10.1.12.2 Local node: ISIS system ID: 0000.0000.0001 level-2 Remote node: TE router ID: 10.1.2.2 Host name: R2 ISIS system ID: 0000.0000.0002 level-2 Metric: IGP 10, TE 10 Bandwidth: Total link 125000000, Reservable 0 Admin-groups: 0x00000000 Adj SID: 24001 (unprotected) ","date":"21 April 2020","externalUrl":null,"permalink":"/blog/sr-policy-configuration-example/","section":"Blog","summary":"ISIS 配置 # distribute link-state，将 IGP 的数据库导入 SR-TE 的数据库中。","title":"SR-Policy configuration example","type":"blog"},{"content":"Bucket and Token Algorithm\nhttps://www.jannet.hk/zh-Hans/post/bandwidth-management\nTc Time interval, 系统向 Bucket 注入 Token 的时间间隔.\nBc Committed Burst, 即 Bucket 的大小\nTc = Bc / CIR\nBe Excess Burst.\n单速单桶 # 单速双桶 # 双速双筒 # ","date":"14 April 2020","externalUrl":null,"permalink":"/blog/qos/","section":"Blog","summary":"Bucket and Token Algorithm","title":"Qos 相关文章","type":"blog"},{"content":"","date":"31 March 2020","externalUrl":null,"permalink":"/categories/nso/","section":"Categories","summary":"","title":"Nso","type":"categories"},{"content":"参考文章:\nCisco WAE 7.2.1 Installation Guide\nNotes：\n安装supervisor报错， 可以参考该文章解决:yum error\n“Cannot retrieve metalink for repository: epel/x86_64. Please verify its path and try again”\nStep0: Java/python # 我使用的是Centos 7完整安装， 默认自带的python是2.7.5， 所以就没有更新。\n建议不要使用Centos 8，使用的人少， 出现报错也不好排除。\nMake sure Java-8 is installed on the system and JAVA_HOME environment variable is pointing to jdk-1.8. Make sure that requests.auth python package is installed for the BW-OPT application to function in WAE. [root@localhost opt]# yum -y install java [root@localhost opt]# java -version openjdk version \u0026#34;1.8.0_242\u0026#34; OpenJDK Runtime Environment (build 1.8.0_242-b08) OpenJDK 64-Bit Server VM (build 25.242-b08, mixed mode) [root@localhost opt]# java -version openjdk version \u0026#34;1.8.0_242\u0026#34; OpenJDK Runtime Environment (build 1.8.0_242-b08) OpenJDK 64-Bit Server VM (build 25.242-b08, mixed mode) Step1：install supervisor # [root@localhost ~]# sudo yum install -y epel-release [root@localhost ~]# cd /etc/yum.repos.d/ [root@localhost yum.repos.d]# vi epel.repo [root@localhost yum.repos.d]# vi epel-testing.repo [root@localhost yum.repos.d]# [root@localhost yum.repos.d]# sudo yum install -y supervisor 参考官方install guide修改supervisor的配置文件。\nStep2：install WAE # root@localhost ~]# cd /opt/ [root@localhost opt]# ls rh supervisor WAE-Linux-v7.2.1.signed.bin [root@localhost opt]# ./WAE-Linux-v7.2.1.signed.bin Unpacking... Verifying signature... Downloading CA certificate from http://www.cisco.com/security/pki/certs/crcam2.cer ... Successfully downloaded and verified crcam2.cer. Downloading SubCA certificate from http://www.cisco.com/security/pki/certs/innerspace.cer ... Successfully downloaded and verified innerspace.cer. Verify CMD1: openssl verify -CAfile crcam2.cer innerspace.cer Verify CMD2: openssl verify -CAfile crcam2.cer -untrusted innerspace.cer WAE-CCO_RELEASE.cer Successfully verified root, subca and end-entity certificate chain. Successfully fetched a public key from WAE-CCO_RELEASE.cer. Successfully verified the signature of wae-linux-v7.2.1.bin using WAE-CCO_RELEASE.cer Cleaning up ... [root@localhost opt]# rm -rf WAE-Linux-v7.2.1.signed.bin [root@localhost opt]# chmod 777 wae-linux-v7.2.1.bin [root@localhost opt]# ./wae-linux-v7.2.1.bin wae721 Checking for dependencies.. Installing wae into \u0026#39;wae721\u0026#39; Extracting files to \u0026#39;wae721\u0026#39; ... Installation Complete. To set up a WAE run directory, execute source wae721/waerc wae-setup \u0026lt;run-dir\u0026gt; [root@localhost opt]# ls rh supervisor wae721 wae-linux-v7.2.1.bin [root@localhost opt]# rm -rf wae-linux-v7.2.1.bin [root@localhost opt]# cd wae721/ [root@localhost wae721]# ls bin doc etc lib packages VERSION waerc [root@localhost wae721]# source waerc [root@localhost opt]# vi /root/.bash_profile [root@localhost opt]# wae-setup wae721-run WARNING: Available disk space: 44GB, Minimum required: 50GB WARNING: Available memory: 15GB, Minimum required: 64GB WARNING: Maximum number of open files (ulimit -n): 1024, Recommended: 1000000 WAE admin password: Confirm password: [root@localhost opt]# [root@localhost opt]# cd wae721-run/ [root@localhost wae721-run]# ls data logs ncs-cdb packages README.wae scripts snapshot state wae.conf waectl wae.ini [root@localhost wae721-run]# [root@localhost wae721-run]# Step3：Start and Stop Cisco WAE # [root@localhost ~]# sudo ln -sf /opt/wae721-run/wae.ini /etc/supervisord.d/ [root@localhost ~]# [root@localhost ~]# supervisorctl update wae: added process group [root@localhost ~]# supervisorctl start wae:* wae:zookeeper: started wae:waectl: started wae:logrotate: started wae:wae-monitor: started wae:kafka: started [root@localhost ~]# supervisorctl status wae:kafka RUNNING pid 56795, uptime 0:00:12 wae:logrotate RUNNING pid 56793, uptime 0:00:12 wae:wae-monitor RUNNING pid 56794, uptime 0:00:12 wae:waectl RUNNING pid 56792, uptime 0:00:12 wae:zookeeper RUNNING pid 56791, uptime 0:00:12 [root@localhost ~]# [root@localhost ~]# [root@localhost ~]# cd /opt/wae721-run/ [root@localhost wae721-run]# ls data logs ncs-cdb packages README.wae scripts snapshot state wae.conf waectl wae.ini work [root@localhost wae721-run]# [root@localhost wae721-run]# [root@localhost wae721-run]# wae_cli root connected from 10.140.0.46 using ssh on localhost.localdomain root@wae\u0026gt; root@wae\u0026gt; switch cli root@wae# Step4：WAE Web GUI # 访问“https://x.x.x.x:8443”, 访问不了请将server的firewall关了或者放行8443接口。使用chrome无痕模式访问。\n","date":"31 March 2020","externalUrl":null,"permalink":"/blog/wae-7-2-1-install-steps/","section":"Blog","summary":"参考文章:","title":"WAE 7.2.1 install steps","type":"blog"},{"content":" 安装 NTP 服务 # [root@xuxing ~]# yum -y install ntp 修改配置文件 # [root@xuxing ~]# cat /etc/ntp.conf | grep -v ^# | grep -v ^$ driftfile /var/lib/ntp/drift restrict default kod nomodify notrap nopeer noquery restrict -6 default kod nomodify notrap nopeer noquery restrict 127.0.0.1 restrict ::1 restrict 10.0.0.0 mask 255.0.0.0 nomodify notrap \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; 选择ntp server 服务的client 范围 server 1.ntp.esl.cisco.com iburst \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; server 去网站https://www.pool.ntp.org/zone/asia选取对应地区server server 2.ntp.esl.cisco.com iburst server 3.ntp.esl.cisco.com iburst includefile /etc/ntp/crypto/pw keys /etc/ntp/keys disable monitor [root@xuxing ~]# 添加防火墙规则并重启 # [root@xuxing ~]# firewall-cmd --add-service=ntp --permanent [root@xuxing ~]# firewall-cmd --reload [root@xuxing ~]# systemctl start ntpd [root@xuxing ~]# systemctl enable ntpd [root@xuxing ~]# systemctl status ntpd 检查 server 状态 # [root@xuxing ~]# ntpq -p remote refid st t when poll reach delay offset jitter ============================================================================== *bgl11-row1-dc-n .GNSS. 1 u 59 64 37 128.524 0.521 0.301 +mtv5-ai27-dcm10 .GNSS. 1 u 49 64 77 191.412 2.389 0.507 +mtv5-ai27-dcm10 .GNSS. 1 u 21 64 77 192.614 1.762 0.420 [root@xuxing ~]# ntpq -p remote refid st t when poll reach delay offset jitter ============================================================================== *bgl11-row1-dc-n .GNSS. 1 u 66 64 37 128.524 0.521 0.301 +mtv5-ai27-dcm10 .GNSS. 1 u 56 64 77 191.412 2.389 0.507 +mtv5-ai27-dcm10 .GNSS. 1 u 28 64 77 192.614 1.762 0.420 [root@xuxing ~]# [root@xuxing ~]# [root@xuxing ~]# date -R Mon, 30 Mar 2020 12:20:21 -0400 \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; 一些参数解释解释 when Time since last NTP packet was received from peer, in milliseconds. poll Polling interval, in seconds. reach Peer reachability (bit string, in octal). delay Round-trip delay to peer, in milliseconds. offset Relative time difference between a peer clock and a local clock, in milliseconds. ","date":"30 March 2020","externalUrl":null,"permalink":"/blog/centos-ntp-server/","section":"Blog","summary":"安装 NTP 服务 # [root@xuxing ~]# yum -y install ntp 修改配置文件 # [root@xuxing ~]# cat /etc/ntp.","title":"Centos上配置NTP server","type":"blog"},{"content":" Trident - 1st Generation # A9K-4T-L\nA9K-4T-B\nA9K-4T-E\nA9K-8T/4-L\nA9K-8T/4-B\nA9K-8T/4-E\nA9K-8T-L\nA9K-8T-B\nA9K-8T-E\nA9K-16/8T-B\nA9K-40GE-L\nA9K-40GE-B\nA9K-40GE-E\nA9K-2T20GE-L\nA9K-2T20GE-B\nA9K-2T20GE-E\nTyphoon - 2nd Generation # A9K-MOD80-SE\nA9K-MOD80-TR\nA9K-MOD160-SE\nA9K-MOD160-TR\nA9K-24X10GE-SE\nA9K-24X10GE-TR\nA9K-36X10GE-SE\nA9K-36X10GE-TR\nA9K-2X100GE-SE\nA9K-2X100GE-TR\nA9K-1X100GE-SE\nA9K-1X100GE-TR\nA9K-40GE-SE\nA9K-40GE-TR\nA9K-4T16GE-SE\nA9K-4T16GE-TR\nASR9001\nTomahawk - 3rd Generation # A9K-8X100G-LB-SE\nA9K-8X100G-LB-TR\nA9K-8X100GE-SE\nA9K-8X100GE-TR\nA9K-4X100GE-SE\nA9K-4X100GE-TR\nA9K-400G-DWDM-TR\nA9K-MOD400-SE\nA9K-MOD400-TR\nA9K-MOD200-SE\nA9K-MOD200-SE\nA9k-48x1/10 Powerglide\nA9K-48X10GE-1G Powerglide\nA99-12X100GE Skyhammer\nA99-4X100GE Mini-Skyhammer\nLightspeed - 4th Generation # 32x100GE Lightspeed\n16x100GE Lightspeed\n8x100GE Lightspeed\nLightspeed Plus - 5th Generation - (400G port) # A99-32X100GE-X # A9K-20HG-FLEX # 灵活的支持 400G/100G/200G 端口\nA9K-8HG-FLEX # 2 slice,每个 slice 支持以下端口组合 1X400G/1X200G+2X100G/4X100G。\n","date":"19 March 2020","externalUrl":null,"permalink":"/blog/asr9000-linecard-type/","section":"Blog","summary":"Trident - 1st Generation # A9K-4T-L","title":"思科ASR9000板卡类型","type":"blog"},{"content":" 登陆CCO账号 # 需要在Tools-\u0026gt;User Preferences 中将自己的CCO账号登陆，并validate成功。\n下载SMU # 在CCO下选框中选择合适的平台以及版本，CSM将会列出改版本下所有public的SMU。勾选目标文件，在Action按钮中选择下载到Server。\n如果需要查看下载的状态，请到Dashboards-\u0026gt;CCO Download dashboards。\n选择需要升级的设备 # 在CSM的HOME页面你可以看到你导入进CSM的所有设备，下一步需要点击Install按钮，进行编辑升级流程。\n完成升级 # 对于Cisco XR设备的升级需要包含三个Action，即“Add”“Active”\u0026ldquo;Commit\u0026rdquo;.\n从相应的server，选择刚刚下载的软件包名，schedule升级步骤后，CSM会Login相应的设备，自动执行一些CLI的操作。\nCSM执行命令示例 # // Once you login the router, you will found CSM exec following command #admin install add source ftp://guest:*@10.75.49.254//home/tftpboot/IOX633 asr9k-px-6.3.3.CSCvr62342.tar asynchronous #admin install activate id 136 prompt-level none asynchronous #admin install commit ","date":"17 February 2020","externalUrl":null,"permalink":"/blog/install-smu-by-using-csm/","section":"Blog","summary":"登陆CCO账号 # 需要在Tools-\u0026gt;User Preferences 中将自己的CCO账号登陆，并validate成功。","title":"使用Ciso CSM安装SMU/升级设备","type":"blog"},{"content":"记录一下如何创建一个NSO service，只是用来测试使用，无参考意义。\nStep 1: Generate a service packet in runtime package directory. # #cd ncs-run/packages #ncs-make-package --service-skeleton template \u0026lt;l3vpn\u0026gt; Step 2: Modify the template file: # 使用NSO dry-run 一个配置，并format xml格式.修改template 文件如下：\n[root@localhost templates]# pwd /root/ncs-run/packages/l3vpn/templates [root@localhost templates]# ls l3vpn-template.xml [root@localhost templates]# cat l3vpn-template.xml \u0026lt;config-template xmlns=\u0026#34;http://tail-f.com/ns/config/1.0\u0026#34; servicepoint=\u0026#34;l3vpn\u0026#34;\u0026gt; \u0026lt;devices xmlns=\u0026#34;http://tail-f.com/ns/ncs\u0026#34;\u0026gt; \u0026lt;device\u0026gt; \u0026lt;name\u0026gt;{/device}\u0026lt;/name\u0026gt; \u0026lt;config\u0026gt; \u0026lt;bgp xmlns=\u0026#34;http://tail-f.com/ned/huawei-vrp\u0026#34;\u0026gt; \u0026lt;name\u0026gt;{/bgpas}\u0026lt;/name\u0026gt; \u0026lt;ipv4-family\u0026gt; \u0026lt;vpn-instance\u0026gt; \u0026lt;name\u0026gt;{/vpnname}\u0026lt;/name\u0026gt; \u0026lt;maximum\u0026gt; \u0026lt;load-balancing\u0026gt;{/load}\u0026lt;/load-balancing\u0026gt; \u0026lt;/maximum\u0026gt; \u0026lt;peer\u0026gt; \u0026lt;ip\u0026gt;{/peerip}\u0026lt;/ip\u0026gt; \u0026lt;as-number\u0026gt;{/asnum}\u0026lt;/as-number\u0026gt; \u0026lt;timer\u0026gt; \u0026lt;keepalive-hold\u0026gt; \u0026lt;keepalive\u0026gt;{/keeptime}\u0026lt;/keepalive\u0026gt; \u0026lt;hold\u0026gt;{/holdtime}\u0026lt;/hold\u0026gt; \u0026lt;/keepalive-hold\u0026gt; \u0026lt;/timer\u0026gt; \u0026lt;route-limit\u0026gt; \u0026lt;route-limit\u0026gt;{/limit}\u0026lt;/route-limit\u0026gt; \u0026lt;percentage\u0026gt;{/percent}\u0026lt;/percentage\u0026gt; \u0026lt;idle-timeout\u0026gt;{/idletime}\u0026lt;/idle-timeout\u0026gt; \u0026lt;/route-limit\u0026gt; \u0026lt;advertise-community/\u0026gt; \u0026lt;/peer\u0026gt; \u0026lt;/vpn-instance\u0026gt; \u0026lt;/ipv4-family\u0026gt; \u0026lt;/bgp\u0026gt; \u0026lt;/config\u0026gt; \u0026lt;/device\u0026gt; \u0026lt;/devices\u0026gt; \u0026lt;/config-template\u0026gt; [root@localhost templates]# Step 3: Edit YANG service model in PACKAGE-NAME/src/yang # 简单做测试使用，所以把变量的类型都定义为string了。\n[root@localhost yang]# cat l3vpn.yang module l3vpn { namespace \u0026#34;http://com/example/l3vpn\u0026#34;; prefix l3vpn; import ietf-inet-types { prefix inet; } import tailf-ncs { prefix ncs; } import tailf-common { prefix tailf; } list l3vpn { key name; uses ncs:service-data; ncs:servicepoint \u0026#34;l3vpn\u0026#34;; leaf name { type string; } // may replace this with other ways of refering to the devices. // replace with your own stuff here leaf device { mandatory true; type leafref { path \u0026#34;/ncs:devices/ncs:device/ncs:name\u0026#34;; } } leaf bgpas { type string; } leaf vpnname { type string; } leaf load { type string; } leaf peerip { type string; } leaf asnum { type string; } leaf keeptime { type string; } leaf holdtime { type string; } leaf limit { type string; } leaf percent { type string; } leaf idletime { type string; } } } [root@localhost yang]# Step 4：Build the service mode/Reload # $ cd PACKAGE-NAME/src $ make //reload admin@ncs# packages reload ","date":"13 February 2020","externalUrl":null,"permalink":"/blog/creating-an-nso-service/","section":"Blog","summary":"记录一下如何创建一个NSO service，只是用来测试使用，无参考意义。","title":"Creating an NSO Service","type":"blog"},{"content":"","date":"13 February 2020","externalUrl":null,"permalink":"/tags/nso/","section":"Tags","summary":"","title":"Nso","type":"tags"},{"content":"nl命令是用来为文本文件生成行号的，但最实用的用法还是在每行之前添加0。\n//显示行号，默认空白行不显示 [root@xuxing ~]# nl /etc/fstab //空白行也显示行号 [root@xuxing ~]# nl -b a /etc/fstab //为每行添加0，默认添加5个 [root@xuxing ~]# nl -b a -n rz /etc/fstab //指定添加3个0，使用\u0026#34;-w 3\u0026#34; [root@xuxing ~]# nl -b a -n rz -w 3 /etc/fstab //示例 [root@xuxing ~]# nl -b a -n rz /etc/fstab 000001 000002 # 000003 # /etc/fstab 000004 # Created by anaconda on Wed Dec 19 08:07:14 2018 000005 # 000006 # Accessible filesystems, by reference, are maintained under \u0026#39;/dev/disk\u0026#39; 000007 # See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info 000008 # 000009 /dev/mapper/centos-root / xfs defaults 0 0 000010 UUID=bd47b365-3718-40a2-a835-e6ae1c5187c5 /boot xfs defaults 0 0 000011 /dev/mapper/centos-swap swap swap defaults 0 0 [root@xuxing ~]# \u0026ldquo;Only for self-learning use, if infringement will delete.\u0026rdquo;\n","date":"29 December 2019","externalUrl":null,"permalink":"/blog/linux-daily-learning-nl/","section":"Blog","summary":"nl命令是用来为文本文件生成行号的，但最实用的用法还是在每行之前添加0。","title":"Linux daily learning(1)-nl","type":"blog"},{"content":"学习的时候搜到管理CISCO IOX 设备的ansible模块，“iosxr_config – Manage Cisco IOS XR configuration sections“，记录下有空玩玩。\n[student@workstation ~]$ ansible-doc -l | grep ios | grep cisco [student@workstation ~]$ [student@workstation ~]$ ansible-doc -l | grep iosxr_config iosxr_config Manage Cisco IOS XR configuration sections [student@workstation ~]$ [student@workstation ~]$ [student@workstation ~]$ [student@workstation ~]$ [student@workstation ~]$ [student@workstation ~]$ ansible-doc iosxr_config EXAMPLES: - name: configure top level configuration iosxr_config: lines: hostname {{ inventory_hostname }} - name: configure interface settings iosxr_config: lines: - description test interface - ip address 172.31.1.1 255.255.255.0 parents: interface GigabitEthernet0/0/0/0 - name: load a config from disk and replace the current config iosxr_config: src: config.cfg replace: config backup: yes - name: for idempotency, use full-form commands iosxr_config: lines: # - shut - shutdown # parents: int g0/0/0/1 parents: interface GigabitEthernet0/0/0/1 - name: configurable backup path iosxr_config: src: config.cfg backup: yes backup_options: filename: backup.cfg dir_path: /home/user ","date":"27 December 2019","externalUrl":null,"permalink":"/blog/ansible-module-iosxr_config/","section":"Blog","summary":"学习的时候搜到管理CISCO IOX 设备的ansible模块，“iosxr_config – Manage Cisco IOS XR configuration sections“，记录下有空玩玩。","title":"Ansible module \"iosxr_config\"","type":"blog"},{"content":"Telemetry 是一种类似 SNMP 技术的 feature，用于远程采集网络设备上相关信息。与 SNMP 不同的是，SNMP 是 Pull Mode，需要 server 端主动的要求 Get 某些信息，而 Telemetry 则是一种 Push Mode，可以周期性、主动的 push 相关信息到 server 上。SNMP 是秒级的数据采集， 而 Telemetry 可以实现毫秒级的数据采集.\n如何获得相应的 sensor-path # 与 SNMP 的 OID 类似，sensor-path 代表着你想要的获得哪些信息，在 XR 设备上我们可以使用如下命令去判断我们需要获得的信息是哪一类，即获得关键字；然后到 yang 文件夹过滤相关关键字:\nRP/0/RSP1/CPU0:9910-B#schema-describe show segment-routing traffic-eng forwarding policy name test-policy detail Fri Dec 27 01:57:38.336 UTC Action: get Path: RootOper.XTC.PolicyForwarding \u0026lt;\u0026lt;\u0026lt; XTC RP/0/RSP1/CPU0:9910-B#run Fri Dec 27 01:57:42.449 UTC [xr-vm_node0_RSP1_CPU0:~]$cd /pkg/yang/ [xr-vm_node0_RSP1_CPU0:/pkg/yang]$ls | grep xtc \u0026lt;\u0026lt;\u0026lt;cfg代表配置相关，oper与show command相关 Cisco-IOS-XR-infra-xtc-agent-cfg.yang Cisco-IOS-XR-infra-xtc-agent-oper-sub1.yang Cisco-IOS-XR-infra-xtc-agent-oper-sub2.yang Cisco-IOS-XR-infra-xtc-agent-oper.yang Cisco-IOS-XR-infra-xtc-cfg.yang Cisco-IOS-XR-infra-xtc-oper-sub1.yang Cisco-IOS-XR-infra-xtc-oper.yang //有用的文件： RP/0/RP0/CPU0:XTC#run Tue Jan 22 06:58:56.512 UTC [xr-vm_node0_RP0_CPU0:~]$cd /pkg/telemetry/mdt/protogen [xr-vm_node0_RP0_CPU0:/pkg/telemetry/mdt/protogen]$ls yang_to_schema.txt 接下来就需要自己去 yang 文件中找一些关键词，自己把 sensor path 组合起来.\n当然有更好的方法，可以参考我另一篇文章 ANX\nXR device configuration # RP/0/RSP1/CPU0:9910-B#show run telemetry model-driven Fri Dec 27 00:50:44.990 UTC telemetry model-driven destination-group spr-telemetry address-family ipv4 10.75.49.238 port 5432 encoding self-describing-gpb protocol tcp ! sensor-group sr-policy-forwarding sensor-path Cisco-IOS-XR-infra-xtc-agent-oper:xtc/policy-forwardings/policy-forwarding \u0026lt;\u0026lt;\u0026lt; 这个路径自己定义，查看相关yang文件补全后面的路径 ! subscription test sensor-group-id sr-policy-forwarding strict-timer sensor-group-id sr-policy-forwarding sample-interval 5000 destination-id spr-telemetry source-interface MgmtEth0/RSP1/CPU0/0 Use Pipeline get Telemetry info # 由于 github 上 pipeline 这个项目被存档了，后续需要 clone 的话需要使用以下路径 git clone https://github.com/xuxing3/bigmuddy-network-telemetry-pipeline.git [root@localhost ~]# git clone https://github.com/cisco/bigmuddy-network-telemetry-pipeline.git [root@localhost ~]# cd bigmuddy-network-telemetry-pipeline/ [root@localhost bigmuddy-network-telemetry-pipeline]# cp pipeline.conf pipeline-stdout.conf [root@server1 bigmuddy-network-telemetry-pipeline]# grep -v ^# pipeline-stdout.conf | grep -v ^$ [default] id = pipeline metamonitoring_prometheus_resource = /metrics metamonitoring_prometheus_server = :8989 [testbed] stage = xport_input type = udp encap = st listen = :5432 \u0026lt;\u0026lt;\u0026lt;\u0026lt; 定义监听的端口 [inspector] stage = xport_output type = tap file = /opt/xuxing.text \u0026lt;\u0026lt;\u0026lt; 定义存储的位置 datachanneldepth = 1000 [root@server1 bigmuddy-network-telemetry-pipeline]# [root@localhost bigmuddy-network-telemetry-pipeline]# ./bin/pipeline -log= -config=pipeline-stdout.conf INFO[2019-12-26 21:24:58.871798] Conductor says hello, loading config config=pipeline-stdout.conf debug=false fluentd= logfile= maxthreads=4 tag=pipeline version=\u0026#34;v1.0.0(bigmuddy)\u0026#34; INFO[2019-12-26 21:24:58.872676] Conductor starting up section name=conductor section=inspector stage=\u0026#34;xport_output\u0026#34; tag=pipeline INFO[2019-12-26 21:24:58.872739] Conductor starting up section name=conductor section=testbed stage=\u0026#34;xport_input\u0026#34; tag=pipeline INFO[2019-12-26 21:24:58.872756] Metamonitoring: serving pipeline metrics to prometheus name=default resource=\u0026#34;/metrics\u0026#34; server=\u0026#34;:8989\u0026#34; tag=pipeline INFO[2019-12-26 21:24:58.873114] TCP server starting listen=\u0026#34;:5432\u0026#34; name=testbed tag=pipeline INFO[2019-12-26 21:24:58.873113] Starting up tap countonly=false filename=\u0026#34;/opt/xuxing.text\u0026#34; name=inspector streamSpec=\u0026amp;{2 \u0026lt;nil\u0026gt;} tag=pipeline [root@localhost opt]# cat xuxing.text ------- 2019-12-26 19:40:31.267904257 -0500 EST ------- Summary: GPB(common) Message [10.75.49.65:48094(9910-B)/Cisco-IOS-XR-infra-xtc-agent-oper:xtc/policy-forwardings/policy-forwarding msg len: 827] { \u0026#34;Source\u0026#34;: \u0026#34;10.75.49.65:48094\u0026#34;, \u0026#34;Telemetry\u0026#34;: { \u0026#34;node_id_str\u0026#34;: \u0026#34;9910-B\u0026#34;, \u0026#34;subscription_id_str\u0026#34;: \u0026#34;test\u0026#34;, \u0026#34;encoding_path\u0026#34;: \u0026#34;Cisco-IOS-XR-infra-xtc-agent-oper:xtc/policy-forwardings/policy-forwarding\u0026#34;, \u0026#34;collection_id\u0026#34;: 56265, \u0026#34;collection_start_time\u0026#34;: 1577406835874, \u0026#34;msg_timestamp\u0026#34;: 1577406835874, \u0026#34;collection_end_time\u0026#34;: 1577406835886 }, \u0026#34;Rows\u0026#34;: [ { \u0026#34;Timestamp\u0026#34;: 1577406835885, \u0026#34;Keys\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;srte_c_888_ep_10.1.3.3\u0026#34; }, \u0026#34;Content\u0026#34;: { \u0026#34;are-stats-valid\u0026#34;: \u0026#34;true\u0026#34;, \u0026#34;binding-sid\u0026#34;: { \u0026#34;label\u0026#34;: 24005, \u0026#34;sid-type\u0026#34;: \u0026#34;mpls\u0026#34; }, \u0026#34;candidate-path-name\u0026#34;: \u0026#34;test\u0026#34;, \u0026#34;color\u0026#34;: 888, \u0026#34;endpoint-address\u0026#34;: { \u0026#34;af-name\u0026#34;: \u0026#34;ipv4\u0026#34;, \u0026#34;ipv4\u0026#34;: \u0026#34;10.1.3.3\u0026#34; }, \u0026#34;forwarding-stats-bytes\u0026#34;: 140, \u0026#34;forwarding-stats-pkts\u0026#34;: 5, \u0026#34;is-local-label-valid\u0026#34;: \u0026#34;true\u0026#34;, \u0026#34;local-label\u0026#34;: 24004, \u0026#34;paths\u0026#34;: { \u0026#34;are-stats-valid\u0026#34;: \u0026#34;true\u0026#34;, \u0026#34;bkup-path-id\u0026#34;: 0, \u0026#34;forwarding-stats-bytes\u0026#34;: 140, \u0026#34;forwarding-stats-pkts\u0026#34;: 5, \u0026#34;is-protected\u0026#34;: \u0026#34;false\u0026#34;, \u0026#34;is-pure-bkup\u0026#34;: \u0026#34;false\u0026#34;, \u0026#34;label-stack\u0026#34;: 16003, \u0026#34;load-metric\u0026#34;: 64, \u0026#34;next-hop-ipv4\u0026#34;: \u0026#34;10.1.12.1\u0026#34;, \u0026#34;next-hop-table-id\u0026#34;: 3758096384, \u0026#34;outgoing-interface\u0026#34;: \u0026#34;HundredGigE0/0/0/0\u0026#34;, \u0026#34;path-id\u0026#34;: 1, \u0026#34;segment-list-name\u0026#34;: \u0026#34;test\u0026#34; }, \u0026#34;policy-name\u0026#34;: \u0026#34;srte_c_888_ep_10.1.3.3\u0026#34; } } ] } RP/0/RSP1/CPU0:9910-B#show segment-routing traffic-eng forwarding policy Fri Dec 27 00:53:24.082 UTC SR-TE Policy Forwarding database -------------------------------- Color: 888, End-point: 10.1.3.3 Name: srte_c_888_ep_10.1.3.3 Candidate path name: test Binding SID: 24005 Segment Lists: SL[0]: Name: test Paths: Path[0]: Outgoing Label: 16003 Outgoing Interface: HundredGigE0/0/0/0 Next Hop: 10.1.12.1 Switched Packets/Bytes: 5/140 FRR Pure Backup: No Policy Packets/Bytes Switched: 5/140 Some command # show telemetry model-driven sensor-group show telemetry model-driven destination show telemetry model-driven subscription For a specific sensor-group, destination-group, or subscription. show telemetry model-driven sensor-group \u0026lt;sensor-group-nme\u0026gt; internal show telemetry model-driven destination \u0026lt;destination-name\u0026gt; show telemetry model-driven subscription \u0026lt;subscription-name\u0026gt; internal For traces or showtech. show telemetry model-driven trace all (included in show tech telemetry) show tech-support telemetry model-driven For gRPC. show grpc status show grpc trace all (included in show tech telemetry) show tech-support grpc Some sensor path # BGPCisco-IOS-XR-ipv4-bgp-oper:bgp/bpm-instances-table/bpm-instances\nCisco-IOS-XR-ipv4-bgp-oper:bgp/instances/instance/instance-active/default-vrf/process-info\nCisco-IOS-XR-ipv4-bgp-oper:bgp/instances/instance/instance-active/default-vrf/neighbors/neighbor/message-statistics\nCisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/bgp/as/informationQosCisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input\nCisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/outputCPUCisco-IOS-XR-wdsysmon-fd-oper:system-monitoring/cpu-utilizationMemoryCisco-IOS-XR-nto-misc-oper:memory-summary/nodes/node/summarySLACisco-IOS-XR-man-ipsla-oper:ipsla/operation-data/operations/operation/statistics/latest/target/specific-stats/icmp-path-jitter-stats\nCisco-IOS-XR-man-ipsla-oper:ipsla/operation-data/operations/operation/statistics/latest/hops/hop/specific-stats/icmp-path-jitter-statsISISCisco-IOS-XR-clns-isis-oper:isis/instances/instance/statistics-global\nCisco-IOS-XR-clns-isis-oper:isis/instances/instance/levels/level/adjacencies/adjacency\nCisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/isis/as/information\nCisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/isis/as/informationIPv4/IPv6 Interface counterCisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/protocols/protocolOpticalCisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-infoEnvCisco-IOS-XR-sysadmin-envmon-ui:environment/oper/UptimeCisco-IOS-XR-shellutil-oper:system-time/uptimeinterfaceCisco-IOS-XR-pfi-im-cmd-oper:interfaces/interface-summary\nCisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-countersNCS55xx_NPUCisco-IOS-XR-platforms-ofa-oper:ofa/stats/nodes/node/Cisco-IOS-XR-NCS-BDplatforms-npu-resources-oper:hw-resources-datas\nCisco-IOS-XR-platforms-ofa-oper:ofa/stats/nodes/node/Cisco-IOS-XR-NCS-BDplatforms-npu-resources-oper:stats-resources-datasinterface-date-rateCisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/data-rate ","date":"27 December 2019","externalUrl":null,"permalink":"/blog/telemetry-simple-configuration-in-cisco-xr-devices/","section":"Blog","summary":"Telemetry 是一种类似 SNMP 技术的 feature，用于远程采集网络设备上相关信息。与 SNMP 不同的是，SNMP 是 Pull Mode，需要 server 端主动的要求 Get 某些信息，而 Telemetry 则是一种 Push Mode，可以周期性、主动的 push 相关信息到 server 上。SNMP 是秒级的数据采集， 而 Telemetry 可以实现毫秒级的数据采集.","title":"Telemetry simple configuration in Cisco XR devices","type":"blog"},{"content":"ASR9K 有两种虚拟化的技术，一种为 nV edge，也叫 nV cluster，属于将两个 ASR9K 的机箱虚拟化成一个路由器，使用统一的控制层面，类似于 CRS 中的多机(5.3.4 以后开始就不再支持该 feature,link)；另一种为 nV satellite，这种技术是为了扩展 9K 上 GigabitEthernet 接口，通过 ASR9K 外接一个ASR 9000v来实现（或者 901，903），其中一个 9000v 上包含 40+ Gi 的下行接口，4 个 TenG 的上行接口。\n以下介绍 nV satellite Dual-Home 的一个配置，即一个 9000v 上行连接两个 ASR9K，并为两个 ASR9K 配置不同的优先级，使同一时间只有一个 ASR9K 为 active role，参与流量转发的，另一台为 standby。\nTopology # Configuration # RP/0/RSP0/CPU0:ASR9006-H#show run int lo10 interface Loopback10 ipv4 address 220.80.136.225 255.255.255.255 router ospf xuxing nsr log adjacency changes detail router-id 220.80.136.225 nsf ietf distance 120 redistribute connected metric 100 address-family ipv4 unicast area 0 network point-to-point interface Loopback10 ! interface TenGigE0/1/1/0 cost 2000 network point-to-point mpls ldp router-id 220.80.136.225 neighbor 220.80.136.224:0 password encrypted xxxxxxxxxx ! address-family ipv4 discovery targeted-hello accept RP/0/RSP0/CPU0:ASR9006-H#show mpls ldp neighbor brief Peer GR NSR Up Time Discovery Address IPv4 Label ----------------- -- --- ---------- --------- ------- ---------- 220.80.136.224:0 N N/A 6d14h 1 9 24 \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; RP/0/RSP0/CPU0:ASR9006-H#show run nv nv satellite 100 type asr9000v ipv4 address 192.168.200.3 \u0026lt;\u0026lt;\u0026lt;\u0026lt; 这个地址是为ASR9000v分配的管理地址 redundancy host-priority 40 \u0026lt;\u0026lt;\u0026lt;\u0026lt; 类似的可以为另一台ASR9K配置不同的优先级， 越大越优先 ! serial-number CAT1821UXXX ! ! RP/0/RSP0/CPU0:ASR9006-H#show run int lo11 Sun Nov 26 23:38:25.372 UTC interface Loopback11 vrf nv-mgmt ipv4 address 192.168.200.2 255.255.255.0 ! RP/0/RSP0/CPU0:ASR9006-H#show run int tenGigE 0/1/1/1 Sun Nov 26 23:38:18.469 UTC interface TenGigE0/1/1/1 description to asr9000v vrf nv-mgmt ipv4 point-to-point ipv4 unnumbered Loopback11 load-interval 30 nv satellite-fabric-link satellite 100 redundancy iccp-group 3 ! remote-ports GigabitEthernet 0/0/0-43 ! ! ! RP/0/RSP0/CPU0:ASR9006-H#show nv satellite status brief Sun Nov 26 23:41:49.099 UTC Sat-ID Type IP Address MAC address Status ------ -------- ------------ -------------- ------------------------------- 100 asr9000v 192.168.200.3 6cfa.89d6.859c Connected (Act) RP/0/RSP0/CPU0:ASR9006-H#telnet vrf nv-mgmt 192.168.200.3 Trying 192.168.200.3... Connected to 192.168.200.3. Escape sequence is \u0026#39;^^q\u0026#39;. LC:Satellite# LC:Satellite# \u0026lt;\u0026lt;\u0026lt; 你可以通过telnet 9000v管理地址，登陆9000v LC:Satellite# Upgrade nV Satellite # 需要为 ASR9000 安装 9000v 的 PIE 升级会使 9000v 重启 升级 Guide\nNote # 双宿的时候，standby ASR9000 上连接到 9000v 的接口会处于 up/down 的状态，不转发流量。\nRelated command # #show nv satellite status brief #show nv satellite status #show nv satellite protocol discovery #show nv satellite protocol control brief #show nv satellite protocol control #show nv satellite protocol redundancy #show nv satellite protocol control brief #show nv satellite protocol control #show iccp group ","date":"26 November 2019","externalUrl":null,"permalink":"/blog/asr9000-nv-satellitedual-home/","section":"Blog","summary":"ASR9K 有两种虚拟化的技术，一种为 nV edge，也叫 nV cluster，属于将两个 ASR9K 的机箱虚拟化成一个路由器，使用统一的控制层面，类似于 CRS 中的多机(5.","title":"ASR9000 nV satellite  (Dual-Home)","type":"blog"},{"content":"","date":"12 November 2019","externalUrl":null,"permalink":"/tags/conf/","section":"Tags","summary":"","title":"Conf","type":"tags"},{"content":" CRS-ACL-Based Traffic Mirroring # RP/0/RSP0/CPU0:CRS #show access-lists span Thu Oct 11 09:08:44.123 UTC ipv4 access-list span 10 permit ipv4 host 10.1.12.1 host 10.1.23.3 capture \u0026lt;\u0026lt;\u0026lt;加capture关键字的acl条目才会执行span 15 permit ipv4 host 10.2.2.2 host 10.3.3.3 20 permit ipv4 any any RP/0/RSP0/CPU0:ASR9006-G# RP/0/RSP0/CPU0:CRS#show run monitor-session cmcc ipv4 Thu Oct 11 09:08:00.562 UTC monitor-session cmcc ipv4 destination next-hop 10.1.34.4 ! RP/0/RSP0/CPU0:CRS#show run int gi0/0/0/0 Thu Oct 11 09:06:09.369 UTC interface GigabitEthernet0/0/0/0 ipv4 address 10.1.12.2 255.255.255.0 monitor-session cmcc ipv4 direction rx-only \u0026lt;\u0026lt;\u0026lt;\u0026lt; CRS 仅支持入向流量的SPAN，所以必须指定rx-only关键字 acl ! ipv4 access-group span ingress CRS-SPAN over Pseudowire # ASR9000 中其实是有相关的 feature 的，而且配置很简单，无需额外的物理连线，可以在内部直接将 monitor 的流量通过 PW 发给对端，monitor 的源就相当于 AC 链路了，但是 CRS 中不支持相关的配置，但我们可以“曲线救国”，实现 span 的流量通过 L2VPN 发给对端 PE.\n有关 ASR9K 的对应 feature 可以参考以下的文章：\nHow to Configure Traffic Mirroring over Pseudowire 以下是在 CRS 中通过其它方法实现的相同的功能的配置案例：如下图所示， 将 Ten0/1/0/7 的入向流量通过 monitor-session 复制到对端的 5501-A.\n需要使用一根光纤将 Ten0/1/0/10 和 Ten0/1/0/6 环起来。相关配置如下：\nCRS-A L2VPN\ninterface TenGigE0/1/0/6 l2transport l2vpn xconnect group xuxing p2p xuxing interface TenGigE0/1/0/6 neighbor ipv4 218.21.155.247 pw-id 10 ! interface TenGigE0/1/0/10 ipv4 address 200.0.0.1 255.255.255.0 ! ASR9922 L2VPN\ninterface TenGigE0/1/0/6 l2transport ! l2vpn xconnect group xuxing p2p xuxing interface TenGigE0/1/0/6 neighbor ipv4 218.25.210.64 pw-id 10 CRS-A SPAN\nipv4 access-list span 10 permit ipv4 host 100.1.1.5 any capture 20 permit ipv4 any any ! monitor-session cmcc ipv4 destination next-hop 200.0.0.2 ! interface TenGigE0/1/0/7 ipv4 address 100.1.1.2 255.255.255.0 monitor-session cmcc ipv4 direction rx-only acl ! load-interval 30 ipv4 access-group span ingress ! NCS5501\ninterface TenGigE0/0/0/6 ipv4 address 200.0.0.2 255.255.255.0 Note # 记录下 SPAN 后流量的封装格式：\n上图，镜像流量的目的地址是 10.1.13.2，那么镜像流量在 CRS 和 Test Device 之间的封装如下所示：\nSome command # #Show monitor-session status #Show monitor-session status detail #show monitor-session ipv4 counters location 0/0/CPU0 \u0026lt;\u0026lt;\u0026lt; CRS 需要加location才能查看counter ","date":"12 November 2019","externalUrl":null,"permalink":"/blog/monitor-session/","section":"Blog","summary":"CRS-ACL-Based Traffic Mirroring # RP/0/RSP0/CPU0:CRS #show access-lists span Thu Oct 11 09:08:44.","title":"Monitor session 配置案例","type":"blog"},{"content":" SR ISIS # router isis 1 is-type level-2-only net 49.0000.0000.0001.00 address-family ipv4 unicast metric-style wide segment-routing mpls ! interface Loopback0 address-family ipv4 unicast prefix-sid index 1 ! SR OSPF # router ospf 1 router-id 10.1.2.2 segment-routing mpls redistribute isis 1 route-policy Loopback address-family ipv4 unicast area 0 interface Loopback0 passive enable prefix-sid index 2 SR BGP # route-policy SID($SID) set label-index $SID end-policy ! router bgp 4 bgp router-id 10.1.4.4 address-family ipv4 unicast network 10.1.4.4/32 route-policy SID(4) allocate-label all ! neighbor 10.1.45.5 remote-as 5 address-family ipv4 labeled-unicast route-policy pass in route-policy pass out ! ! ! SR 路由重分发案例 # 使用 router-policy 只重分发 Loopback （/32 prefix）。\nroute-policy Loopback if destination in (0.0.0.0/0 eq 32) then pass else drop endif end-policy address-family ipv4 unicast redistribute xx 1 route-policy Loopback ISIS\nRP/0/0/CPU0:R1#show isis database R2.00-00 detail verbose Tue Nov 12 12:26:08.786 UTC IS-IS 1 (Level-2) Link State Database LSPID LSP Seq Num LSP Checksum LSP Holdtime/Rcvd ATT/P/OL R2.00-00 0x0000021a 0x9162 380 /1199 0/0/0 Area Address: 49 Metric: 10 IS-Extended R1.00 Interface IP Address: 10.1.12.2 Neighbor IP Address: 10.1.12.1 Link Maximum SID Depth: Subtype: 1, Value: 10 ADJ-SID: F:0 B:0 V:1 L:1 S:0 P:0 weight:0 Adjacency-sid:24001 NLPID: 0xcc IP Address: 10.1.2.2 Metric: 10 IP-Extended 10.1.2.2/32 Prefix-SID Index: 2, Algorithm:0, R:0 N:1 P:0 E:0 V:0 L:0 Prefix Attribute Flags: X:0 R:0 N:1 Metric: 0 IP-Extended 10.1.3.3/32 Prefix-SID Index: 3, Algorithm:0, R:1 N:0 P:1 E:0 V:0 L:0 Prefix Attribute Flags: X:1 R:0 N:0 Metric: 0 IP-Extended 10.1.4.4/32 Prefix-SID Index: 4, Algorithm:0, R:1 N:0 P:1 E:0 V:0 L:0 Prefix Attribute Flags: X:1 R:0 N:0 Metric: 10 IP-Extended 10.1.12.0/24 Prefix Attribute Flags: X:0 R:0 N:0 Metric: 0 IP-Extended 10.1.5.5/32 Prefix-SID Index: 5, Algorithm:0, R:1 N:0 P:1 E:0 V:0 L:0 Prefix Attribute Flags: X:1 R:0 N:0 Hostname: R2 Router Cap: 10.1.2.2, D:0, S:0 Segment Routing: I:1 V:0, SRGB Base: 16000 Range: 8000 SR Algorithm: Algorithm: 0 Algorithm: 1 Node Maximum SID Depth: Subtype: 1, Value: 10 OSPF\nRP/0/0/CPU0:R2#show ospf database opaque-as 7.0.0.1 Tue Nov 12 12:32:53.108 UTC OSPF Router with ID (10.1.2.2) (Process ID 1) Type-11 Opaque Link AS Link States LS age: 651 Options: (No TOS-capability, DC) LS Type: Opaque AS Link Link State ID: 7.0.0.1 Opaque Type: 7 Opaque ID: 1 Advertising Router: 10.1.2.2 LS Seq Number: 800000d0 Checksum: 0x9b12 Length: 44 Extended Prefix TLV: Length: 20 Route-type: 5 AF : 0 Flags : 0x0 Prefix : 10.1.1.1/32 SID sub-TLV: Length: 8 Flags : 0x40 MTID : 0 Algo : 0 SID Index : 1 LS age: 359 Options: (No TOS-capability, DC) LS Type: Opaque AS Link Link State ID: 7.0.0.1 Opaque Type: 7 Opaque ID: 1 Advertising Router: 10.1.4.4 LS Seq Number: 800000d0 Checksum: 0x5647 Length: 44 Extended Prefix TLV: Length: 20 Route-type: 5 AF : 0 Flags : 0x0 Prefix : 10.1.5.5/32 SID sub-TLV: Length: 8 Flags : 0x40 MTID : 0 Algo : 0 SID Index : 5 RP/0/0/CPU0:R2# BGP\nRP/0/0/CPU0:R5#show route 10.1.4.4/32 Tue Nov 12 12:24:39.372 UTC Routing entry for 10.1.4.4/32 Known via \u0026#34;bgp 5\u0026#34;, distance 20, metric 0, [ei]-bgp, labeled unicast (3107), labeled SR Tag 4, type external Installed Nov 7 16:44:44.757 for 4d19h Routing Descriptor Blocks 10.1.45.4, from 10.1.45.4, BGP external Route metric is 0 No advertising protos. RP/0/0/CPU0:R5#show bgp ipv4 labeled-unicast 10.1.4.4/32 Tue Nov 12 12:25:15.710 UTC BGP routing table entry for 10.1.4.4/32 Versions: Process bRIB/RIB SendTblVer Speaker 7 7 Local Label: 16004 Last Modified: Nov 7 16:44:44.269 for 4d19h Paths: (1 available, best #1) Not advertised to any peer Path #1: Received by speaker 0 Not advertised to any peer 4 10.1.45.4 from 10.1.45.4 (10.1.4.4) Received Label 3 Origin IGP, metric 0, localpref 100, valid, external, best, group-best, labeled-unicast Received Path ID 0, Local Path ID 1, version 7 Origin-AS validity: (disabled) Prefix SID Attribute Size: 7 Label Index: 4 ","date":"12 November 2019","externalUrl":null,"permalink":"/blog/sr-config-example/","section":"Blog","summary":"SR ISIS # router isis 1 is-type level-2-only net 49.","title":"SR 配置案例","type":"blog"},{"content":" Download NSO from Cisco Website Make sure java and python have been install in your server. Java -version should indicate a java version of “1.7” or higher.Python2 needs to be version 2.7.5 or higher. For Python3, the version needs to be 3.4 or higher.\nInstall Java # [root@localhost ~]# tar -zxvf jdk-8u202-linux-x64.tar.gz [root@localhost ~]# mkdir /usr/java [root@localhost ~]# mv jdk1.8.0_202/ /usr/java [root@localhost ~]# vi /etc/profile export JAVA_HOME=/usr/java/jdk1.8.0_202 export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar export PATH=$PATH:$JAVA_HOME/bin Install NSO(local-install) # [root@localhost ~]# chmod 777 nso-5.2.1.linux.x86_64.signed.bin [root@localhost ~]# ./nso-5.2.1.linux.x86_64.signed.bin [root@localhost ~]# ./nso-5.2.1.linux.x86_64.installer.bin $HOME/nso-5.2.1 [root@localhost ~]# echo \u0026#39;source $HOME/nso-5.2.1/ncsrc\u0026#39; \u0026gt;\u0026gt; ~/.bashrc [root@localhost ~]# ncs-setup --dest ./ncs-run Install Ned # [root@localhost ~]# chmod 777 ncs-5.2-cisco-iosxr-7.13.4.signed.bin [root@localhost ~]# ./ncs-5.2-cisco-iosxr-7.13.4.signed.bin [root@localhost ~]# tar -xvf ncs-5.2-cisco-iosxr-7.13.4.tar.gz [root@localhost src]# pwd /root/cisco-iosxr-cli-7.13/src [root@localhost src]# make all [root@localhost ~]# mv cisco-iosxr-cli-7.13/ nso-5.2.1/packages/neds/ [root@localhost ~]# ln -s $HOME/nso-5.2.1/packages/neds/cisco-iosxr-cli-7.13 ./ncs-run/packages/ [root@localhost ~]# cd ncs-run/ [root@localhost ncs-run]# ncs [root@localhost ncs-run]# ncs_cli -u admin -C admin@ncs# admin@ncs# packages reload admin@ncs# show packages package package-version Add devices # admin@ncs(config)# devices authgroups group calo admin@ncs(config-group-calo)# default-map remote-name cisco admin@ncs(config-group-calo)# default-map remote-password cisco admin@ncs(config-group-calo)# commit admin@ncs(config)# devices device 5501 admin@ncs(config-device-5501)# address 10.75.49.137 admin@ncs(config-device-5501)# authgroup calo admin@ncs(config-device-5501)# device-type cli ned-id cisco-iosxr-cli-7.13 admin@ncs(config-device-5501)# device-type cli protocol ssh admin@ncs(config-device-5501)# state admin-state unlocked admin@ncs(config-device-5501)# commit admin@ncs(config)# devices device 5501 ssh fetch-host-keys admin@ncs# devices device 5501 sync-from NCS5501: ssh server v2 ssh server netconf vrf default RP/0/RP0/CPU0:R2-5501#show run netconf-yang agent Thu Oct 31 04:24:33.798 UTC netconf-yang agent ssh RP/0/RP0/CPU0:R2-5501#show run netconf Thu Oct 31 04:24:22.880 UTC netconf agent tty Enable Web GUI # [root@localhost ~]# firewall-cmd --permanent --zone=public --add-port=8080/tcp [root@localhost ~]# firewall-cmd --permanent --zone=public --add-port=8080/udp [root@localhost ~]# firewall-cmd --reload Web GUI password admin/admin NSO-system install # [root@localhost ~]#sudo sh nso-5.2.1.linux.x86_64.installer.bin --system-install [root@localhost ~]#groupadd ncsadmin [root@localhost ~]#groupadd ncsoper [root@localhost ~]#id root [root@localhost ~]#usermod -a -G \u0026#39;ncsadmin\u0026#39; \u0026#39;root\u0026#39; [root@localhost ~]#usermod -a -G \u0026#39;ncsoper\u0026#39; \u0026#39;root\u0026#39; Intsall log: [root@localhost ~]# sudo sh nso-5.2.1.linux.x86_64.installer.bin --system-install INFO Using temporary directory /tmp/ncs_installer.91949 to stage NCS installation bundle INFO Using /opt/ncs/ncs-5.2.1 for static files INFO Using /etc/ncs for configuration files INFO Using /var/opt/ncs for run-time state files INFO Using /var/log/ncs for log files INFO Unpacked ncs-5.2.1 in /opt/ncs/ncs-5.2.1 INFO Found and unpacked corresponding DOCUMENTATION_PACKAGE INFO Found and unpacked corresponding EXAMPLE_PACKAGE INFO Generating default SSH hostkey (this may take some time) INFO SSH hostkey generated INFO Environment set-up generated in /opt/ncs/ncs-5.2.1/ncsrc INFO NSO installation script finished INFO Found and unpacked corresponding NETSIM_PACKAGE INFO Generating keys for encrypted-strings INFO Configuring installation for PAM authentication INFO Using PAM service system-auth for authentication INFO Generating self-signed certificates for HTTPS INFO Installed init script /etc/init.d/ncs INFO Installed user profile script ncs.sh in /etc/profile.d INFO Installed user profile script ncs.csh in /etc/profile.d INFO Installed \u0026#39;logrotate\u0026#39; configuration file ncs in /etc/logrotate.d INFO The installation has been configured for PAM authentication, INFO with group assignment based on the OS group database INFO (e.g. /etc/group file). Users that need access to NCS must INFO belong to either the \u0026#39;ncsadmin\u0026#39; group (for unlimited access INFO rights) or the \u0026#39;ncsoper\u0026#39; group (for minimal access rights). INFO To create the \u0026#39;ncsadmin\u0026#39; group, use OS shell command: groupadd ncsadmin INFO To create the \u0026#39;ncsoper\u0026#39; group, use OS shell command: groupadd ncsoper INFO To add an existing user to one of these groups, use OS shell command: usermod -a -G \u0026lt;groupname\u0026gt; \u0026lt;username\u0026gt; INFO NCS installation complete [root@localhost ~]# ","date":"31 October 2019","externalUrl":null,"permalink":"/blog/nso-initial-install/","section":"Blog","summary":"Download NSO from Cisco Website Make sure java and python have been install in your server.","title":"NSO-Initial Install","type":"blog"},{"content":"EVPN means next-generation all-in-one VPN technology that provides a wide of range of services such as E-LAN, E-Line, E-TREE, L3VPN, DCI, DC-Overlay, IRB, … The following is the mapping between EVPN and traditional VPN technologies.\nThis topic will introduce EVPN L3VPN.\nFirstly, EVPN will provide below different route types, it use Type 5 to advise VPNv4 prefiex.\nEVPN Route Types\nTopology # Core IGP # router isis core is-type level-2-only net 49.0000.0000.0000.4009.00 segment-routing global-block 100000 165534 address-family ipv4 unicast metric-style wide segment-routing mpls ! interface Loopback0 passive address-family ipv4 unicast prefix-sid index 9 ! ! interface HundredGigE0/0/1/0 circuit-type level-2-only point-to-point address-family ipv4 unicast EVPN # *********PE1********** router bgp 1 address-family vpnv4 unicast ! address-family l2vpn evpn ! neighbor-group evpn-peer remote-as 1 update-source Loopback0 address-family l2vpn evpn advertise vpnv4 unicast re-originated \u0026lt;\u0026lt;\u0026lt;\u0026lt; Send Type 5 ! ! neighbor 172.16.64.21\t\u0026lt;\u0026lt;\u0026lt;\u0026lt; Neighbor with PE use neighbor-group evpn-peer ! vrf vpn1 address-family ipv4 unicast ! neighbor 10.1.1.1 \u0026lt;\u0026lt;\u0026lt; Neighbor with CE remote-as 65535 address-family ipv4 unicast route-policy pass-all in route-policy pass-all out as-override soft-reconfiguration inbound always ! ! ! ! RP/0/RP0/CPU0:R2-5501#show run vrf Fri Oct 25 02:50:36.685 UTC vrf vpn1 rd 172.16.64.9:1 address-family ipv4 unicast import route-target 1:1 ! export route-target 1:1 ! Check prefix from peer PE # RP/0/RP0/CPU0:R2-5501# show bgp l2vpn evpn summary Fri Oct 25 03:14:10.589 UTC BGP router identifier 172.16.64.9, local AS number 3462 BGP generic scan interval 60 secs Non-stop routing is enabled BGP table state: Active Table ID: 0x0 RD version: 0 BGP main routing table version 203 BGP NSR Initial initsync version 1 (Reached) BGP NSR/ISSU Sync-Group versions 0/0 BGP scan interval 60 secs BGP is operating in STANDALONE mode. Process RcvTblVer bRIB/RIB LabelVer ImportVer SendTblVer StandbyVer Speaker 203 203 203 203 203 0 Neighbor Spk AS MsgRcvd MsgSent TblVer InQ OutQ Up/Down St/PfxRcd 172.16.64.21 0 1 922 922 203 0 0 13:02:12 20 \u0026lt;\u0026lt;\u0026lt; Recieve Count.20 prefix RP/0/RP0/CPU0:R2-5501# show bgp l2vpn evpn Fri Oct 25 03:15:09.399 UTC BGP router identifier 172.16.64.9, local AS number 1 BGP generic scan interval 60 secs Non-stop routing is enabled BGP table state: Active Table ID: 0x0 RD version: 0 BGP main routing table version 203 BGP NSR Initial initsync version 1 (Reached) BGP NSR/ISSU Sync-Group versions 0/0 BGP scan interval 60 secs Status codes: s suppressed, d damped, h history, * valid, \u0026gt; best i - internal, r RIB-failure, S stale, N Nexthop-discard Origin codes: i - IGP, e - EGP, ? - incomplete Network Next Hop Metric LocPrf Weight Path Route Distinguisher: 172.16.64.21:1 *\u0026gt;i[5][0][32][200.0.0.1]/80 172.16.64.21 100 0 65535 {1} i *\u0026gt;i[5][0][32][200.0.0.2]/80 172.16.64.21 100 0 65535 {1} i \u0026lt;snip\u0026gt; RP/0/RP0/CPU0:R2-5501# show bgp l2vpn evpn rd 172.16.64.21:1 [5][0][32][200.0.0.1]/80 detail Fri Oct 25 03:17:55.241 UTC BGP routing table entry for [5][0][32][200.0.0.1]/80, Route Distinguisher: 172.16.64.21:1 Versions: Process bRIB/RIB SendTblVer Speaker 197 197 Flags: 0x00040001+0x00000000; Last Modified: Oct 25 03:11:11.348 for 00:06:44 Paths: (1 available, best #1) Not advertised to any peer Path #1: Received by speaker 0 Flags: 0x4000000025060005, import: 0x1f, EVPN: 0x1 Not advertised to any peer 65101 {1} 172.16.64.21 (metric 10) from 172.16.64.21 (172.16.64.21), if-handle 0x00000000 Received Label 24002 \u0026lt;\u0026lt;\u0026lt;\u0026lt; BGP label Origin IGP, localpref 100, valid, internal, best, group-best, import-candidate, not-in-vrf Received Path ID 0, Local Path ID 1, version 197 Extended community: Flags 0x6: RT:1:1 EVPN ESI: 0000.0000.0000.0000.0000, Gateway Address : 0.0.0.0 RP/0/RP0/CPU0:R2-5501#show bgp vpnv4 unicast Fri Oct 25 03:20:52.534 UTC BGP router identifier 172.16.64.9, local AS number 1 BGP generic scan interval 60 secs Non-stop routing is enabled BGP table state: Active Table ID: 0x0 RD version: 0 BGP main routing table version 284 BGP NSR Initial initsync version 2 (Reached) BGP NSR/ISSU Sync-Group versions 0/0 BGP scan interval 60 secs Status codes: s suppressed, d damped, h history, * valid, \u0026gt; best i - internal, r RIB-failure, S stale, N Nexthop-discard Origin codes: i - IGP, e - EGP, ? - incomplete Network Next Hop Metric LocPrf Weight Path Route Distinguisher: 172.16.64.9:1 (default for vrf vpn1) *\u0026gt; 100.0.0.1/32 10.1.1.1 0 65535 {1} i *\u0026gt; 100.0.0.2/32 10.1.1.1 0 65535 {1} i *\u0026gt; 100.0.0.3/32 10.1.1.1 0 65535 {1} i *\u0026gt; 100.0.0.4/32 10.1.1.1 0 65535 {1} i *\u0026gt; 100.0.0.5/32 10.1.1.1 0 65535 {1} i *\u0026gt; 100.0.0.6/32 10.1.1.1 0 65535 {1} i *\u0026gt; 100.0.0.7/32 10.1.1.1 0 65535 {1} i *\u0026gt; 100.0.0.8/32 10.1.1.1 0 65535 {1} i *\u0026gt; 100.0.0.9/32 10.1.1.1 0 65535 {1} i *\u0026gt; 100.0.0.10/32 10.1.1.1 0 65535 {1} i *\u0026gt;i200.0.0.1/32 172.16.64.21 100 0 65535 {1} i *\u0026gt;i200.0.0.2/32 172.16.64.21 100 0 65535 {1} i *\u0026gt;i200.0.0.3/32 172.16.64.21 100 0 65535 {1} i *\u0026gt;i200.0.0.4/32 172.16.64.21 100 0 65535 {1} i *\u0026gt;i200.0.0.5/32 172.16.64.21 100 0 65535 {1} i *\u0026gt;i200.0.0.6/32 172.16.64.21 100 0 65535 {1} i *\u0026gt;i200.0.0.7/32 172.16.64.21 100 0 65535 {1} i *\u0026gt;i200.0.0.8/32 172.16.64.21 100 0 65535 {1} i *\u0026gt;i200.0.0.9/32 172.16.64.21 100 0 65535 {1} i *\u0026gt;i200.0.0.10/32 172.16.64.21 100 0 65535 {1} i *\u0026gt;i200.0.0.11/32 172.16.64.21 100 0 65535 {1} i *\u0026gt;i200.0.0.12/32 172.16.64.21 100 0 65535 {1} i *\u0026gt;i200.0.0.13/32 172.16.64.21 100 0 65535 {1} i *\u0026gt;i200.0.0.14/32 172.16.64.21 100 0 65535 {1} i *\u0026gt;i200.0.0.15/32 172.16.64.21 100 0 65535 {1} i *\u0026gt;i200.0.0.16/32 172.16.64.21 100 0 65535 {1} i *\u0026gt;i200.0.0.17/32 172.16.64.21 100 0 65535 {1} i *\u0026gt;i200.0.0.18/32 172.16.64.21 100 0 65535 {1} i *\u0026gt;i200.0.0.19/32 172.16.64.21 100 0 65535 {1} i *\u0026gt;i200.0.0.20/32 172.16.64.21 100 0 65535 {1} i RP/0/RP0/CPU0:R2-5501#show bgp vpnv4 unicast rd 172.16.64.9:1 200.0.0.1/32 detail Fri Oct 25 03:22:05.318 UTC BGP routing table entry for 200.0.0.1/32, Route Distinguisher: 172.16.64.9:1 Versions: Process bRIB/RIB SendTblVer Speaker 265 265 Flags: 0x00001001+0x00000000; Last Modified: Oct 25 03:11:11.348 for 00:10:54 Paths: (1 available, best #1) Not advertised to any peer Path #1: Received by speaker 0 Flags: 0x4401000005060005, import: 0x80 Not advertised to any peer 65101 {1} 172.16.64.21 (metric 10) from 172.16.64.21 (172.16.64.21), if-handle 0x00000000 Received Label 24002 Origin IGP, localpref 100, valid, internal, best, group-best, import-candidate, imported Received Path ID 0, Local Path ID 1, version 265 Extended community: RT:1:1 EVPN Gateway Address : 0.0.0.0 Source AFI: L2VPN EVPN, Source VRF: default, Source Route Distinguisher: 172.16.64.21:1 \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; source was L2vpn EVPN ","date":"25 October 2019","externalUrl":null,"permalink":"/blog/evpn-l3vpn/","section":"Blog","summary":"EVPN means next-generation all-in-one VPN technology that provides a wide of range of services such as E-LAN, E-Line, E-TREE, L3VPN, DCI, DC-Overlay, IRB, … The following is the mapping between EVPN and traditional VPN technologies.","title":"EVPN-L3VPN","type":"blog"},{"content":"There are two types of traditional l2vpn, one is point-to-point (VPWS) and the other is point-to-multipoint(VPLS).\nFor VPLS, EVPN has a corresponding technology PBB-EVPN.\nThis topic, will intruduction a simple PBB-EVPN configuration.\nRefer to the following route types，PBB-EVPN will use Type 2 and Type 3.\nTopology # Core IGP # router isis 1 is-type level-2-only net 49.0001.1391.5900.7248.00 lsp-gen-interval maximum-wait 2000 initial-wait 100 secondary-wait 100 address-family ipv4 unicast metric-style wide ! interface Bundle-Ether1 circuit-type level-2-only point-to-point address-family ipv4 unicast metric 5 ! ! interface Loopback0 passive circuit-type level-2-only address-family ipv4 unicast ! RP/0/RSP0/CPU0:ASR9001-B#show run mpls ldp Fri Oct 25 04:13:08.554 UTC mpls ldp router-id 139.159.7.248 address-family ipv4 ! interface Bundle-Ether1 address-family ipv4 ! PBB-EVPN # RP/0/RSP0/CPU0:ASR9001-B#show run router bgp Fri Oct 25 04:14:28.506 UTC router bgp 65001 bgp router-id 139.159.7.248 address-family l2vpn evpn ! neighbor 139.159.48.213 remote-as 65001 update-source Loopback0 address-family l2vpn evpn ! RP/0/RSP0/CPU0:ASR9001-B#show run l2vpn Fri Oct 25 04:15:37.293 UTC l2vpn bridge group 1 bridge-domain PBB-core-10000 pbb core evi 10000 \u0026lt;\u0026lt;\u0026lt;\u0026lt; need same with peer PE,Broadcast domain ! ! ! bridge-domain PBB-edge-10000 interface GigabitEthernet0/0/0/4.1 ! pbb edge i-sid 10000 core-bridge PBB-core-10000 ! ! RP/0/RSP0/CPU0:ASR9001-B# show ru int gi0/0/0/4.1 Fri Oct 25 04:18:56.372 UTC interface GigabitEthernet0/0/0/4.1 l2transport encapsulation dot1q 10 rewrite ingress tag pop 1 symmetric mtu 9000 ! Check the route learn from Peer PE # RP/0/RSP0/CPU0:ASR9001-B#show bgp l2vpn evpn Fri Oct 25 04:19:25.234 UTC BGP router identifier 139.159.7.248, local AS number 65001 BGP generic scan interval 60 secs Non-stop routing is enabled BGP table state: Active Table ID: 0x0 RD version: 0 BGP main routing table version 36 BGP NSR Initial initsync version 6 (Reached) BGP NSR/ISSU Sync-Group versions 0/0 BGP scan interval 60 secs Status codes: s suppressed, d damped, h history, * valid, \u0026gt; best i - internal, r RIB-failure, S stale, N Nexthop-discard Origin codes: i - IGP, e - EGP, ? - incomplete Network Next Hop Metric LocPrf Weight Path Route Distinguisher: 139.159.7.248:10000 (default for vrf PBB-core-10000) *\u0026gt; [2][0][48][e4c7.225a.2fd0][0]/104 \u0026lt;\u0026lt;\u0026lt; Self BMAC 0.0.0.0 0 i *\u0026gt;i[2][0][48][e8ed.f344.050f][0]/104\t\u0026lt;\u0026lt;\u0026lt; Remote PE BMAC 139.159.48.213 100 0 i *\u0026gt; [3][10000][32][139.159.7.248]/80 0.0.0.0 0 i *\u0026gt;i[3][10000][32][139.159.48.213]/80 139.159.48.213 100 0 i Route Distinguisher: 139.159.48.213:10000 *\u0026gt;i[2][0][48][e8ed.f344.050f][0]/104 \u0026lt;\u0026lt;\u0026lt; Remote PE BMAC 139.159.48.213 100 0 i *\u0026gt;i[3][10000][32][139.159.48.213]/80 139.159.48.213 100 0 i RP/0/RSP0/CPU0:ASR9001-B#show l2vpn forwarding pbb backbone-source-mac detail location 0/rsp0/CPU0 Fri Oct 25 04:25:04.241 UTC Backbone Source MAC: e4c7.225a.2fd0 \u0026lt;\u0026lt;\u0026lt; Check BMAC Chassis MAC : e4c7.225a.2fd0 RP/0/RSP0/CPU0:ASR9001-B# RP/0/RSP0/CPU0:ASR9001-B#show bgp l2vpn evpn rd 139.159.7.248:10000 [2][0][48][e8ed.f344.050f][0]/104 detail Fri Oct 25 04:27:54.322 UTC BGP routing table entry for [2][0][48][e8ed.f344.050f][0]/104, Route Distinguisher: 139.159.7.248:10000 Versions: Process bRIB/RIB SendTblVer Speaker 32 32 Flags: 0x00001001+0x00000000; Last Modified: Oct 24 13:13:53.799 for 15:14:00 Paths: (1 available, best #1) Not advertised to any peer Path #1: Received by speaker 0 Flags: 0x4000020005060005, import: 0x80 Not advertised to any peer Local 139.159.48.213 (metric 5) from 139.159.48.213 (139.159.48.213) Received Label 16008 \u0026lt;\u0026lt;\u0026lt;\u0026lt; Inner Label recieve Origin IGP, localpref 100, valid, internal, best, group-best, import-candidate, imported, rib-install Received Path ID 0, Local Path ID 1, version 32 Extended community: RT:65001:10000 EVPN ESI: 0000.0000.0000.0000.0000 Source AFI: L2VPN EVPN, Source VRF: default, Source Route Distinguisher: 139.159.48.213:10000 RP/0/RSP0/CPU0:ASR9001-B# RP/0/RSP0/CPU0:ASR9001-B#show l2vpn forwarding bridge-domain 1:PBB-edge-10000 mac-address location 0/0/cPU0 \u0026lt;\u0026lt;\u0026lt;\u0026lt; This command can check the MAC-address learning ","date":"25 October 2019","externalUrl":null,"permalink":"/blog/evpn-pbb-evpn/","section":"Blog","summary":"There are two types of traditional l2vpn, one is point-to-point (VPWS) and the other is point-to-multipoint(VPLS).","title":"EVPN-PBB EVPN","type":"blog"},{"content":"Currently we have two ways to install the license.One is \u0026ldquo;Traditional Licensing\u0026rdquo; and the other is \u0026ldquo;Smart Software Licensing\u0026rdquo;.But at Cisco eXR platform(64-bit IOS XR), we can only use \u0026ldquo;Smart Software Licensing\u0026rdquo;.\nSmart License # Before add a Smart Software License, you need to generate a product instance registration token first.Below is a way to create a useful token.\nGo to the Cisco Smart license page. Clicking License \u0026gt; Smart Software Licensing. Click on Inventory. Click the New Token button. Click Create Token. Then copy the Token ID Then,You need make sure your router can connect internet and \u0026ldquo;ping tools.cisco.com\u0026rdquo; sucessful.\nRP/0/RSP0/CPU0:R1-9901#show run domain name-server Fri Jun 28 04:06:39.200 UTC domain name-server 8.8.8.8 Now, You can login your eXR router,and enter below configuration.\ncall-home service active contact smart-licensing profile CiscoTAC-1 active destination address http https://tools.cisco.com/its/service/oddce/services/DDCEService reporting smart-licensing-data destination transport-method http (config)# crypto ca trustpool policy (config-trustpool)#crl optional license smart register idtoken \u0026lt;token ID\u0026gt; Use call-home to connect to the CISCO License servers and validate the license entitlement. This could be done using HTTP or HTTPs. As HTTP was an unreliable connection, We recommend using HTTPs.\nThe configuration example was used HTTPs connection, Also you must install \u0026quot; k9sec\u0026quot; packet at your router.\nThe following is the output after successful configuration.\nPlease note, The router will request the relevant license only after you enable the related feature.For example:\nA9K-24P10G-IVRF, If we configure less than 8 different VRFs we will consume this license.(\u0026lt;=)\nA9K-24P10G-AIP-TR, if we configuration more than 8 different VRFs we will consume this license. (\u0026gt;)\nFor example, if you purchase an A9K-24P10G-AIP-TR，how to quickly check whether the router can consume this license, hear is a suggestion, Please software loopback one PHY port and configuration \u0026gt; 8 sub-interface which belong to different VRF (need configuration IP Address). Then you need to wait at least 24 hours （reason was，router will report the license required information for Cisco website every 24h.）\nCommonly used commands # #show license all #show license platform trace all #show call-home detail #show license status #show license summary #show license platform detail ","date":"23 October 2019","externalUrl":null,"permalink":"/blog/how-to-add-license-at-exr-platform/","section":"Blog","summary":"Currently we have two ways to install the license.","title":"How to add License at eXR platform","type":"blog"},{"content":"","date":"23 October 2019","externalUrl":null,"permalink":"/tags/license/","section":"Tags","summary":"","title":"License","type":"tags"},{"content":" Cisco router routing protocol priority # Routing ProtocolPriorityDIRECT0STATIC1EIGRP Summary5EBGP20内部EIGRP90IGRP100OSPF110IS-IS115RIP120EGP140外部EIGRP170IBGP200未知255 Huawei router routing priority # Routing ProtocolPriorityDIRECT0OSPF10STATIC60IGRP80RIP110OSPFASE150BGP170 ","date":"14 October 2019","externalUrl":null,"permalink":"/blog/routing-protocol-pri/","section":"Blog","summary":" Cisco router routing protocol priority # Routing ProtocolPriorityDIRECT0STATIC1EIGRP Summary5EBGP20内部EIGRP90IGRP100OSPF110IS-IS115RIP120EGP140外部EIGRP170IBGP200未知255 Huawei router routing priority # Routing ProtocolPriorityDIRECT0OSPF10STATIC60IGRP80RIP110OSPFASE150BGP170 ","title":"Router routing protocol priority","type":"blog"},{"content":" sampler-map # sampler-map FNF_SAMPLER_MAP random 1 out-of 4999 exporter-map # flow exporter-map FNF_EXPORT_MAP version v9 options sampler-table timeout 60 template timeout 60 ! transport udp 20013 source Loopback0 destination 10.1.1.1 monitor-map # flow monitor-map FNF_MONITOR_MAP_IPV6 record ipv6 exporter FNF_EXPORT_MAP exporter FNF_EXPORT_MAP1 cache entries 500000 cache timeout active 60 cache timeout inactive 15 flow monitor-map FNF_MONITOR_MAP record ipv4 exporter FNF_EXPORT_MAP exporter FNF_EXPORT_MAP1 cache entries 500000 cache timeout active 60 cache timeout inactive 15 Interface configuration # interface Bundle-Ether1 flow ipv4 monitor FNF_MONITOR_MAP sampler FNF_SAMPLER_MAP ingress flow ipv6 monitor FNF_MONITOR_MAP_IPV6 sampler FNF_SAMPLER_MAP ingress Note # Max 8 exporters per monitor-map. Use Netflow TS # sampler-map sam-map random 1 out-of 1 flow monitor-map mon-map-ip record ipv4 cache entries 65535 cache timeout inactive 1800 flow monitor-map mon-map record mpls ipv4-fields labels 4 cache entries 65535 cache timeout inactive 1800 interface TenGigE0/0/1/0.1 ipv4 address 9.9.5.1 255.255.255.252 flow ipv4 monitor mon-map-ip sampler sam-map ingress flow ipv4 monitor mon-map-ip sampler sam-map egress flow mpls monitor mon-map sampler sam-map ingress flow mpls monitor mon-map sampler sam-map egress show flow monitor mon-map cache location 0/0/cpu0(根据板卡修改) ","date":"10 October 2019","externalUrl":null,"permalink":"/blog/iox-neflow-configuration-example/","section":"Blog","summary":"sampler-map # sampler-map FNF_SAMPLER_MAP random 1 out-of 4999 exporter-map # flow exporter-map FNF_EXPORT_MAP version v9 options sampler-table timeout 60 template timeout 60 !","title":"IOX Neflow configuration example","type":"blog"},{"content":"本文介绍一下思科 BGP 的 13 条选路原则。\nXR:show bgp ipv4 unicast x.x.x.x/x bestpath-compare\nWeight(越大越好) # 思科的专有属性，优选值高的路径，而且本地本地有效。\nLocal Preference (越大越好) # 默认情况下，从 iBGP 学来的路由 local preference 是 100，解决本 AS 域出口路由选择。他不会把此参数传递给 EBGP 的邻居，优选值高的。\nOriginated # 优选从本路由器使发的路由，包括本地 network，重分发和或 IGP 已有的路由，有 BGP 配置的聚合地址也包括在内。\n查看 BGP 路由表时可以看到有时路由前面带了一个“r”，说明在 IGP 中已经存在此路由了。\n**优先级为：**default-originate \u0026gt; default-information-originate \u0026gt; network \u0026gt; redistribute \u0026gt; aggregate-address\nAS Path(越短越好) # As-path 最短的优选。\n介绍一些命令：\nas-path-loopcheck out disable\n默认 XR 设备会 check peer AS 是否在 AS-PATH 中，如果在就不发， 使用“ as-path-loopcheck out disable ”取消这个 feature。\n（标准是会发，Peer 不收）\nOrigin( I\u0026gt;E ) # IGP\u0026gt;EGP\u0026gt;Incomplete\nMED (越小越好) # MED 只在相同 AS 的情况下才对比，默认情况下不同 AS 的路由是不对比 MED 的。解决本 AS 域的入口路由选择。如果配置了“bgp always-compare-med”，那么所有路径都会比较 MED，而不考虑是否来自同一个 AS，如果用了这条命令，那么为了防止环路，建议整个 AS 中都应用。另外一个跟 MED 相关的命令是“bgp deterministic-med”，如果路由从多个路径学来，他会把同 AS 的划为一个 group，同 group 的对比 MED，然后胜出者再进行对比。\nHow the bgp deterministic-med Command Differs from the bgp always-compare-med Command\n在 IOS 平台默认不开启 derministic-med，而 IOX 是默认开启的。\nEBGP\u0026gt;IBGP # EBGP \u0026gt; confederation \u0026gt; IBGP\nIGP cost for next-hop (越小越好) # 优选对 BGP 下一跳具有最低 IGP 度量值的路径。\nMultiple paths # Prefer the path that was received first # BGP Router ID (越小越好) # 如果路径包含 RR 属性，在选择时，用 ORIGINATOR_ID 来替代 router id。\nCluster-ID (越小越好) # 如果从路由反射器学到，优选最小 Cluster-ID 的路由，如果 router id 相同，那么优选 CLUSTER_LIST 长度最短的路径。\nPeer Adress (越小越好) # 优选具有最低对等体地址的路由。\nBGP 相关命令 # ibgp policy out enforce-modifications //To allow an outbound route policy for an internal BGP (iBGP) peer to modify all BGP route attributes, only when an iBGP route is sent to another iBGP peer (only on route-reflectors), use the ibgp policy out enforce-modifications command in router configuration mode. To disable this feature, use the no form of this command. ","date":"8 October 2019","externalUrl":null,"permalink":"/blog/ciscobgp-13/","section":"Blog","summary":"本文介绍一下思科 BGP 的 13 条选路原则。","title":"CISCO:BGP Best Path Selection Algorithm","type":"blog"},{"content":"记录一下我的 CRT 的设置。\nCRT session buffer # SecureCRT 在同一窗口打开多个标签 # 如下图所示，Option-\u0026gt;Global Options-\u0026gt;Terminal.将“connect session in tabs”勾上。\n虽然这样可以使新建的 session 再一个窗口显示，但是可能还会遇到从网页打开 telnet 连接的时候会多窗口显示，可以按照以下的步骤修改一下注册表：\nwin+r 打开运行窗口，输入 regedit 回车 注册表编辑器-\u0026gt;查找-\u0026gt;VanDyke.SecureCRT.URLHandler 找到这一项，将其展开到 command 右侧有一个字符串，双击点开在末尾加 空格/t 确定。 防止自动登出 # 如下图所示, Option-\u0026gt;Edit default Session，配置每 180s 自动发送一个空格字符（Send string 后面的文字框需要键入一个空格）\n自动记录 session log # Xshell 实现选中复制右键粘贴 # Tools-\u0026gt; Options\n","date":"8 October 2019","externalUrl":null,"permalink":"/blog/securecrt-setup/","section":"Blog","summary":"记录一下我的 CRT 的设置。","title":"SecureCRT和xShell相关配置","type":"blog"},{"content":"本文介绍一下华为 BGP 的 13 条选路原则，附上示例。\nPrefer-value (越大越好) # 首选值，数值越大越优先，本地有效。\nLocal-pref (越大越好) # 本地优先级，数值越大越优先，可传递给 IBGP 邻居，如果没有配置默认为 100\n本地始发 # 本地生成路由优先，aggregate 手工生成聚合路由\u0026gt;summary automatic 自动聚合路由\u0026gt;network 命令宣告路由\u0026gt;import-route 引入的路由。\n如上图，如果 R1，R2 都将 10.1.12.0/24 宣告进 BGP 的话，R2 能收到 R1 发过来的 10.1.12.0 的路由，prefer-value 和 local-preference 都一样，但是本地发起的优先，所以 bgp 表中自己宣告的路由为最优路径。\nAs-path (越短越好) # As-path 最短的路由（单个 AS 计数为 1）。AS_CONFED_SEQUENCE 和 AS_CONFED_SET（联盟内部 AS 号）不计入 as-path 长度。AS_SET 长度计为 1。（此条选路法则可以用命令忽略: bestroute as-path-ignore）\n上图左侧路径路由传递过来 as-path 为 200, 100 长度为 2，右侧传递过来 as-path 为 400, 长度为 1。优选右侧传递过来的路由为最优路径。\nOrigin（i\u0026gt;e\u0026gt;?） # IGP\u0026gt;EGP\u0026gt;Incomplete\nMed (越小越好) # 数值越小越优先，默认为 0。(bestroute med-none-as-maximum 可以将 med 默认值改到最大 4294967295）默认只比较 as-path 中最近一个 as 号相同的路由，否则忽略此条。\ncompare-different-as-med 命令后，强制比较不同 as 的路由 med。\nbestroute med-confederation，只比较 as-path 只包含联盟内部 as 且最近一个联盟内部 as 号相同的路由的 med。\ndeterministic-med，按相同最近 AS 号的先比，消除按接收顺序两两比较 med 对比较结果的影响。\nas-path\tmed type(第7条选路法则）router id 200 100 0 IBGP 1.1.1.1 （配了之后）Best 200 300 100 EBGP 5.5.5.5 200 100 100 EBGP 2.2.2.2\t没配deterministic-med之前最优 EBGP\u0026gt;IBGP # ebgp\u0026gt;ibgp\u0026gt;localcross 路由\u0026gt;remotecross 路由\nIGP cost for next-hop (越小越好) # 下一跳 igp 的 metric 最小的路由\n是否支持负载均衡（maximumload-balance） # 前 8 条一样，且 as-path 完全相同（都是聚合路由或都不是），如果配置了多路径负载均衡的话，进行负载均衡（这里默认 IBGP 和 EBGP 路由都参与负载均衡）\nCluster-list (越短越好) # 每一个 cluster-id 计数为 1，长度最小的优先。\nOriginator-id (越小越好) # as 外部路由，originator-id 就是边界路由器 5 和 6，这里虽然邻居 R3 路由器 ID 小，但是由于 originator-id 是 4 那边小，所以选择右侧过来的路由为最优。\nRouter-id(越小越好) # Peer ip address (越小越好) # 如图，下方路由器与上面路由器的 2 个地址 10.1.12.2 和 10.1.22.2 分别建立 2 个邻居，2 个链路 igp 开销也相同，由于这 2 个邻居其实是同一个路由器，所以路由器 id 一样，至此前面所有的法则都无法打破僵局，最终只能根据建邻居地址越低越优先，选择了 10.1.12.2 的邻居关系发来的 BGP 路由。\n","date":"6 October 2019","externalUrl":null,"permalink":"/blog/huaweibgp-13/","section":"Blog","summary":"本文介绍一下华为 BGP 的 13 条选路原则，附上示例。","title":"HUAWEI:BGP Best Path Selection Algorithm","type":"blog"},{"content":" 这篇文章介绍一下 sham-link，并提供一个 sham-link 在 XR 平台下的配置案例（ASR9000）\n写在最前面 # 拓扑请看图，使用的是 virl 模拟器\n拓扑介绍 # Core 使用常用的 IGP ISIS 协议，标签分发没有选择使用 LDP，而是使用的 SR，PE-R2 于 PE-R4 直接起 VPNv4 的邻居.以下是主要的配置：\nR2: router isis 1 is-type level-2-only net 49.0000.0000.0002.00 address-family ipv4 unicast metric-style wide segment-routing mpls ! interface Loopback0 address-family ipv4 unicast prefix-sid index 2 ! ! interface GigabitEthernet0/0/0/1 point-to-point address-family ipv4 unicast router bgp 1 bgp router-id 10.1.2.2 address-family vpnv4 unicast ! neighbor 10.1.4.4 remote-as 1 update-source Loopback0 address-family vpnv4 unicast next-hop-self R3 router isis 1 is-type level-2-only net 49.0000.0000.0003.00 address-family ipv4 unicast metric-style wide segment-routing mpls ! interface Loopback0 address-family ipv4 unicast prefix-sid index 3 ! ! interface GigabitEthernet0/0/0/0 point-to-point address-family ipv4 unicast ! ! interface GigabitEthernet0/0/0/1 point-to-point address-family ipv4 unicast R4 router isis 1 is-type level-2-only net 49.0000.0000.0004.00 address-family ipv4 unicast metric-style wide segment-routing mpls ! interface Loopback0 address-family ipv4 unicast prefix-sid index 4 ! ! interface GigabitEthernet0/0/0/0 point-to-point address-family ipv4 unicast router bgp 1 bgp router-id 10.1.4.4 address-family vpnv4 unicast ! neighbor 10.1.2.2 remote-as 1 update-source Loopback0 address-family vpnv4 unicast next-hop-self 默认为 SR 分配的标签块是 16000-23999，为 R4 配置 prefix-sid 是 index 4，所以我们在其它设备上去往 R4 loopback 接口的数据包会压 16004 的标签.\nRP/0/0/CPU0:R2#show mpls forwarding Fri Jul 5 07:57:52.647 UTC Local Outgoing Prefix Outgoing Next Hop Bytes Label Label or ID Interface Switched ------ ----------- ------------------ ------------ --------------- ------------ 16003 Pop SR Pfx (idx 3) Gi0/0/0/1 10.1.23.3 0 16004 16004 SR Pfx (idx 4) Gi0/0/0/1 10.1.23.3 987559 \u0026lt;\u0026lt;\u0026lt;\u0026lt; 24000 Aggregate VIP: Per-VRF Aggr[V] \\ VIP 8300 24001 Unlabelled 10.1.1.1/32[V] Gi0/0/0/0 10.1.12.1 0 24002 Unlabelled 10.1.15.0/24[V] Gi0/0/0/0 10.1.12.1 0 24003 Pop SR Adj (idx 1) Gi0/0/0/1 10.1.23.3 0 24004 Pop SR Adj (idx 3) Gi0/0/0/1 10.1.23.3 0 RP/0/0/CPU0:R2#traceroute 10.1.4.4 source 10.1.2.2 Fri Jul 5 07:58:32.184 UTC Type escape sequence to abort. Tracing the route to 10.1.4.4 1 10.1.23.3 [MPLS: Label 16004 Exp 0] 9 msec 0 msec 0 msec 2 10.1.34.4 0 msec * 0 msec RP/0/0/CPU0:R2# PE 与 CE 之间的路由-OSPF # R1 Same with R5 router ospf 1 router-id 10.1.1.1 address-family ipv4 unicast area 0 interface Loopback0 passive enable ! interface GigabitEthernet0/0/0/0 R2 Same with R4 router ospf 1 vrf VIP router-id 10.1.24.2 redistribute bgp 1 \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; address-family ipv4 unicast area 0 interface GigabitEthernet0/0/0/0 router bgp 1 bgp router-id 10.1.2.2 address-family vpnv4 unicast ! neighbor 10.1.4.4 remote-as 1 update-source Loopback0 address-family vpnv4 unicast next-hop-self ! ! vrf VIP rd auto address-family ipv4 unicast network 10.1.24.2/32 redistribute ospf 1 \u0026lt;\u0026lt;\u0026lt;\u0026lt;路由互相引入，必须配置 ! Sham-link # Sham-link 的由来，主要是由于 CE 与远端 CE 之间存在一条后门链路并使能了 OSPF，这样就会造成本端 CE 会优选 OSPF 的区域内或区域间的路由，从后门链路走；而不会优选从 PE 学来的重分发的 BGP 路由。但往往这条后面链路只是作为一个备份路径使用，而不是用来在正常情况下跑流量的，因为 Core 的链路环境往往由运营商维护，更稳定一些.那如何解决这样的次优选路问题，这就引进的 sham-link.\nSham-link 的目的是将在 PE 上起一个虚拟的 OSPF 邻居关系，让远端 CE 的路由可以通过 OSPF 传递到 PE 上;\n配置 sham-link 有以下的注意点：\nshan-link 的源地址和目的地址必须是 32 位的掩码的 loopback 地址 必须绑定加入 VPN 示例即配置 vrf 必须通过 BGP 进行路由通告，不能使用 ospf 进行路由通告 在后门链路上配置 OSPF 属于 area 0，在 CE1 上检查一下路由表:\n增加后门链路前: RP/0/0/CPU0:R1#show route L 10.1.1.1/32 is directly connected, 04:47:18, Loopback0 O IA 10.1.5.5/32 [110/3] via 10.1.12.2, 00:01:37, GigabitEthernet0/0/0/0 \u0026lt;\u0026lt;\u0026lt;\u0026lt; C 10.1.12.0/24 is directly connected, 04:47:18, GigabitEthernet0/0/0/0 L 10.1.12.1/32 is directly connected, 04:47:18, GigabitEthernet0/0/0/0 C 10.1.15.0/24 is directly connected, 00:06:03, GigabitEthernet0/0/0/1 L 10.1.15.1/32 is directly connected, 00:06:03, GigabitEthernet0/0/0/1 O E2 10.1.24.4/32 [110/1] via 10.1.12.2, 00:04:28, GigabitEthernet0/0/0/0 O IA 10.1.45.0/24 [110/2] via 10.1.12.2, 00:01:38, GigabitEthernet0/0/0/0 增加后门链路后: L 10.1.1.1/32 is directly connected, 04:50:46, Loopback0 O 10.1.5.5/32 [110/2] via 10.1.15.5, 00:00:01, GigabitEthernet0/0/0/1 \u0026lt;\u0026lt;\u0026lt; C 10.1.12.0/24 is directly connected, 04:50:46, GigabitEthernet0/0/0/0 L 10.1.12.1/32 is directly connected, 04:50:46, GigabitEthernet0/0/0/0 C 10.1.15.0/24 is directly connected, 00:09:30, GigabitEthernet0/0/0/1 L 10.1.15.1/32 is directly connected, 00:09:30, GigabitEthernet0/0/0/1 O E2 10.1.24.2/32 [110/1] via 10.1.15.5, 00:00:01, GigabitEthernet0/0/0/1 O E2 10.1.24.4/32 [110/1] via 10.1.12.2, 00:07:56, GigabitEthernet0/0/0/0 O 10.1.45.0/24 [110/2] via 10.1.15.5, 00:00:01, GigabitEthernet0/0/0/1 对于去往对端 CE 环回口地址的路由由域间换成域内路由，走后门链路，与我们需求不符和，下面我们开始添加 sham-link 的配置:\n1. shan-link的源地址和目的地址必须是32位的掩码的loopback地址 2. 必须绑定加入VPN示例即配置vrf RP/0/0/CPU0:R2#show run int lo1 Mon Jul 8 06:22:15.998 UTC interface Loopback1 vrf VIP ipv4 address 10.1.24.2 255.255.255.255 3. 必须通过BGP进行路由通告，不能使用ospf进行路由通告 router bgp 1 vrf VIP address-family ipv4 unicast network 10.1.24.2/32 为什么这里需要使用BGP去重分发该路由?原因：如果使用的是ospf发布该loopback接口，对端CE学到的是O的路由会优选后门链路走，就不会经过骨干，sham-link就建立不起来 4. 配置sham-link RP/0/0/CPU0:R2(config)#router ospf 1 RP/0/0/CPU0:R2(config-ospf)#vrf VIP RP/0/0/CPU0:R2(config-ospf-vrf)#area 0 RP/0/0/CPU0:R2(config-ospf-vrf-ar)#sham-link 10.2.24.2 10.2.24.4 RP/0/0/CPU0:R2(config-ospf-vrf-ar-sl)# RP/0/0/CPU0:R2(config-ospf-vrf-ar-sl)#commit 5. 检查sham-link邻接关系： RP/0/0/CPU0:R2#show ospf vrf VIP sham-links Mon Jul 8 06:34:38.668 UTC Sham Links for OSPF 1, VRF VIP Sham Link OSPF_SL0 to address 10.1.24.4 is up Area 0, source address 10.1.24.2 IfIndex = 2 Run as demand circuit DoNotAge LSA allowed., Cost of using 1 Transmit Delay is 1 sec, State POINT_TO_POINT, Timer intervals configured, Hello 10, Dead 40, Wait 40, Retransmit 5 Hello due in 00:00:03:904 Adjacency State FULL (Hello suppressed) Number of DBD retrans during last exchange 0 Index 2/2, retransmission queue length 1, number of retransmission 0 First 0x15143ed0(5)/0(0) Next 0x15143ed0(5)/0(0) Last retransmission scan length is 0, maximum is 0 Last retransmission scan time is 0 msec, maximum is 0 msec Link State retransmission due in 3975 msec RP/0/0/CPU0:R2# RP/0/0/CPU0:R2#show ospf vrf VIP neighbor Mon Jul 8 06:55:10.553 UTC * Indicates MADJ interface # Indicates Neighbor awaiting BFD session up Neighbors for OSPF 1, VRF VIP Neighbor ID Pri State Dead Time Address Interface 10.1.24.4 1 FULL/ - - 10.1.24.4 OSPF_SL0 Neighbor is up for 00:20:32 10.1.1.1 1 FULL/DR 00:00:31 10.1.12.1 GigabitEthernet0/0/0/0 Neighbor is up for 00:43:47 Total neighbor count: 2 检查一下增加 sham-link 后的路由表:\nRP/0/0/CPU0:R1#show route L 10.1.1.1/32 is directly connected, 05:27:56, Loopback0 O 10.1.5.5/32 [110/2] via 10.1.15.5, 00:00:12, GigabitEthernet0/0/0/1 C 10.1.12.0/24 is directly connected, 05:27:56, GigabitEthernet0/0/0/0 L 10.1.12.1/32 is directly connected, 05:27:56, GigabitEthernet0/0/0/0 C 10.1.15.0/24 is directly connected, 00:46:40, GigabitEthernet0/0/0/1 L 10.1.15.1/32 is directly connected, 00:46:40, GigabitEthernet0/0/0/1 O E2 10.1.24.2/32 [110/1] via 10.1.12.2, 00:00:12, GigabitEthernet0/0/0/0 [110/1] via 10.1.15.5, 00:00:12, GigabitEthernet0/0/0/1 O E2 10.1.24.4/32 [110/1] via 10.1.12.2, 00:45:06, GigabitEthernet0/0/0/0 O 10.1.45.0/24 [110/2] via 10.1.15.5, 00:00:12, GigabitEthernet0/0/0/1 修改一下后门链路的cost: router ospf 1 area 0 interface GigabitEthernet0/0/0/1 cost 100 修改后的路由表：(符合我们预期走骨干网) RP/0/0/CPU0:R1# show route L 10.1.1.1/32 is directly connected, 05:25:14, Loopback0 O 10.1.5.5/32 [110/4] via 10.1.12.2, 00:16:40, GigabitEthernet0/0/0/0 \u0026lt;\u0026lt;\u0026lt; Get from sham-link C 10.1.12.0/24 is directly connected, 05:25:14, GigabitEthernet0/0/0/0 L 10.1.12.1/32 is directly connected, 05:25:14, GigabitEthernet0/0/0/0 C 10.1.15.0/24 is directly connected, 00:43:58, GigabitEthernet0/0/0/1 L 10.1.15.1/32 is directly connected, 00:43:58, GigabitEthernet0/0/0/1 O E2 10.1.24.2/32 [110/1] via 10.1.12.2, 00:16:40, GigabitEthernet0/0/0/0 O E2 10.1.24.4/32 [110/1] via 10.1.12.2, 00:42:23, GigabitEthernet0/0/0/0 O 10.1.45.0/24 [110/3] via 10.1.12.2, 00:16:40, GigabitEthernet0/0/0/0 Sham-link 抓包 # 配置文件+抓包:\nhttps://mega.nz/#F!QGgXlKAZ!TcFXtvvA29YqV7lYfrqUBg\n","date":"5 October 2019","externalUrl":null,"permalink":"/blog/implement-sham-link-under-the-xr-platform/","section":"Blog","summary":"这篇文章介绍一下 sham-link，并提供一个 sham-link 在 XR 平台下的配置案例（ASR9000）","title":"Implement sham-link under the XR platform","type":"blog"},{"content":" 跨域 VPN 的解决方案主要是为了解决客户不同 AS 之间的站点的互通问题，即客户的 VPN 路由可以在两个 AS 之间进行传递。RFC4364 介绍了三种解决方案，我会在接下来的文章中一一介绍。本文先说第一种解决方案：Option A,这种解决方案需要在两个 AS 之间的 ASBR 上使用专门的接口去传递路由信息，所以我们也称这种为 VRF-to-VRF。\n写在最前面 # 配置步骤如下：\n配置 IP 地址以及 VRF 配置两个 AS 中的 IGP 协议_ISIS 配置 AS 中的标签分配协议（LDP） 配置 CE 与 PE,PE 与 ASBR 之间的 BGP 邻居 配置 ASRB 之间路由互相引入 验证连通性 配置 IP 地址以及 VRF # R1: interface Loopback0 ipv4 address 10.1.1.1 255.255.255.255 interface GigabitEthernet0/0/0/0 ipv4 address 10.1.12.1 255.255.255.0 R2: vrf VIP address-family ipv4 unicast import route-target 100:100 export route-target 100:100 interface Loopback0 ipv4 address 10.1.2.2 255.255.255.255 interface GigabitEthernet0/0/0/0 vrf VIP ipv4 address 10.1.12.2 255.255.255.0 interface GigabitEthernet0/0/0/1 ipv4 address 10.1.23.2 255.255.255.0 R3: interface Loopback0 ipv4 address 10.1.3.3 255.255.255.255 interface GigabitEthernet0/0/0/0 ipv4 address 10.1.34.3 255.255.255.0 interface GigabitEthernet0/0/0/1 ipv4 address 10.1.23.3 255.255.255.0 R4: vrf VIP address-family ipv4 unicast import route-target 100:100 export route-target 100:100 interface Loopback0 ipv4 address 10.1.4.4 255.255.255.255 interface GigabitEthernet0/0/0/0 ipv4 address 10.1.34.4 255.255.255.0 interface GigabitEthernet0/0/0/1 \u0026lt;\u0026lt;\u0026lt;这个就是前文所说的 ASBR 上特殊的接口 vrf VIP ipv4 address 10.1.45.4 255.255.255.0 R5: vrf VIP address-family ipv4 unicast import route-target 100:100 export route-target 100:100 interface Loopback0 ipv4 address 10.1.5.5 255.255.255.255 interface GigabitEthernet0/0/0/0 ipv4 address 10.1.56.5 255.255.255.0 interface GigabitEthernet0/0/0/1 vrf VIP ipv4 address 10.1.45.5 255.255.255.0 R6: interface Loopback0 ipv4 address 10.1.6.6 255.255.255.255 interface GigabitEthernet0/0/0/0 ipv4 address 10.1.56.6 255.255.255.0 interface GigabitEthernet0/0/0/1 ipv4 address 10.1.67.6 255.255.255.0 R7: vrf VIP address-family ipv4 unicast import route-target 100:100 export route-target 100:100 interface Loopback0 ipv4 address 10.1.7.7 255.255.255.255 interface GigabitEthernet0/0/0/0 vrf VIP ipv4 address 10.1.78.7 255.255.255.0 interface GigabitEthernet0/0/0/1 ipv4 address 10.1.67.7 255.255.255.0 R8: interface Loopback0 ipv4 address 10.1.8.8 255.255.255.255 interface GigabitEthernet0/0/0/0 ipv4 address 10.1.78.8 255.255.255.0 配置两个 AS 中的 IGP 协议_ISIS # R2: router isis 1 is-type level-2-only net 49.0000.0000.0000.0001.00 address-family ipv4 unicast metric-style wide ! interface Loopback0 passive address-family ipv4 unicast ! ! interface GigabitEthernet0/0/0/1 point-to-point address-family ipv4 unicast ! R3: router isis 1 is-type level-2-only net 49.0000.0000.0000.0002.00 address-family ipv4 unicast metric-style wide ! interface Loopback0 passive address-family ipv4 unicast ! ! interface GigabitEthernet0/0/0/0 point-to-point address-family ipv4 unicast ! ! interface GigabitEthernet0/0/0/1 point-to-point address-family ipv4 unicast ! ! ! R4: router isis 1 is-type level-2-only net 49.0000.0000.0000.0004.00 address-family ipv4 unicast metric-style wide ! interface Loopback0 passive address-family ipv4 unicast ! ! interface GigabitEthernet0/0/0/0 point-to-point address-family ipv4 unicast ! ! ! R5: router isis 1 is-type level-2-only net 49.0001.0000.0000.0005.00 address-family ipv4 unicast metric-style wide ! interface Loopback0 passive address-family ipv4 unicast ! ! interface GigabitEthernet0/0/0/0 point-to-point address-family ipv4 unicast ! ! ! R6: router isis 1 is-type level-2-only net 49.0001.0000.0000.0006.00 address-family ipv4 unicast metric-style wide ! interface Loopback0 passive address-family ipv4 unicast ! ! interface GigabitEthernet0/0/0/0 point-to-point address-family ipv4 unicast ! ! interface GigabitEthernet0/0/0/1 point-to-point address-family ipv4 unicast ! ! ! R7: router isis 1 is-type level-2-only net 49.0001.0000.0000.0007.00 address-family ipv4 unicast metric-style wide ! interface Loopback0 passive address-family ipv4 unicast ! ! interface GigabitEthernet0/0/0/1 point-to-point address-family ipv4 unicast ! ! ! 配置 AS 中的标签分配协议（LDP） # R2: mpls ldp log neighbor ! router-id 10.1.2.2 address-family ipv4 label local allocate for host-routes ! ! ! interface GigabitEthernet0/0/0/1 ! ! R3: mpls ldp log neighbor ! router-id 10.1.3.3 address-family ipv4 label local allocate for host-routes ! ! ! interface GigabitEthernet0/0/0/0 ! interface GigabitEthernet0/0/0/1 ! ! R4: mpls ldp log neighbor ! router-id 10.1.4.4 address-family ipv4 label local allocate for host-routes ! ! ! interface GigabitEthernet0/0/0/0 ! ! R5: mpls ldp log neighbor ! router-id 10.1.5.5 address-family ipv4 label local allocate for host-routes ! ! ! interface GigabitEthernet0/0/0/0 ! ! R6: mpls ldp log neighbor ! router-id 10.1.6.6 address-family ipv4 label local allocate for host-routes ! ! ! interface GigabitEthernet0/0/0/0 ! interface GigabitEthernet0/0/0/1 ! ! R7: mpls ldp log neighbor ! router-id 10.1.7.7 address-family ipv4 label local allocate for host-routes ! ! ! interface GigabitEthernet0/0/0/1 ! ! 配置 CE 与 PE,PE 与 ASBR 之间的 BGP 邻居 # 需要提前了解到的是，在 IOS XR 中, IBGP 可以不用配置 router-policy,但是对于 EBGP，一定需要配置 router-policy,入向和出向都需要配置，即使 router-policy 只有一个关键字 pass.入向不配置，会 drop 对端发来的 update；出向不配置，不会发布 update\nR1: route-policy EBGP_PASS pass end-policy ! router bgp 65000 bgp router-id 10.1.1.1 address-family ipv4 unicast network 10.1.1.1/32 ! neighbor 10.1.12.2 remote-as 1 address-family ipv4 unicast route-policy EBGP_PASS in route-policy EBGP_PASS out ! ! ! R2: router bgp 1 bgp router-id 10.1.2.2 address-family vpnv4 unicast ! neighbor 10.1.4.4 remote-as 1 update-source Loopback0 address-family vpnv4 unicast next-hop-self ! ! vrf VIP rd auto address-family ipv4 unicast ! neighbor 10.1.12.1 remote-as 65000 address-family ipv4 unicast route-policy EBGP_PASS in route-policy EBGP_PASS out ! ! ! ! R4 router bgp 1 bgp router-id 10.1.4.4 address-family vpnv4 unicast ! neighbor 10.1.2.2 remote-as 1 update-source Loopback0 address-family vpnv4 unicast next-hop-self ! ! vrf VIP \u0026lt;\u0026lt;\u0026lt;配置 VRF 的原因是为了能让受到的 VPNv4 路由加入路由表，否则我们只会在 BGP 路由表中看到 rd auto address-family ipv4 unicast ! ! ! R5: router bgp 2 bgp router-id 10.1.5.5 address-family vpnv4 unicast ! neighbor 10.1.7.7 remote-as 2 update-source Loopback0 address-family vpnv4 unicast next-hop-self ! ! vrf VIP rd auto address-family ipv4 unicast ! ! ! R7: router bgp 2 bgp router-id 10.1.7.7 address-family vpnv4 unicast ! neighbor 10.1.5.5 remote-as 2 update-source Loopback0 address-family vpnv4 unicast next-hop-self ! ! vrf VIP rd auto address-family ipv4 unicast ! neighbor 10.1.78.8 remote-as 65001 address-family ipv4 unicast route-policy EBGP_PASS in route-policy EBGP_PASS out ! ! ! ! R8: router bgp 65001 bgp router-id 10.1.8.8 address-family ipv4 unicast network 10.1.8.8/32 ! neighbor 10.1.78.7 remote-as 2 address-family ipv4 unicast route-policy EBGP_PASS in route-policy EBGP_PASS out ! ! ! 配置 ASRB 之间路由互相引入 # R4: router ospf VIP vrf VIP capability vrf-lite redistribute bgp 1 area 0 interface GigabitEthernet0/0/0/1 ! ! ! ! router bgp 1 vrf VIP rd auto address-family ipv4 unicast redistribute ospf VIP ! ! ! R5: router ospf VIP vrf VIP capability vrf-lite redistribute bgp 2 area 0 interface GigabitEthernet0/0/0/1 ! ! ! ! router bgp 2 vrf VIP rd auto address-family ipv4 unicast redistribute ospf VIP ! ! ! 验证连通性 # RP/0/0/CPU0:R1#traceroute 10.1.8.8 source 10.1.1.1 Mon Jun 24 01:24:28.393 UTC Type escape sequence to abort. Tracing the route to 10.1.8.8 1 10.1.12.2 0 msec 0 msec 0 msec 2 10.1.23.3 [MPLS: Labels 24001/24002 Exp 0] 9 msec 19 msec 9 msec 3 10.1.34.4 [MPLS: Label 24002 Exp 0] 19 msec 19 msec 9 msec 4 10.1.45.5 9 msec 9 msec 9 msec 5 10.1.56.6 [MPLS: Labels 24000/24002 Exp 0] 29 msec 19 msec 29 msec 6 10.1.67.7 [MPLS: Label 24002 Exp 0] 29 msec 19 msec 29 msec 7 10.1.78.8 29 msec \\* 19 msec RP/0/0/CPU0:R1# Q\u0026amp;A # 为什么需要配置这个命令\u0026quot;capability vrf-lite\u0026quot;? 主要目的是为了能将收到的路由顺利加表，原理如下:R4 对于 R5 而言是个 PE 设备，PE 在决定将 Type3, 5, 7 的 LSA 发布给对端的 CE 时，都会置为一个 DN bit，如下所示，对端 CE 收到 DN bit 的 LSA 是不会加表的，主要目的是为了防止环路。所以在这种情景下，使用这条命令可以不产生 DN bit，使收到的路由能顺利的加表.\nRP/0/0/CPU0:R4#show ospf vrf VIP database external Sat Jun 22 13:53:37.752 UTC OSPF Router with ID (10.1.4.4) (Process ID VIP, VRF VIP) Type-5 AS External Link States LS age: 28 Options: (No TOS-capability, DC, DN) LS Type: AS External Link Link State ID: 10.1.1.1 (External Network Number) Advertising Router: 10.1.4.4 LS Seq Number: 80000004 Checksum: 0xaf8e Length: 36 Network Mask: /32 Metric Type: 2 (Larger than any link state path) TOS: 0 Metric: 1 Forward Address: 0.0.0.0 External Route Tag: 3489660929 配置文件:\n[https://mega.nz/#F!xKg1VSJQ!MOGudG5349kecCxBY52LRA](http:// https://mega.nz/#F!xKg1VSJQ!MOGudG5349kecCxBY52LRA )\n","date":"5 October 2019","externalUrl":null,"permalink":"/blog/option-a/","section":"Blog","summary":"跨域 VPN 的解决方案主要是为了解决客户不同 AS 之间的站点的互通问题，即客户的 VPN 路由可以在两个 AS 之间进行传递。RFC4364 介绍了三种解决方案，我会在接下来的文章中一一介绍。本文先说第一种解决方案：Option A,这种解决方案需要在两个 AS 之间的 ASBR 上使用专门的接口去传递路由信息，所以我们也称这种为 VRF-to-VRF。","title":"跨域MPLS VPN Option A配置案例（IOS XR）","type":"blog"},{"content":" 上一篇文章介绍了第一种跨域 VPN 的解决方案-Option A,从配置上看最重要的一点是 ASBR 与 ASBR 之间的“特殊接口”的配置，将两个 ASBR 之间的关系模拟成 CE 与 PE.但是这样的配置缺少扩展性，例如如果 PE 上的用户很多，存在多个 VRF 的情况，如果使用 Option A,那么我们就需要在 ASBR 之间增加链路，并配置属于不同的 VRF。工作量大，而且繁琐。下面介绍一种相对简单的方案 Option B.\n写在最前面 # 配置步骤如下：\n配置 IP 地址以及 VRF 配置两个 AS 中的 IGP 协议_ISIS 配置 AS 中的标签分配协议（LDP） 配置 CE 与 PE,PE 与 ASBR 之间的 BGP 邻居 配置 ASBR 之间的 BGP VPNv4 邻居 配置静态路由解决标签分发问题 验证连通性 前四个步骤和 Option A 的配置很类似，可以参考上一篇文章，不同如下：\n配置 IP 地址以及 VRF # 不需要再 R4 和 R5 上配置 VRF- ASBR 之间的链路不需要加入 VRF 中，如下：\nRP/0/0/CPU0:R4#show run int gigabitEthernet 0/0/0/1 Wed Jun 26 10:24:09.987 UTC interface GigabitEthernet0/0/0/1 ipv4 address 10.1.45.4 255.255.255.0 ! RP/0/0/CPU0:R5#show run int gigabitEthernet 0/0/0/1 Wed Jun 26 10:24:29.228 UTC interface GigabitEthernet0/0/0/1 ipv4 address 10.1.45.5 255.255.255.0 ! 配置两个 AS 中的 IGP 协议_ISIS # 配置 AS 中的标签分配协议（LDP） # 配置 CE 与 PE,PE 与 ASBR 之间的 BGP 邻居 # 不需要再 BGP 进程中添加 vrf 配置\n配置 ASBR 之间的 BGP VPNv4 邻居 # R4 RP/0/0/CPU0:R4#show run router bgp Wed Jun 26 10:30:26.822 UTC router bgp 1 bgp router-id 10.1.4.4 address-family vpnv4 unicast retain route-target all \u0026lt;\u0026lt;\u0026lt; 默认开启 RT 过滤，所以使用这个命令关闭 RT 过滤 ! neighbor 10.1.2.2 remote-as 1 update-source Loopback0 address-family vpnv4 unicast next-hop-self ! ! neighbor 10.1.45.5 \u0026lt;\u0026lt;\u0026lt; ASBR remote-as 2 address-family vpnv4 unicast route-policy EBGP_PASS in route-policy EBGP_PASS out R5 RP/0/0/CPU0:R5#show run router bgp Wed Jun 26 10:33:44.250 UTC router bgp 2 bgp router-id 10.1.5.5 address-family vpnv4 unicast retain route-target all ! neighbor 10.1.7.7 remote-as 2 update-source Loopback0 address-family vpnv4 unicast next-hop-self ! ! neighbor 10.1.45.4 remote-as 1 address-family vpnv4 unicast route-policy EBGP_PASS in route-policy EBGP_PASS out 配置静态路由 # 再两个 ASBR 上配置/32 静态路由，只指出接口，不写下一跳.\nR4 RP/0/0/CPU0:R4#show run router static Wed Jun 26 12:08:27.689 UTC router static address-family ipv4 unicast 10.1.45.5/32 GigabitEthernet0/0/0/1 ! ! R5 RP/0/0/CPU0:R5#show run router static Wed Jun 26 12:07:59.292 UTC router static address-family ipv4 unicast 10.1.45.4/32 GigabitEthernet0/0/0/1 ! ! 查看转发表项:\nRP/0/0/CPU0:R4#show mpls forwarding Wed Jun 26 12:09:04.126 UTC Local Outgoing Prefix Outgoing Next Hop Bytes Label Label or ID Interface Switched --- 24000 Pop 10.1.3.3/32 Gi0/0/0/0 10.1.34.3 591070 24001 24000 10.1.2.2/32 Gi0/0/0/0 10.1.34.3 572537 24004 24002 10.1.2.2:0:10.1.1.1/32 \\ 10.1.2.2 4568 24006 Pop 10.1.45.5/32 Gi0/0/0/1 10.1.45.5 7440 24007 24004 10.1.7.7:0:10.1.8.8/32 \\ Gi0/0/0/1 10.1.45.5 2764 RP/0/0/CPU0:R4# RP/0/0/CPU0:R5#show mpls forwarding Wed Jun 26 12:09:25.166 UTC Local Outgoing Prefix Outgoing Next Hop Bytes Label Label or ID Interface Switched --- 24000 Pop 10.1.6.6/32 Gi0/0/0/0 10.1.56.6 591020 24001 24000 10.1.7.7/32 Gi0/0/0/0 10.1.56.6 568880 24004 24002 10.1.7.7:0:10.1.8.8/32 \\ 10.1.7.7 3130 24006 Pop 10.1.45.4/32 Gi0/0/0/1 10.1.45.4 9629 24007 24004 10.1.2.2:0:10.1.1.1/32 \\ Gi0/0/0/1 10.1.45.4 4568 RP/0/0/CPU0:R5# 验证连通性 # 24001/24007对应LDP Label/BGP VPNv4 Lable\n24007对应 BGP VPNv4 Lable\n24004对应 BGP VPNv4 Lable\n24000/24002对应LDP Lable/BGP VPNv4 Label\n24002对应BGP VPNv4 Label\nRP/0/0/CPU0:R1#traceroute 10.1.8.8 source 10.1.1.1 Wed Jun 26 12:11:33.265 UTC Type escape sequence to abort. Tracing the route to 10.1.8.8 1 10.1.12.2 9 msec 0 msec 0 msec 2 10.1.23.3 [MPLS: Labels 24001/24007 Exp 0] 19 msec 29 msec 29 msec 3 10.1.34.4 [MPLS: Label 24007 Exp 0] 29 msec 29 msec 29 msec 4 10.1.45.5 [MPLS: Label 24004 Exp 0] 29 msec 29 msec 29 msec 5 10.1.56.6 [MPLS: Labels 24000/24002 Exp 0] 29 msec 39 msec 29 msec 6 10.1.67.7 [MPLS: Label 24002 Exp 0] 29 msec 29 msec 19 msec 7 10.1.78.8 19 msec * 29 msec RP/0/0/CPU0:R1# 配置文件:\nhttps://mega.nz/#F!8KhVxI7A!Js3SwYD0dhlmbskhx1R40w\n","date":"5 October 2019","externalUrl":null,"permalink":"/blog/option-b/","section":"Blog","summary":"上一篇文章介绍了第一种跨域 VPN 的解决方案-Option A,从配置上看最重要的一点是 ASBR 与 ASBR 之间的“特殊接口”的配置，将两个 ASBR 之间的关系模拟成 CE 与 PE.","title":"跨域MPLS VPN Option B配置案例（IOS XR）","type":"blog"},{"content":" 这篇文章介绍一下跨域 VPN Option C 在 IOX 设备上的配置案例\n如果需要 CE 之间互通，我们需要考虑以下的问题：\nRR与RR之间的控制层面与数据层面 ； CE与CE之间控制层面； CE与CE之间的数据层面 ；\n下面将对这些详细说明。\nRR 与 RR 之间的控制层面与数据层面 # 第一步将两个 AS 内的 IGP/MPLS LDP 使能。\n第二步，RR1 于 RR2 之间建立 BGP 邻居是使用 loopback 接口，跨域的是不能通过 IGP 传递过去，需要在RR1---\u0026gt;R4---\u0026gt;R5---\u0026gt;RR2起 BGP LU 的邻居，并将自己的 loopback 口宣告出去，以 RR2 的 loopback0（10.1.22.22）举例：\nRR2 的 BGP 配置如下：\nRP/0/0/CPU0:RR02#show run router bgp Tue Apr 14 12:00:01.138 UTC router bgp 2 bgp router-id 10.1.22.22 address-family ipv4 unicast network 10.1.22.22/32 \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; 宣告本地loopback接口 allocate-label all \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; 在IOX系统内，启用BGP LU必须使能allocate-label，要不然不会为BGP路由分配标签 ! neighbor 10.1.5.5 remote-as 2 update-source Loopback0 address-family ipv4 labeled-unicast route-reflector-client ! ! R5 会收到 RR2 传递过来 label 为3的 prefix，并为之分配本地标签24007,并向 R4 发送路由更新。\nRP/0/0/CPU0:R5#show bgp ipv4 labeled-unicast 10.1.22.22/32 Tue Apr 14 12:05:33.615 UTC BGP routing table entry for 10.1.22.22/32 Versions: Process bRIB/RIB SendTblVer Speaker 16 16 Local Label: 24007 \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; Last Modified: Apr 11 18:36:21.564 for 2d17h Paths: (1 available, best #1) Advertised IPv4 Labeled-unicast paths to peers (in unique update groups): 10.1.45.4 Path #1: Received by speaker 0 Advertised IPv4 Labeled-unicast paths to peers (in unique update groups): 10.1.45.4 Local 10.1.22.22 (metric 20) from 10.1.22.22 (10.1.22.22) Received Label 3 \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; Origin IGP, metric 0, localpref 100, valid, internal, best, group-best, labeled-unicast Received Path ID 0, Local Path ID 1, version 16 R4 收到路由后为其分配本地标签24007\nRP/0/0/CPU0:R4#show bgp ipv4 labeled-unicast 10.1.22.22/32 Tue Apr 14 12:08:11.833 UTC BGP routing table entry for 10.1.22.22/32 Versions: Process bRIB/RIB SendTblVer Speaker 16 16 Local Label: 24007 \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; Last Modified: Apr 11 18:36:30.321 for 2d17h Paths: (1 available, best #1) Advertised IPv4 Labeled-unicast paths to peers (in unique update groups): 10.1.11.11 Path #1: Received by speaker 0 Advertised IPv4 Labeled-unicast paths to peers (in unique update groups): 10.1.11.11 2 10.1.45.5 from 10.1.45.5 (10.1.5.5) Received Label 24007 \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; Origin IGP, localpref 100, valid, external, best, group-best, labeled-unicast Received Path ID 0, Local Path ID 1, version 16 Origin-AS validity: (disabled) RP/0/0/CPU0:R4# RR1 收到路由如下, 下一跳为域内 R4 的 loopback 地址。\nRP/0/0/CPU0:RR01#show bgp ipv4 labeled-unicast 10.1.22.22/32 Tue Apr 14 12:11:22.591 UTC BGP routing table entry for 10.1.22.22/32 Versions: Process bRIB/RIB SendTblVer Speaker 10 10 Local Label: 24004 \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; Last Modified: Apr 11 18:36:37.538 for 2d17h Paths: (1 available, best #1) Advertised IPv4 Labeled-unicast paths to update-groups (with more than one peer): 0.2 Path #1: Received by speaker 0 Advertised IPv4 Labeled-unicast paths to update-groups (with more than one peer): 0.2 2, (Received from a RR-client) 10.1.4.4 (metric 20) from 10.1.4.4 (10.1.4.4) Received Label 24007 \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; Origin IGP, localpref 100, valid, internal, best, group-best, labeled-unicast Received Path ID 0, Local Path ID 1, version 10 RP/0/0/CPU0:RR01# 那么路径 RR1---\u0026gt;R4---\u0026gt;R5---\u0026gt;RR2 到数据层面如下：\nRP/0/0/CPU0:RR01#traceroute 10.1.22.22 source 10.1.11.11 Tue Apr 14 12:13:10.974 UTC Type escape sequence to abort. Tracing the route to 10.1.22.22 1 10.1.31.3 [MPLS: Labels 24001/24007 Exp 0] 19 msec 29 msec 29 msec 【LDP label/BGP LU Label】 2 10.1.34.4 [MPLS: Label 24007 Exp 0] 29 msec 19 msec 19 msec 【LDP 次末挑弹出只剩下BGP LU】 3 10.1.45.5 [MPLS: Label 24007 Exp 0] 19 msec 19 msec 19 msec 【BGP LU, 到R5之后BGPlabel会弹出，查cef表域内转发】 4 10.1.56.6 [MPLS: Label 24002 Exp 0] 19 msec 29 msec 29 msec 【LDP label】 5 10.1.62.2 39 msec * 19 msec 【LDP 次末跳弹出】 RP/0/0/CPU0:RR01#show cef 10.1.4.4/32 Tue Apr 14 12:13:34.462 UTC 10.1.4.4/32, version 9, internal 0x1000001 0x0 (ptr 0xa11dd680) [1], 0x0 (0xa11c0468), 0xa28 (0xa15d11b8) Updated Apr 10 12:57:39.266 local adjacency 10.1.31.3 Prefix Len 32, traffic index 0, precedence n/a, priority 3 via 10.1.31.3/32, GigabitEthernet0/0/0/0, 5 dependencies, weight 0, class 0 [flags 0x0] path-idx 0 NHID 0x0 [0xa18aa110 0x0] next hop 10.1.31.3/32 local adjacency local label 24000 labels imposed {24001} CE 与 CE 之间控制层面 # 拿 R8 的 loopback0 路由10.1.8.8/32举例，R8 和 R7 建立 EBGP 链接，将路由传递给 R7.查看 R7 上的路由如下，为其分配 BGP VPNv4 的标签24002\nRP/0/0/CPU0:R7#show bgp vrf VIP ipv4 unicast 10.1.8.8/32 detail Wed Apr 15 03:33:52.790 UTC BGP routing table entry for 10.1.8.8/32, Route Distinguisher: 10.1.7.7:0 Versions: Process bRIB/RIB SendTblVer Speaker 5 5 Local Label: 24002 (no rewrite); Flags: 0x01141001+0x00000000; Last Modified: Apr 10 12:58:37.619 for 4d14h Paths: (1 available, best #1) Not advertised to any peer Path #1: Received by speaker 0 Flags: 0xc00000000d040003, import: 0x1f Not advertised to any peer 65001 10.1.78.8 from 10.1.78.8 (10.1.8.8) Origin IGP, metric 0, localpref 100, valid, external, best, group-best, import-candidate Received Path ID 0, Local Path ID 1, version 5 Extended community: RT:100:100 Origin-AS validity: (disabled) R7 与 RR2 建立 VPNv4 的邻居，RR2 收到这条 BGP 路由下一跳时 R7 的 loopback 口地址10.1.7.7\nRP/0/0/CPU0:RR02#show bgp vpnv4 unicast rd 10.1.7.7:0 10.1.8.8/32 detail Wed Apr 15 03:39:42.716 UTC BGP routing table entry for 10.1.8.8/32, Route Distinguisher: 10.1.7.7:0 Versions: Process bRIB/RIB SendTblVer Speaker 3 3 Flags: 0x00040001+0x00000000; Last Modified: Apr 10 12:59:37.534 for 4d14h Paths: (1 available, best #1) Advertised to peers (in unique update groups): 10.1.11.11 Path #1: Received by speaker 0 Flags: 0x4000000025060205, import: 0x1f Advertised to peers (in unique update groups): 10.1.11.11 65001, (Received from a RR-client) 10.1.7.7 (metric 20) from 10.1.7.7 (10.1.7.7) Received Label 24002 Origin IGP, metric 0, localpref 100, valid, internal, best, group-best, import-candidate, not-in-vrf Received Path ID 0, Local Path ID 1, version 3 Extended community: RT:100:100 RP/0/0/CPU0:RR02# RR2 与 RR1 建立 VPNv4 的邻居，并互指next-hop-unchanged，因此 RR1 上看到的路由下一条依旧为10.1.7.7\nRP/0/0/CPU0:RR01#show bgp vpnv4 unicast rd 10.1.7.7:0 10.1.8.8/32 detail Wed Apr 15 03:48:54.418 UTC BGP routing table entry for 10.1.8.8/32, Route Distinguisher: 10.1.7.7:0 Versions: Process bRIB/RIB SendTblVer Speaker 5 5 Flags: 0x00040001+0x00000000; Last Modified: Apr 12 17:17:18.538 for 2d10h Paths: (1 available, best #1) Advertised to peers (in unique update groups): 10.1.2.2 Path #1: Received by speaker 0 Flags: 0x4000000025060001, import: 0x20 Advertised to peers (in unique update groups): 10.1.2.2 2 65001 10.1.7.7 (metric 20) from 10.1.22.22 (10.1.22.22) Received Label 24002 Origin IGP, localpref 100, valid, external, best, group-best, import-candidate, not-in-vrf Received Path ID 0, Local Path ID 1, version 5 Extended community: RT:100:100 RP/0/0/CPU0:RR01# RR1 与 R2 建立 VPNv4 的邻居，将此条路由通告出去，R2 上看到此路由的下一条为 10.1.7.7 ，R2 将之传递给 R1\nRP/0/0/CPU0:R2# RP/0/0/CPU0:R2#show bgp vpnv4 unicast rd 10.1.7.7:0 10.1.8.8/32 detail Wed Apr 15 07:55:59.930 UTC BGP routing table entry for 10.1.8.8/32, Route Distinguisher: 10.1.7.7:0 Versions: Process bRIB/RIB SendTblVer Speaker 11 11 Flags: 0x00040001+0x00000000; Last Modified: Apr 12 17:17:09.376 for 2d14h Paths: (1 available, best #1) Not advertised to any peer Path #1: Received by speaker 0 Flags: 0x4000000025060005, import: 0x1f Not advertised to any peer 2 65001 10.1.7.7 (metric 20) from 10.1.11.11 (10.1.11.11) Received Label 24002 Origin IGP, localpref 100, valid, internal, best, group-best, import-candidate, not-in-vrf Received Path ID 0, Local Path ID 1, version 11 Extended community: RT:100:100 RP/0/0/CPU0:R2# CE 与 CE 之间的数据层面 # 如上，R2 上看到10.1.8.8 下一跳是10.1.7.7，那么我们需要打通一条完整的 LSP，让数据层面可以正常转发。\n这里有用到了 BGP LU, 首先 R7 与 R5 建立 BGP LU，并为自己的 loopback 地址分配3的标签\nR5 收到后会为10.1.7.7分配24000的本地标签并送给 R4，下一跳为10.1.7.7\nR4 收到后会为10.1.7.7分配24006的本地标签并发给 R2,并修改下一跳地址为自己，10.1.4.4\nR2 上我们能看到 received lable 为24006，下一跳为10.1.4.4，域内地址\nRP/0/0/CPU0:R5#show bgp ipv4 labeled-unicast 10.1.7.7/32 Wed Apr 15 08:03:24.181 UTC BGP routing table entry for 10.1.7.7/32 Versions: Process bRIB/RIB SendTblVer Speaker 15 15 Local Label: 24000 Last Modified: Apr 11 18:36:21.564 for 3d13h Paths: (1 available, best #1) Advertised IPv4 Labeled-unicast paths to peers (in unique update groups): 10.1.45.4 Path #1: Received by speaker 0 Advertised IPv4 Labeled-unicast paths to peers (in unique update groups): 10.1.45.4 Local 10.1.7.7 (metric 20) from 10.1.22.22 (10.1.7.7) Received Label 3 Origin IGP, metric 0, localpref 100, valid, internal, best, group-best, labeled-unicast Received Path ID 0, Local Path ID 1, version 15 Originator: 10.1.7.7, Cluster list: 10.1.22.22 RP/0/0/CPU0:R5# RP/0/0/CPU0:R4#show bgp ipv4 labeled-unicast 10.1.7.7/32 Wed Apr 15 08:04:04.978 UTC BGP routing table entry for 10.1.7.7/32 Versions: Process bRIB/RIB SendTblVer Speaker 5 5 Local Label: 24006 Last Modified: Apr 10 12:58:55.321 for 4d19h Paths: (1 available, best #1) Advertised IPv4 Labeled-unicast paths to peers (in unique update groups): 10.1.11.11 Path #1: Received by speaker 0 Advertised IPv4 Labeled-unicast paths to peers (in unique update groups): 10.1.11.11 2 10.1.45.5 from 10.1.45.5 (10.1.5.5) Received Label 24000 Origin IGP, localpref 100, valid, external, best, group-best, labeled-unicast Received Path ID 0, Local Path ID 1, version 5 Origin-AS validity: (disabled) RP/0/0/CPU0:R2# show bgp ipv4 labeled-unicast 10.1.7.7/32 Wed Apr 15 08:07:55.011 UTC BGP routing table entry for 10.1.7.7/32 Versions: Process bRIB/RIB SendTblVer Speaker 5 5 Local Label: 24004 Last Modified: Apr 10 12:58:55.376 for 4d19h Paths: (1 available, best #1) Not advertised to any peer Path #1: Received by speaker 0 Not advertised to any peer 2 10.1.4.4 (metric 20) from 10.1.11.11 (10.1.4.4) Received Label 24006 Origin IGP, localpref 100, valid, internal, best, group-best, labeled-unicast Received Path ID 0, Local Path ID 1, version 5 Originator: 10.1.4.4, Cluster list: 10.1.11.11 这时候我们在 R2 查看10.1.8.8的 cef 表可以看到标签为24001 24006 24002，对应10.1.4.4LDP标签/10.1.7.7 BGP LU标签/BGP VPNv4标签\n在 R3 上根据标签表转发，栈顶标签次末跳弹出，剩余标签为 24006 24002 ， 对应10.1.7.7 BGP LU标签/BGP VPNv4标签\n在 R4 上根据标签表转发，修改栈顶标签， 24000 24002 对应 10.1.7.7 BGP LU标签/BGP VPNv4标签\n在 R5 上根据标签表转发，修改栈顶标签，24000 24002对应10.1.7.7 LDP标签/ BGP VPNv4标签\n在 R6 上根据标签表转发 ，栈顶标签次末跳弹出， 剩余标签为24002对应BGP VPNv4标签\n在 R7 上先查标签表直接从Gi0/0/0/0送出\nRP/0/0/CPU0:R2#show cef vrf VIP 10.1.8.8 Wed Apr 15 08:16:49.124 UTC 10.1.8.8/32, version 8, internal 0x5000001 0x0 (ptr 0xa1221058) [1], 0x0 (0x0), 0x208 (0xa16b1210) Updated Apr 12 17:17:09.130 Prefix Len 32, traffic index 0, precedence n/a, priority 3 via 10.1.7.7/32, 3 dependencies, recursive [flags 0x6000] path-idx 0 NHID 0x0 [0xa172593c 0x0] recursion-via-/32 next hop VRF - \u0026#39;default\u0026#39;, table - 0xe0000000 next hop 10.1.7.7/32 via 24004/0/21 next hop 10.1.23.3/32 Gi0/0/0/1 labels imposed {24001 24006 24002} RP/0/0/CPU0:R3#show mpls forwarding labels 24001 Wed Apr 15 08:28:05.079 UTC Local Outgoing Prefix Outgoing Next Hop Bytes Label Label or ID Interface Switched ------ ----------- ------------------ ------------ --------------- ------------ 24001 Pop 10.1.4.4/32 Gi0/0/0/0 10.1.34.4 2212964 RP/0/0/CPU0:R3# RP/0/0/CPU0:R4#show mpls forwarding labels 24006 Wed Apr 15 08:28:58.186 UTC Local Outgoing Prefix Outgoing Next Hop Bytes Label Label or ID Interface Switched ------ ----------- ------------------ ------------ --------------- ------------ 24006 24000 10.1.7.7/32 Gi0/0/0/1 10.1.45.5 4344 RP/0/0/CPU0:R4# RP/0/0/CPU0:R5#show mpls forwarding labels 24000 Wed Apr 15 08:29:33.724 UTC Local Outgoing Prefix Outgoing Next Hop Bytes Label Label or ID Interface Switched ------ ----------- ------------------ ------------ --------------- ------------ 24000 24000 10.1.7.7/32 Gi0/0/0/0 10.1.56.6 4776 RP/0/0/CPU0:R5# RP/0/0/CPU0:R6#show mpls forwarding labels 24000 Wed Apr 15 08:30:31.660 UTC Local Outgoing Prefix Outgoing Next Hop Bytes Label Label or ID Interface Switched ------ ----------- ------------------ ------------ --------------- ------------ 24000 Pop 10.1.7.7/32 Gi0/0/0/1 10.1.67.7 1480864 RP/0/0/CPU0:R6# RP/0/0/CPU0:R7#show mpls forwarding Wed Apr 15 08:31:38.636 UTC Local Outgoing Prefix Outgoing Next Hop Bytes Label Label or ID Interface Switched ------ ----------- ------------------ ------------ --------------- ------------ 24000 Pop 10.1.6.6/32 Gi0/0/0/1 10.1.67.6 774254 24001 24001 10.1.5.5/32 Gi0/0/0/1 10.1.67.6 6512 24002 Unlabelled 10.1.8.8/32[V] Gi0/0/0/0 10.1.78.8 5936 \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; 24006 24002 10.1.22.22/32 Gi0/0/0/1 10.1.67.6 742325 24007 24005 10.1.2.2/32 10.1.5.5 0 24008 24006 10.1.11.11/32 10.1.5.5 0 RP/0/0/CPU0:R7# 测试 # RP/0/0/CPU0:R1#ping 10.1.8.8 source 10.1.1.1 Sun Apr 12 17:17:18.117 UTC Type escape sequence to abort. Sending 5, 100-byte ICMP Echos to 10.1.8.8, timeout is 2 seconds: RP/0/0/CPU0:R1#traceroute 10.1.8.8 source 10.1.1.1 Sun Apr 12 17:17:20.567 UTC Type escape sequence to abort. Tracing the route to 10.1.8.8 1 10.1.12.2 9 msec 0 msec 0 msec 2 10.1.23.3 [MPLS: Labels 24001/24006/24002 Exp 0] 29 msec 29 msec 29 msec LDP Label/BGP LU label/BGP VPN4 label 3 10.1.34.4 [MPLS: Labels 24006/24002 Exp 0] 19 msec 19 msec 29 msec BGP LU label/BGP VPN4 label 4 10.1.45.5 [MPLS: Labels 24000/24002 Exp 0] 19 msec 19 msec 29 msec BGP LU label/BGP VPN4 label 5 10.1.56.6 [MPLS: Labels 24000/24002 Exp 0] 29 msec 19 msec 19 msec LDP Label /BGP VPN4 label 6 10.1.67.7 [MPLS: Label 24002 Exp 0] 29 msec 29 msec 19 msec BGP VPN4 label 7 10.1.78.8 29 msec * 39 msec RP/0/0/CPU0:R1# RP/0/0/CPU0:R1# RP/0/0/CPU0:R1# RP/0/0/CPU0:R1# RP/0/0/CPU0:R1#show route Tue Jul 23 12:54:31.565 UTC Codes: C - connected, S - static, R - RIP, B - BGP, (\u0026gt;) - Diversion path D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2 E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP i - ISIS, L1 - IS-IS level-1, L2 - IS-IS level-2 ia - IS-IS inter area, su - IS-IS summary null, * - candidate default U - per-user static route, o - ODR, L - local, G - DAGR, l - LISP A - access/subscriber, a - Application route M - mobile route, r - RPL, t - Traffic Engineering, (!) - FRR Backup path Gateway of last resort is not set L 10.1.1.1/32 is directly connected, 09:07:18, Loopback0 B 10.1.8.8/32 [20/0] via 10.1.12.2, 03:02:29 C 10.1.12.0/24 is directly connected, 09:07:18, GigabitEthernet0/0/0/0 L 10.1.12.1/32 is directly connected, 09:07:18, GigabitEthernet0/0/0/0 配置文件/抓包文件 # https://mega.nz/folder/0LYyzSjJ#Nb-HXWTwsYMt28iYvtjmZQ\n","date":"5 October 2019","externalUrl":null,"permalink":"/blog/option-c/","section":"Blog","summary":"这篇文章介绍一下跨域 VPN Option C 在 IOX 设备上的配置案例","title":"跨域MPLS VPN Option C配置案例（IOS XR）","type":"blog"},{"content":" ASR9000 Software install guide # cXR upgrade # Reload router then Ctrl+C enter into rommon, or modify resister:\n#admin config-register 0x0 #admin reload location all Turboboot (USB or TFTP) # Boot from USB:\nrommon 16 \u0026gt; unset BOOT rommon 17 \u0026gt; sync rommon 18 \u0026gt; set PS1=rommon ! \u0026gt; ?=0 TURBOBOOT=on,disk0,format rommon 19 \u0026gt; rommon 19 \u0026gt; rommon 19 \u0026gt; boot usb:asr9k-mini-px.vm-6.2.3 Beginning Media boot: **** check image validation **** .......BIOS CODE SIGN ENTRY ... Image ASR9K-Tomahawk verified successfully boot_disk2 - Launching image. Boot from tftp:\nrommon1\u0026gt;IP_ADDRESS=10.75.49.45 rommon2\u0026gt;IP_SUBNET_MASK=255.255.255.0 rommon3\u0026gt;TFTP_SERVER=10.75.49.254 rommon4\u0026gt;DEFAULT_GATWAY=10.75.49.1 rommon5\u0026gt;TFTP_RETRY_COUNT=4 rommon6\u0026gt;TFTP_TIMEOUT=60 rommon7\u0026gt;TFTP_CHECKSUM=1 rommon8\u0026gt;priv rommon9\u0026gt;diswd rommon10\u0026gt;unset BOOT rommon11\u0026gt;TURBOBOOT=on,disk0,format rommon12\u0026gt;sync rommon13\u0026gt;boot tftp://10.75.49.254/asr9k-mini-px.vm-6.2.3 Install add # RP/0/RP0/CPU0:CORE5-CRS16-A# RP/0/RP0/CPU0:CORE5-CRS16-A#admin install add tar tftp://10.75.49.240/CRS-iosxr-px-k9-6.2.25.tar synchronous \u0026lt;\u0026lt;\u0026lt; Mon Oct 24 20:29:32.205 GMT Install operation 37 \u0026#39;(admin) install add tar /tftp://10.75.49.240/CRS-iosxr-px-k9-6.2.25.tar synchronous\u0026#39; started by user \u0026#39;cisco\u0026#39; via CLI at 20:29:32 GMT Mon Oct 24 1988. Info: The following files were extracted from the tar file \u0026#39;/tftp://10.75.49.240/CRS-iosxr-px-k9-6.2.25.tar\u0026#39; and will be added to the Info: entire router: Info: Info: hfr-asr9000v-nV-px.pie-6.2.25 Info: hfr-diags-px.pie-6.2.25 Info: hfr-doc-px.pie-6.2.25 Info: hfr-fpd-px.pie-6.2.25 Info: hfr-k9sec-px.pie-6.2.25 Info: hfr-li-px.pie-6.2.25 Info: hfr-mcast-px.pie-6.2.25 Info: hfr-mgbl-px.pie-6.2.25 Info: hfr-mini-px.pie-6.2.25 Info: hfr-mpls-px.pie-6.2.25 Info: hfr-services-px.pie-6.2.25 Info: hfr-video-px.pie-6.2.25 Info: README-CRS-iosxr-px-6.2.25.txt (skipped - not a pie) Info: README-CRS-iosxr-px-k9-6.2.25.txt (skipped - not a pie) Info: Info: The following packages are now available to be activated: Info: Info: disk0:hfr-asr9000v-nV-px-6.2.25 Info: disk0:hfr-diags-px-6.2.25 Info: disk0:hfr-doc-px-6.2.25 Info: disk0:hfr-fpd-px-6.2.25 Info: disk0:hfr-k9sec-px-6.2.25 Info: disk0:hfr-li-px-6.2.25 Info: disk0:hfr-mcast-px-6.2.25 Info: disk0:hfr-mgbl-px-6.2.25 Info: disk0:hfr-mini-px-6.2.25 Info: disk0:hfr-mpls-px-6.2.25 Info: disk0:hfr-services-px-6.2.25 Info: disk0:hfr-video-px-6.2.25 Info: Info: The packages can be activated across the entire router. Info: Install operation 37 completed successfully at 21:11:52 GMT Mon Oct 24 1988. RP/0/RP0/CPU0:CORE5-CRS16-A#admin install activate id 37 synchronous \u0026lt;\u0026lt;\u0026lt; install active Mon Oct 24 21:12:09.085 GMT Install operation 38 \u0026#39;(admin) install activate id 37 synchronous\u0026#39; started by user \u0026#39;cisco\u0026#39; via CLI at 21:12:09 GMT Mon Oct 24 1988. Info: This operation will activate the following packages: Info: disk0:hfr-video-px-6.2.25 Info: disk0:hfr-services-px-6.2.25 Info: disk0:hfr-mpls-px-6.2.25 Info: disk0:hfr-mini-px-6.2.25 Info: disk0:hfr-mgbl-px-6.2.25 Info: disk0:hfr-mcast-px-6.2.25 Info: disk0:hfr-li-px-6.2.25 Info: disk0:hfr-k9sec-px-6.2.25 Info: disk0:hfr-fpd-px-6.2.25 Info: disk0:hfr-doc-px-6.2.25 Info: disk0:hfr-diags-px-6.2.25 Info: disk0:hfr-asr9000v-nV-px-6.2.25 Info: This operation will reload the following nodes in parallel: Info: 0/0/CPU0 (LC) (SDR: Owner) Info: 0/1/CPU0 (LC) (SDR: Owner) Info: 0/6/SP (MSC-DRP-SP) (Admin Resource) Info: 0/6/CPU0 (LC) (SDR: Owner) Info: 0/RP0/CPU0 (CRS16-RP-x86) (SDR: Owner) Info: 0/FC0/SP (Other-SP-B) (Admin Resource) Info: 0/FC1/SP (Other-SP-B) (Admin Resource) Info: 0/AM0/SP (Other-SP-B) (Admin Resource) Info: 0/AM1/SP (Other-SP-B) (Admin Resource) Info: 0/SM0/SP (400G-Fabric-SP-C) (Admin Resource) Info: 0/SM1/SP (400G-Fabric-SP-C) (Admin Resource) Info: 0/SM2/SP (400G-Fabric-SP-C) (Admin Resource) Info: 0/SM3/SP (400G-Fabric-SP-C) (Admin Resource) Proceed with this install operation (y/n)? [y] Info: Install Method: Parallel Reload Install operation 38: load phase started at 21:19:00 GMT Mon Oct 24 1988. Info: The changes made to software configurations will not be persistent across system reloads. Use the command \u0026#39;(admin) install commit\u0026#39; to make changes Info: persistent. Info: Please verify that the system is consistent following the software change using the following commands: Info: show system verify Info: install verify packages Install operation 38 completed successfully at 21:19:51 GMT Mon Oct 24 1988. RP/0/RP0/CPU0:CORE5-CRS16-A# RP/0/RP0/CPU0:CORE5-CRS16-A# User Access Verification Username: cisco Password: RP/0/RP0/CPU0:CORE5-CRS16-A#admin install commit Wed Oct 24 21:37:42.608 GMT Install operation 39 \u0026#39;(admin) install commit\u0026#39; started by user \u0026#39;cisco\u0026#39; via CLI at 21:37:42 GMT Wed Oct 24 2018. Install operation 39 completed successfully at 21:37:49 GMT Wed Oct 24 2018. RP/0/RP0/CPU0:CORE5-CRS16-A# PXE migration to eXR # Booting IOS-XR 64 bit Mgmt Network boot using local settings (iPXE) - Press Ctrl-c to stop o Please select the operating system and the boot device: 1) IOS-XR (32 bit Classic XR) 2) IOS-XR 64 bit Boot previously installed image 3) IOS-XR 64 bit Mgmt Network boot using DHCP server 4) IOS-XR 64 bit Mgmt Network boot using local settings (iPXE) 5) IOS-XR 64 bit Internal network boot from RSP/RP 6) IOS-XR 64 bit Local boot using embedded USB media 7) IOS-XR 64 bit Local boot using front panel USB media Selection [1/2/3/4/5/6/7]: 4Selected IOS-XR 64 bit Mgmt Network boot using local settings (iPXE), Continue ? Y/N: y Press Ctrl-B for the iPXE command line... iPXE\u0026gt; set net0/ip 10.75.49.7 iPXE\u0026gt; set net0/netmask 255.255.255.0 iPXE\u0026gt; set net0/gateway 10.75.49.1 iPXE\u0026gt; ifopen net0 iPXE\u0026gt; iPXE\u0026gt; ping 10.75.49.1 0 bytes from \u0026lt;none\u0026gt;: seq=1: Connection timed out (http://ipxe.org/4c1b2092) 64 bytes from 10.75.49.1: seq=2 64 bytes from 10.75.49.1: seq=3 Finished: Operation canceled (http://ipxe.org/0b072095) iPXE\u0026gt; iPXE\u0026gt; ifstat iPXE\u0026gt; iPXE\u0026gt; boot tftp://10.75.49.254/IOX642/asr9k-mini-x64-6.4.2.iso cXR to eXR migration by use eUSB # RP/0/RP0/CPU0:ios#copy tftp:/IOX642/asr9k-mini-x64-migrate_to_eXR.tar-6.4.2 harddisk: Wed Feb 20 03:10:00.386 UTC Address or name of remote host [10.75.49.254]? Destination filename [/harddisk:/asr9k-mini-x64-migrate_to_eXR.tar-6.4.2]? RP/0/RP0/CPU0:ios#run /pkg/bin/migrate_to_eXR -m eusb -r Wed Feb 20 03:26:38.128 UTC No standby RP/RSP detected. Found tar file asr9k-mini-x64-migrate_to_eXR.tar-6.4.2 in /harddisk:/. This tar file should contain the ASR9K IOS XR 64 Bit ISO and boot files. Extracting and Checking md5sum Tar: blocksize = 20 x boot/initrd.img, 122661203 bytes, 239573 tape blocks x boot/signature.initrd.img, 256 bytes, 1 tape blocks x boot/signature.initrd.img.md5sum, 33 bytes, 1 tape block eXR to cXR downgrade # RP/0/RP0/CPU0:ASR9922-C# RP/0/RP0/CPU0:ASR9922-C#copy harddiskb:/asr9k-mini-px.vm-5.3.3 harddisk: Tue Feb 19 03:55:29.904 EST Destination filename [/harddisk:/asr9k-mini-px.vm-5.3.3]? CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC RP/0/RP0/CPU0:ASR9922-C#admin Tue Feb 19 03:56:15.621 EST cisco connected from 127.0.0.1 using console on ASR9922-C sysadmin-vm:0_RP0# copy harddisk:/asr9k-mini-px.vm-5.3.3 location 0/RP0/CPU0/VM1 harddiskb:/ Tue Feb 19 03:56:35.978 UTC-05:00 Copying harddisk:/asr9k-mini-px.vm-5.3.3 to harddiskb:/ asr9k-mini-px.vm-5.3.3 0% 0 0.0KB/s --:-- ETA asr9k-mini-px.vm-5.3.3 sysadmin-vm:0_RP0# run /etc/rc.d/init.d/migrate_to_cXR -b eusb -m rp0 -r Tue Feb 19 04:01:52.572 UTC-05:00 No standby RSP/RP detected. Updated MIGRATE flag. Updated boot filename to asr9k-mini-px.vm-5.3.3 Rebooting Automatically Setting up the reload option Successfully connected to SM service Proceed with the reimage operation of all cards? [y/n] Sending Request To Shelf Manager to Get Chassis Summary Rack SerialNumber HW State SW State |----------- Chassis Summary Start -----------| 0 FOX1846G8P3 |----------- Chassis Summary End -----------| Rack number is 0 Sending rack rel request to SM 0/0/ADMIN0:Feb 19 04:01:53.416 EST: cm[3688]: %ROUTING-TOPO-5-PROCESS_UPDATE : Got process update: Card shutdown. RP/0/RP0/CPU0:Feb 19 04:01:55.524 EST: kim[322]: %INFRA-KIM-6-LOG_INFO : XR statistics will be pushed into the Linux kernel at 1 second intervals 0/0/ADMIN0:Feb 19 04:02:03.001 EST: vm_manager[3753]: %INFRA-VM_MANAGER-4-INFO : Info: vm_manager brought down VM default-sdr--1 0/RP0/ADMIN0:Feb 19 04:02:08.042 EST: cm[4096]: %ROUTING-TOPO-5-PROCESS_UPDATE : Got process update: Card shutdown. Successfully reset all the cards Disconnected from SM service. Exiting from tool.... Reload to boot IOS XR 32 Bit image. *** IMPORTANT *** Please back up your admin and XR configurations before reloading. sysadmin-vm:0_RP0# Preparing system for backup. This may take a few minutes especially for large configurations. Status report: node0_RP0_CPU0: BACKUP INPROGRESS Status report: node0_RP0_CPU0: BACKUP HAS COMPLETED SUCCESSFULLY [Done] RP/0/RP0/CPU0:Feb 19 04:02:12.866 EST: processmgr[51]: %MGBL-SCONBKUP-6-INTERNAL_INFO : Reload debug script successfully spawned Stopping Stopping OpenBSD Secure Shell server: sshdinitctl: Unknown instance: Stopping system message bus: dbus. Stopping random number generator daemon. Stopping system log daemon...0 Stopping kernel log daemon...0 Stopping internet superserver: xinetd. Stopping crond: OK Stopping rpcbind daemon... done. Stopping S.M.A.R.T. daemon: smartd. Stopping Lighttpd Web Server: stopped /usr/sbin/lighttpd (pid 3995) lighttpd. Stopping libvirtd daemon: [ OK ] Deconfiguring network interfaces... done. Sending all processes the KILL signal... Tue Feb 19 09:02:56 UTC 2019: halt -w Tue Feb 19 09:02:56 UTC 2019: Reboot Mode: 0, Hushd mode: 4, IPU: 21 Tue Feb 19 09:02:59 U魷Booting Main Processor Transferring Console \u0026lt;-snip-\u0026gt; eXR upgrade(install add) # RP/0/RP0/CPU0:ios#show install active summary Sun Aug 18 05:06:54.749 UTC Active Packages: 1 asr9k-xr-6.4.2 version=6.4.2 [Boot image] RP/0/RP0/CPU0:ios# RP/0/RP0/CPU0:ios#install add source tftp://10.75.49.254/IOX653/ 653.tar Sun Aug 18 05:25:07.243 UTC Aug 18 05:25:08 Install operation 1 started by cisco: install add source tftp://10.75.49.254/IOX653/ 653.tar Aug 18 05:25:11 Install operation will continue in the background RP/0/RP0/CPU0:ios# RP/0/RP0/CPU0:ios#show install request Sun Aug 18 05:25:16.016 UTC The install add operation 1 is 30% complete RP/0/RP0/CPU0:ios#RP/0/RP0/CPU0:Aug 18 05:59:18.086 UTC: sdr_instmgr[1163]: %INSTALL-INSTMGR-2-OPERATION_SUCCESS : Install operation 1 finished successfully Aug 18 05:59:19 Install operation 1 finished successfully RP/0/RP0/CPU0:ios# RP/0/RP0/CPU0:ios#install activate id 1 Sun Aug 18 06:02:31.294 UTC Aug 18 06:02:32 Install operation 3 started by cisco: install activate id 1 Aug 18 06:02:32 Package list: Aug 18 06:02:32 asr9k-ospf-x64-1.0.0.0-r653.x86_64 Aug 18 06:02:32 asr9k-mpls-te-rsvp-x64-2.1.0.0-r653.x86_64 Aug 18 06:02:32 asr9k-mcast-x64-2.0.0.0-r653.x86_64 Aug 18 06:02:32 asr9k-mgbl-x64-2.0.0.0-r653.x86_64 Aug 18 06:02:32 asr9k-k9sec-x64-2.1.0.0-r653.x86_64 Aug 18 06:02:32 asr9k-mpls-x64-2.0.0.0-r653.x86_64 Aug 18 06:02:32 asr9k-optic-x64-1.0.0.0-r653.x86_64 Aug 18 06:02:32 asr9k-eigrp-x64-1.0.0.0-r653.x86_64 Aug 18 06:02:32 asr9k-mini-x64-6.5.3 Aug 18 06:02:32 asr9k-li-x64-1.1.0.0-r653.x86_64 Aug 18 06:02:32 asr9k-bng-x64-1.0.0.0-r653.x86_64 Aug 18 06:02:33 asr9k-9000v-nV-x64-1.0.0.0-r653.x86_64 Aug 18 06:02:33 asr9k-m2m-x64-2.0.0.0-r653.x86_64 Aug 18 06:02:33 asr9k-isis-x64-1.1.0.0-r653.x86_64 This install operation will reload the system, continue? [yes/no]:[yes] yes Aug 18 06:03:18 Install operation will continue in the background RP/0/RP0/CPU0:ios# RP/0/RP0/CPU0:ios# RP/0/RP0/CPU0:ios#RP/0/RP0/CPU0:Aug 18 06:34:19.659 UTC: sdr_instmgr[1163]: %INSTALL-INSTMGR-2-OPERATION_SUCCESS : Install operation 3 finished successfully Aug 18 06:34:21 Install operation 3 finished successfully Reference # System Setup and Software Installation Guide for Cisco ASR 9000 Series Routers, IOS XR Release 6.5.x\nMigration Guide for Cisco ASR 9000 Series Routers\nNCS55 Software install guide # Boot Router By Use USB # USB File system: FAT32\nBefore 6.5.2, it will hit bug CSCvm77427, cannot found the USB boot option from BIOS Menu，So we can use below procedure.\nDownload “ncs5500-usb_boot-6.x.x.zip” and unzip it\nInsert RP, connect console, Enter ESC into boot selection.\nThen follow below steps, boot RP.\nReference-NCS55 # NCS5500 RP-E Bring Up Procedure\nNCS6K Software install guide # Boot Router By Use USB # USB File system: FAT32\nRecommend software: Xshell (similar with SecureCRT)\nUse “System Admin VM console port”.\nReload chassis and press F12 to go to Boot Manager\nsysadmin-vm:0_RP0# sysadmin-vm:0_RP0# reload location 0/RP0 all Cisco BIOS version : SB.Panini.0014.08 BIOS Build Date : 05/03/2016 by lchinnad System Memory Speed : 1600 MHz Processor Type : Intel(R) Xeon(R) CPU E5-2448L @ 1.80GHz Press F12 to goto Boot Manager.. ","date":"4 October 2019","externalUrl":null,"permalink":"/blog/cxr-exr-install-guide/","section":"Blog","summary":"ASR9000 Software install guide # cXR upgrade # Reload router then Ctrl+C enter into rommon, or modify resister:","title":"Cisco cXR and eXR Software install guide","type":"blog"},{"content":" BNG Broadband Network Gateway 意思为用户的接入点，通过它们连接到宽带网络，“它们”指的是网络设备，例如思科的 ASR9K 。\n本文主要是为了记录下两种最简单的在 ASR 9000 上部署 BNG 的配置，IPOE 和 PPPoE.\nIPoE # pool vrf default ipv4 IPSUB network 70.70.0.0/16 exclude 70.70.70.70 0.0.0.0 ! dhcp ipv4 profile IPSUB server pool IPSUB default-router 70.70.70.70 ! interface Bundle-Ether70.70 server profile IPSUB dynamic-template type ipsubscriber IPSUB ipv4 unnumbered Loopback70 ipv4 access-group IPSUB ingress ipv4 access-group IPSUB egress ! ipv4 access-list IPSUB 5 permit ipv4 any any interface Bundle-Ether70.70 ipv4 point-to-point ipv4 unnumbered Loopback70 service-policy type control subscriber POL_IPSUB encapsulation dot1q 70 ipsubscriber ipv4 l2-connected initiator dhcp ! class-map type control subscriber match-any CLASS_IPSUB match protocol dhcpv4 end-class-map ! policy-map type control subscriber POL_IPSUB event session-start match-first class type control subscriber CLASS_IPSUB do-until-failure 1 activate dynamic-template IPSUB ! ! end-policy-map ! PPPoE # pool vrf default ipv4 PPP address-range 50.50.0.1 50.50.255.255 ! dynamic-template type ppp PPPoE ppp ipcp peer-address pool PPP ipv4 unnumbered Loopback50 ! interface Bundle-Ether70 ! interface Bundle-Ether70.50 service-policy type control subscriber POL_PPP pppoe enable encapsulation dot1q 50 ! class-map type control subscriber match-any PPP match protocol ppp end-class-map ! ! policy-map type control subscriber POL_PPP event session-start match-first class type control subscriber PPP do-until-failure 10 activate dynamic-template PPPoE ! ! end-policy-map ! ","date":"4 October 2019","externalUrl":null,"permalink":"/blog/asr9000-bng-simple-configuration/","section":"Blog","summary":"BNG Broadband Network Gateway 意思为用户的接入点，通过它们连接到宽带网络，“它们”指的是网络设备，例如思科的 ASR9K 。","title":"ASR9000 BNG simple configuration","type":"blog"},{"content":"可能在平常登陆 asr9000 的时候遇到这样的问题，telnet/ssh 等都无法登陆到设备，或者说主引擎的 console 没任何输出，无法查看设备的信息，这个时候除了重启引擎外，还有一个方法就是通过 AUX 接口登陆到设备，然后收集信息，本问介绍一下有哪些常见的 aux 模式下的命令。\n如何进入 AUX 模式 # 如上图所示，引擎前面板上是有一个 console 和一个 aux 接口的，我们可以通过将 console 线切换到 aux 接口上，连接设备，除此之外还有一种方式：\n//连到console接口，打开crt界面，然后按住Esc，输入ksh，如下 *** Initiate debug session *** Username: cisco Password: # # # 常见的 kshell CLI # show 相关 # show version show_version show redundancy redcon_show show platform show_platform show install active summary instcmd show install active summary show logging show_logging show process blocked show_processes -b show process tacacsd location all sysmgr_show -o -p tacacsd –n all (similary for any other process) show tacacs trace tacacs_show_ltrace ( similarly for for other processes ) Process 相关 # Follow process \u0026lt;tacacsd pid\u0026gt; attach_process -p \u0026lt;pid\u0026gt; -A -i 2 –S generate a coredump : dumpcore running tacacsd dumper_gen -o running -p tacacsd restart blocked process : process restart tacacsd location all sysmgr_control -r tacacsd –n all 如何获取更多的 kshell 命令 # 除了上面描述常见的 show 命令外，往往我们还需要其它的诊断信息，下面介绍一种方法去获取更多的 kshell 命令：（descripe）我们可以先登陆一台工作正常的机器使用 describe +cli 生成 kshell 命令,如下所示：\n** RP/0/RSP0/CPU0:ASR9006-L#describe show controllers np counters all location 0/0/CPU0 ** The command is defined in prm_server.parser Node 0/RSP0/CPU0 has file prm_server.parser for boot package /disk0/asr9k-os-mbi-6.3.3/0x100305/mbiasr9k-rsp3.vm from asr9k-fwding Package: asr9k-fwding asr9k-fwding V6.3.3[Default] asr9k fwding package Vendor : Cisco Systems Desc : asr9k fwding package Build : Built on Tue Aug 28 21:53:30 UTC 2018 Source : By iox-lnx-009 in /auto/srcarchive16/prod/6.3.3/asr9k-px/ws for pie Card(s): RP, CRS-RP-X86, CRS8-RP-x86, CRS16-RP-x86, ASR9K-RP2-x86, ASR9001-RP, ASR9K-RSP4L-x86, NP40-40x1GE, NP40-4x10GE, NP40-8x10GE, NP40-2_20_COMBO, NP80-8x10GE, NP80-16x10GE, NP200-24x10GE, NP200-36x10GE, NP200-2x100GE, NP200-1x100GE, NP200-5x40GE, NP200-MOD-SMEM, NP200-MOD-LMEM, NP200-WILDCHILD, ASR9001-LC, A9K-SIP-700, A9K-SIP-500, A9K-SIP-AVSM, A9K-TOMAHAWK, A9K-FORGE Restart information: Default: parallel (by default) impacted processes restart Size Compressed/Uncompressed: 71MB/289MB (24%) Component: asr9k-prm.x86e V[r63x/105] The Primitive Resource Managers provide an interface to the network processor(s) and TCAM(s) of the ASR9K line card. This level of software additionally brings in and initializes/configures the third party NP/TCAM device drivers. File: prm_server.parser Card(s) : CRS-RP-X86, CRS8-RP-x86, CRS16-RP-x86, ASR9K-RP2-x86, ASR9K-RSP4L-x86 File type : Default Remotely-hosted : No Local view : /pkg/parser/prm_server.parser Local install path : /disk0/asr9k-fwding-6.3.3/0x100305/parser/prm_server.parser (Compressed) Central install path : /disk0/asr9k-fwding-6.3.3/0x100305/parser/prm_server.parser (Compressed) Uncompressed size : 187KB Compressed size : 63KB Uncompressed MD5 : 95bcb828a3aaed27093cc5b18e979ec6 Compressed MD5 : e6ddbe2180b2238e3b9234ea81ba0ae0 User needs ALL of the following taskids: sonet-sdh (READ) or dwdm (READ) or interface (READ) drivers (READ) It will take the following actions: Mon Dec 29 04:14:17.484 UTC Spawn the process: prm_np_show counters -s 2081 \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; ","date":"4 October 2019","externalUrl":null,"permalink":"/blog/use-aux-ts/","section":"Blog","summary":"可能在平常登陆 asr9000 的时候遇到这样的问题，telnet/ssh 等都无法登陆到设备，或者说主引擎的 console 没任何输出，无法查看设备的信息，这个时候除了重启引擎外，还有一个方法就是通过 AUX 接口登陆到设备，然后收集信息，本问介绍一下有哪些常见的 aux 模式下的命令。","title":"ASR9000通过AUX接口进行troubeshooting","type":"blog"},{"content":"遇到一个这样的需求，想使用 SNMP 的方式去 copy 设备的配置到 TFTP server。查了点资料发现真存在这种方式，虽然感觉这种功能很鸡肋，但还是记录以下以备查询。\nSnmpwalk/snmpset # Snmpwalk 是一个很好用的小工具，平常查 OID 值的时候经常会遇到，Centos 的话直接用 yum 进行安装就行了。\nyum -y install net-snmp net-snmp-utils snmpwalk -v 2c -c cisco 10.75.49.13 1.3.6.1.2.1.1.3.0 SNMP copy 配置这个功能使用的是 CISCO-CONFIG-COPY-MIB，目前在大部分的 IOS / IOS XR 上看起来都是支持的，且需要 rw 权限。\nMIB Object NameMIB Object NameValues used in the exampleccCopyEntryRowStatus1.3.6.1.4.1.9.9.96.1.1.1.1.141:active\n2:notInService\n3:notReady\n4:createAndGo\n5:createAndWait\n6:destroyccCopyProtocol1.3.6.1.4.1.9.9.96.1.1.1.1.21:tftp\n2:ftp\n3:rcp\n4:scp\n5:sftpccCopySourceFileType1.3.6.1.4.1.9.9.96.1.1.1.1.31.networkFile\n2.iosFile\n3.startupConfig\n4.runningConfig\n5.terminalccCopyDestFileType1.3.6.1.4.1.9.9.96.1.1.1.1.41.networkFile\n2.iosFile\n3.startupConfig\n4.runningConfig\n5.terminalccCopyServerAddress1.3.6.1.4.1.9.9.96.1.1.1.1.5ccCopyFileName1.3.6.1.4.1.9.9.96.1.1.1.1.6ccCopyState1.3.6.1.4.1.9.9.96.1.1.1.1.101:waiting\n2:running\n3:successful\n4:failed 配置 CISCO 设备 # RP/0/RSP0/CPU0:CORE4-ASR9010-A#show run snmp-server snmp-server community public RW Copy cfg from IOS XR router to tftp # * Create an Entry and Wait(777 is a random session number): snmpset -v2c -c public 10.75.49.9 .1.3.6.1.4.1.9.9.96.1.1.1.1.14.777 i 5 * Set Copy protocol to tftp snmpset -v2c -c public 10.75.49.9 .1.3.6.1.4.1.9.9.96.1.1.1.1.2.777 i 1 * Set copy to tftp server snmpset -v2c -c public 10.75.49.9 .1.3.6.1.4.1.9.9.96.1.1.1.1.3.777 i 4 * Set copy from config snmpset -v2c -c public 10.75.49.9 .1.3.6.1.4.1.9.9.96.1.1.1.1.4.777 i 1 * Set tftp server address snmpset -v2c -c public 10.75.49.9 .1.3.6.1.4.1.9.9.96.1.1.1.1.5.777 a 10.75.49.254 * Set destination file name snmpset -v2c -c public 10.75.49.9 .1.3.6.1.4.1.9.9.96.1.1.1.1.6.777 s xuxingtest * Activate the entry snmpset -v2c -c public 10.75.49.9 .1.3.6.1.4.1.9.9.96.1.1.1.1.14.777 i 1 * Once successful, destroy the entry snmpset -v2c -c public 10.75.49.9 .1.3.6.1.4.1.9.9.96.1.1.1.1.14.777 i 6 Copy cfg to tftp server Example # [root@xuxing ~]# snmpset -v2c -c public 10.75.49.9 .1.3.6.1.4.1.9.9.96.1.1.1.1.14.777 i 5 SNMPv2-SMI::enterprises.9.9.96.1.1.1.1.14.777 = INTEGER: 5 [root@xuxing ~]# snmpset -v2c -c public 10.75.49.9 .1.3.6.1.4.1.9.9.96.1.1.1.1.2.777 i 1 SNMPv2-SMI::enterprises.9.9.96.1.1.1.1.2.777 = INTEGER: 1 [root@xuxing ~]# snmpset -v2c -c public 10.75.49.9 .1.3.6.1.4.1.9.9.96.1.1.1.1.3.777 i 4 SNMPv2-SMI::enterprises.9.9.96.1.1.1.1.3.777 = INTEGER: 4 [root@xuxing ~]# snmpset -v2c -c public 10.75.49.9 .1.3.6.1.4.1.9.9.96.1.1.1.1.4.777 i 1 SNMPv2-SMI::enterprises.9.9.96.1.1.1.1.4.777 = INTEGER: 1 [root@xuxing ~]# snmpset -v2c -c public 10.75.49.9 .1.3.6.1.4.1.9.9.96.1.1.1.1.5.777 a 10.75.49.254 SNMPv2-SMI::enterprises.9.9.96.1.1.1.1.5.777 = IpAddress: 10.75.49.254 [root@xuxing ~]# snmpset -v2c -c public 10.75.49.9 .1.3.6.1.4.1.9.9.96.1.1.1.1.6.777 s xuxingtest SNMPv2-SMI::enterprises.9.9.96.1.1.1.1.6.777 = STRING: \u0026#34;xuxingtest\u0026#34; [root@xuxing ~]# snmpset -v2c -c public 10.75.49.9 .1.3.6.1.4.1.9.9.96.1.1.1.1.14.777 i 1 SNMPv2-SMI::enterprises.9.9.96.1.1.1.1.14.777 = INTEGER: 1 [root@xuxing ~]# snmpset -v2c -c public 10.75.49.9 .1.3.6.1.4.1.9.9.96.1.1.1.1.14.777 i 6 SNMPv2-SMI::enterprises.9.9.96.1.1.1.1.14.777 = INTEGER: 6 Verify log from router： # login device you will see below syslog:\nRP/0/RSP0/CPU0:Dec 10 13:39:34.876 : syslog_dev[95]: mibd_infra[338] PID-13783439: Building configuration. RP/0/RSP0/CPU0:Dec 10 13:39:34.876 : syslog_dev[95]: mibd_infra[338] PID-13783439: RP/0/RSP0/CPU0:Dec 10 13:39:34.876 : syslog_dev[95]: mibd_infra[338] PID-13783439: 2325 lines built in 1 second RP/0/RSP0/CPU0:Dec 10 13:39:34.876 : syslog_dev[95]: mibd_infra[338] PID-13783439: [OK 如果是 copy 的目的地是 ftp server， 你还可以从 IOS XR 设备上看到如下的 ftp trace:\nRP/0/RSP0/CPU0:ios#show ftp client trace | in open Wed Aug 2 08:34:22.141 GMT Aug 2 08:01:00.923 ftp_fs/events 0/RSP0/CPU0 t4 [FTP:(0x12021c8c):ftp_data] opening data connection Aug 2 08:01:06.329 ftp_fs/events 0/RSP0/CPU0 t4 [FTP:(557392):ftp_open] connect flag 802 mode 1 Aug 2 08:01:06.329 ftp_fs/events 0/RSP0/CPU0 t4 [FTP:ftp_open_display_path] execute open (guest:*@10.70.79.197;default/10.124.50.38_20230801103013 , 1) Aug 2 08:01:06.329 ftp_fs/events 0/RSP0/CPU0 t4 [FTP:(0x12021c8c):ftp_open_common] allocated ocb Aug 2 08:01:06.329 ftp_fs/events 0/RSP0/CPU0 t4 [FTP:(0x12021c8c):ftp_start] opening control connection localvrf default 当然你也可以看到相关 MIB 的访问时间:\nRP/0/RSP0/CPU0:ASR9006-1#show snmp mib access time | in 1.3.6.1.4.1.9.9.96.1.1.1.1. Wed Aug 2 08:36:26.167 GMT 1.3.6.1.4.1.9.9.96.1.1.1.1.2 08/02 08:36:20 0 SET 1.3.6.1.4.1.9.9.96.1.1.1.1.3 08/02 08:36:20 0 SET 1.3.6.1.4.1.9.9.96.1.1.1.1.4 08/02 08:36:20 0 SET 1.3.6.1.4.1.9.9.96.1.1.1.1.5 08/02 08:36:20 0 SET 1.3.6.1.4.1.9.9.96.1.1.1.1.6 08/02 08:36:20 0 SET 1.3.6.1.4.1.9.9.96.1.1.1.1.7 08/02 08:36:20 0 SET 1.3.6.1.4.1.9.9.96.1.1.1.1.8 08/02 08:36:20 0 SET 1.3.6.1.4.1.9.9.96.1.1.1.1.10 08/02 08:36:26 08/02 08:36:26 0 NEXT 1.3.6.1.4.1.9.9.96.1.1.1.1.11 08/02 08:35:21 0 NEXT 1.3.6.1.4.1.9.9.96.1.1.1.1.14 08/02 08:36:20 0 SET Copy cfg from IOS XR router to ftp # 这里我们写了一个 copy 配置到 ftp 的脚本:\n使用的方法很简单， 事例“./snmpcp2ftp.sh cisco 10.x.x.x 1 user pass 10.x.x.x“\n#!/bin/bash # 检查是否提供了正确的参数 if [ $# -ne 6 ]; then echo \u0026#34;使用方法: $0 COMMUNITY IP_ADDR NUM_OF_EXECUTIONS USERNAME PASSWORD SERVER_IP\u0026#34; exit 1 fi COMMUNITY=$1 IP_ADDR=$2 NUM_OF_EXECUTIONS=$3 USERNAME=$4 PASSWORD=$5 SERVER_IP=$6 # 定义函数用于等待snmpwalk输出为3 wait_for_snmpwalk() { while true; do result=$(snmpwalk -v2c -c \u0026#34;$COMMUNITY\u0026#34; \u0026#34;$IP_ADDR\u0026#34; .1.3.6.1.4.1.9.9.96.1.1.1.1.10.$RANDOM_NUMBER | grep \u0026#34;INTEGER: 3\u0026#34;) if [ -n \u0026#34;$result\u0026#34; ]; then break else sleep 2 fi done } # 循环执行脚本，并输出执行次数 for ((i = 1; i \u0026lt;= $NUM_OF_EXECUTIONS; i++)); do echo \u0026#34;第 $i 次执行完毕\u0026#34; # 生成一个新的随机数，作为每次执行的常量 RANDOM_NUMBER=$RANDOM # 获取当前时间戳 CURRENT_TIME=$(date +\u0026#34;%Y%m%d%H%M%S\u0026#34;) # 拼接新的字符串，形如 \u0026#34;IP_ADDR_时间\u0026#34; NEW_VALUE=\u0026#34;$IP_ADDR\u0026#34;_\u0026#34;$CURRENT_TIME\u0026#34; # 执行脚本中的命令，并使用传递的参数、随机数和新的字符串 snmpset -v2c -c \u0026#34;$COMMUNITY\u0026#34; \u0026#34;$IP_ADDR\u0026#34; .1.3.6.1.4.1.9.9.96.1.1.1.1.14.$RANDOM_NUMBER i 5 snmpset -v2c -c \u0026#34;$COMMUNITY\u0026#34; \u0026#34;$IP_ADDR\u0026#34; .1.3.6.1.4.1.9.9.96.1.1.1.1.2.$RANDOM_NUMBER i 2 snmpset -v2c -c \u0026#34;$COMMUNITY\u0026#34; \u0026#34;$IP_ADDR\u0026#34; .1.3.6.1.4.1.9.9.96.1.1.1.1.3.$RANDOM_NUMBER i 4 snmpset -v2c -c \u0026#34;$COMMUNITY\u0026#34; \u0026#34;$IP_ADDR\u0026#34; .1.3.6.1.4.1.9.9.96.1.1.1.1.4.$RANDOM_NUMBER i 1 snmpset -v2c -c \u0026#34;$COMMUNITY\u0026#34; \u0026#34;$IP_ADDR\u0026#34; .1.3.6.1.4.1.9.9.96.1.1.1.1.5.$RANDOM_NUMBER a \u0026#34;$SERVER_IP\u0026#34; snmpset -v2c -c \u0026#34;$COMMUNITY\u0026#34; \u0026#34;$IP_ADDR\u0026#34; .1.3.6.1.4.1.9.9.96.1.1.1.1.6.$RANDOM_NUMBER s \u0026#34;$NEW_VALUE\u0026#34; snmpset -v2c -c \u0026#34;$COMMUNITY\u0026#34; \u0026#34;$IP_ADDR\u0026#34; .1.3.6.1.4.1.9.9.96.1.1.1.1.7.$RANDOM_NUMBER s \u0026#34;$USERNAME\u0026#34; snmpset -v2c -c \u0026#34;$COMMUNITY\u0026#34; \u0026#34;$IP_ADDR\u0026#34; .1.3.6.1.4.1.9.9.96.1.1.1.1.8.$RANDOM_NUMBER s \u0026#34;$PASSWORD\u0026#34; snmpset -v2c -c \u0026#34;$COMMUNITY\u0026#34; \u0026#34;$IP_ADDR\u0026#34; .1.3.6.1.4.1.9.9.96.1.1.1.1.14.$RANDOM_NUMBER i 1 wait_for_snmpwalk # 销毁session snmpset -v2c -c \u0026#34;$COMMUNITY\u0026#34; \u0026#34;$IP_ADDR\u0026#34; .1.3.6.1.4.1.9.9.96.1.1.1.1.14.$RANDOM_NUMBER i 6 done Copy file from server to router # tftp to router # snmpset -v2c -c cisco 10.2.163.17 1.3.6.1.4.1.9.9.96.1.1.1.1.14.777 i 5 snmpset -v2c -c cisco 10.2.163.17 1.3.6.1.4.1.9.9.96.1.1.1.1.2.777 i 1 snmpset -v2c -c cisco 10.2.163.17 1.3.6.1.4.1.9.9.96.1.1.1.1.3.777 i 1 snmpset -v2c -c cisco 10.2.163.17 1.3.6.1.4.1.9.9.96.1.1.1.1.4.777 i 4 snmpset -v2c -c cisco 10.2.163.17 1.3.6.1.4.1.9.9.96.1.1.1.1.5.777 a 10.7.7.19 snmpset -v2c -c cisco 10.2.163.17 1.3.6.1.4.1.9.9.96.1.1.1.1.6.777 s cfg snmpset -v2c -c cisco 10.2.163.17 1.3.6.1.4.1.9.9.96.1.1.1.1.14.777 i 1 snmpset -v2c -c cisco 10.2.163.17 1.3.6.1.4.1.9.9.96.1.1.1.1.14.777 i 6 ftp to router # snmpset -v2c -c cisco 10.2.163.17 1.3.6.1.4.1.9.9.96.1.1.1.1.14.777 i 5 snmpset -v2c -c cisco 10.2.163.17 1.3.6.1.4.1.9.9.96.1.1.1.1.2.777 i 2 snmpset -v2c -c cisco 10.2.163.17 1.3.6.1.4.1.9.9.96.1.1.1.1.3.777 i 1 snmpset -v2c -c cisco 10.2.163.17 1.3.6.1.4.1.9.9.96.1.1.1.1.4.777 i 4 snmpset -v2c -c cisco 10.2.163.17 1.3.6.1.4.1.9.9.96.1.1.1.1.5.777 a 10.7.7.19 snmpset -v2c -c cisco 10.2.163.17 1.3.6.1.4.1.9.9.96.1.1.1.1.6.777 s cfg snmpset -v2c -c cisco 10.2.163.17 1.3.6.1.4.1.9.9.96.1.1.1.1.7.777 s guest snmpset -v2c -c cisco 10.2.163.17 1.3.6.1.4.1.9.9.96.1.1.1.1.8.777 s guest snmpset -v2c -c cisco 10.2.163.17 1.3.6.1.4.1.9.9.96.1.1.1.1.14.777 i 1 snmpset -v2c -c cisco 10.2.163.17 1.3.6.1.4.1.9.9.96.1.1.1.1.14.777 i 6 ","date":"4 October 2019","externalUrl":null,"permalink":"/blog/copy-cfg-through-snmp/","section":"Blog","summary":"遇到一个这样的需求，想使用 SNMP 的方式去 copy 设备的配置到 TFTP server。查了点资料发现真存在这种方式，虽然感觉这种功能很鸡肋，但还是记录以下以备查询。","title":"CISCO XR copy configuration to or from TFTP by SNMP","type":"blog"},{"content":"This article will introduction how copy file between windows and linux , and how copy file from linux to linux.\nCopy file between windows and linux # Use xshell and lrzsz. Centos install lrzsz # yum -y install lrzsz\nCopy file to linux \u0026gt; rz Copy file to windows \u0026gt; sz FILE Copy file between linux and linux # scp LOCAL_FILE root@x.x.x.x: ","date":"4 October 2019","externalUrl":null,"permalink":"/blog/copy-file-between-win-and-linux/","section":"Blog","summary":"This article will introduction how copy file between windows and linux , and how copy file from linux to linux.","title":"Copy file between windows and linux","type":"blog"},{"content":"This artical will introduction how to recover password in eXR system, Like ASR9000,NCS6008. You can reference below comment.\nFor ASR9000, you need connect to the AUX port;\nFor NCS6008, you can connect to the sysadmin vm port.\nRecover steps # First you will see below output, use cisco/cisco login, as AUX and sysadmin port will skip AAA.\nSystem Admin Username: cisco Password: sysadmin-vm:0_RP0# sysadmin-vm:0_RP0# show VM Tue Jun 4 18:46:44.342 UTC Location: 0/RP0 Id Status IP Address HB Sent/Recv ------------------------------------------------------------- sysadmin running 192.0.0.1 NA/NA default-sdr running 192.0.0.4 1733/1733 \u0026lt;\u0026lt;\u0026lt;\u0026lt; XR vm linux kernel sysadmin-vm:0_RP0# run [sysadmin-vm:0_RP0:~]$chvrf 0 bash \u0026lt;\u0026lt;\u0026lt; must be exec this command [sysadmin-vm:0_RP0:~]$ssh 192.0.0.4 [xr-vm_node0_RP0_CPU0:~]$ [xr-vm_node0_RP0_CPU0:~]$ [xr-vm_node0_RP0_CPU0:~]$ [xr-vm_node0_RP0_CPU0:~]$config \u0026lt;\u0026lt;\u0026lt;\u0026lt; RP/0/RP0/CPU0:NCS6008-A(config)# RP/0/RP0/CPU0:NCS6008-A(config)# \u0026lt;\u0026lt;\u0026lt; Then you can modify the configuration ","date":"4 October 2019","externalUrl":null,"permalink":"/blog/exr-password-recover/","section":"Blog","summary":"This artical will introduction how to recover password in eXR system, Like ASR9000,NCS6008.","title":"eXR password recover(asr9000/ncs6k)","type":"blog"},{"content":" This article will introduction how to copy file beteew sysadmin-vm/xr-vm/host at IOS XR 64bit system.\nFirst of all, we need to know how to access these 3 modules.\nXR-VM # Login one device by using telnet, you can use command \u0026ldquo;dir\u0026rdquo; to check what file are stored in this media.\nUser Access Verification Username: xuxing Password: RP/0/RSP0/CPU0:9904-E_eXR# RP/0/RSP0/CPU0:9904-E_eXR# RP/0/RSP0/CPU0:9904-E_eXR#dir harddisk: You can use below two method to access XR-vm linux kernel, and you will see the same file stored at /harddisk:/.\nOption 1： RP/0/RSP0/CPU0:9904-E_eXR# RP/0/RSP0/CPU0:9904-E_eXR#run Mon Jul 1 03:54:17.751 CDT [xr-vm_node0_RSP0_CPU0:~]$ [xr-vm_node0_RSP0_CPU0:~]$ Option 2： RP/0/RSP0/CPU0:9904-E_eXR#admin Mon Jul 1 03:53:42.111 CDT xuxing connected from 127.0.0.1 using console on 9904-E_eXR sysadmin-vm:0_RSP0# show VM Mon Jul 1 08:53:45.847 UTC Location: 0/RSP0 Id Status IP Address HB Sent/Recv ------------------------------------------------------------- sysadmin running 192.0.4.1 NA/NA default-sdr running 192.0.4.4 470117/470117 \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; This ip address sysadmin-vm:0_RSP0# run Mon Jul 1 08:53:58.970 UTC [sysadmin-vm:0_RSP0:~]$ssh 192.0.4.4 [xr-vm_node0_RSP0_CPU0:~]$ [xr-vm_node0_RSP0_CPU0:~]$dir /harddisk: Sysadmin-VM # You can use below method access sysadmin-vm，and admin vm linux kernel.\nRP/0/RSP0/CPU0:9904-E_eXR#admin Mon Jul 1 04:00:21.764 CDT xuxing connected from 127.0.0.1 using console on 9904-E_eXR sysadmin-vm:0_RSP0# sysadmin-vm:0_RSP0# show VM Mon Jul 1 09:01:15.235 UTC Location: 0/0 Id Status IP Address HB Sent/Recv ------------------------------------------------------------- sysadmin running 192.0.0.1 NA/NA \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; default-sdr running 192.0.0.3 23534/23534 Location: 0/RSP0 Id Status IP Address HB Sent/Recv ------------------------------------------------------------- sysadmin running 192.0.4.1 NA/NA default-sdr running 192.0.4.4 471015/471015 sysadmin-vm:0_RSP0# [sysadmin-vm:0_RSP0:~]$ssh 192.0.0.1 \u0026lt;\u0026lt;\u0026lt; ssh LC sysadmin ip address, you can access lc sysadmin-vm linux kernel. Host # sysadmin-vm:0_RSP0# run Mon Jul 1 09:03:36.526 UTC [sysadmin-vm:0_RSP0:~]$ [sysadmin-vm:0_RSP0:~]$chvrf 0 ssh my_host [host:~]$ [host:~]$ Special for NCS55 (fretta)/NCS6K, use below method to login host VM:\n[sysadmin-vm:0_RP0:~]$chvrf 0 bash [sysadmin-vm:0_RP0:~]$ssh 10.0.2.16 [host:0_RP0:~]$ [host:0_RP0:~]$ to LC host vm , you can also use ip 10.0.2.16, like below from 0/RP0 sysadmin vm to LC0/1 sysadmin vm then to LC1 host vm. [sysadmin-vm:0_RP0:~]$ [sysadmin-vm:0_RP0:~]$ssh 192.0.8.1 Warning: Permanently added \u0026#39;192.0.8.1\u0026#39; (ECDSA) to the list of known hosts. [sysadmin-vm:0_1:~]$ [sysadmin-vm:0_1:~]$ ssh 10.0.2.16 [host:0_LC1:~]$ [host:0_LC1:~]$ Some router it may not be 10.0.2.16, you can check the arp cache to confirm what Host IP should be used.\nFor example:\n[sysadmin-vm:0_RP0:~]$chvrf 0 bash [sysadmin-vm:0_RP0:~]$ [sysadmin-vm:0_RP0:~]$arp -a ? (192.0.72.1) at ac:f2:c5:f5:66:1b [ether] on eth-vf1.3073 ? (10.0.2.2) at 2e:b2:be:b1:e2:b9 [ether] on eth0 \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; ? (192.0.64.1) at e4:c7:22:84:ef:a8 [ether] on eth-vf1.3073 ? (192.0.92.1) at 80:e0:1d:af:b9:bd [ether] on eth-vf1.3073 ? (192.0.4.1) at 64:f6:9d:b8:46:69 [ether] on eth-vf1.3073 ? (192.0.72.3) at ac:f2:c5:f5:66:1d [ether] on eth-vf1.3073 ? (192.0.64.3) at e4:c7:22:84:ef:aa [ether] on eth-vf1.3073 ? (10.0.2.16) at \u0026lt;incomplete\u0026gt; on eth0 ? (192.0.0.4) at 64:f6:9d:b8:72:5b [ether] on eth-vf1.3073 ? (192.0.4.4) at 64:f6:9d:b8:46:6c [ether] on eth-vf1.3073 ? (192.0.92.3) at 80:e0:1d:af:b9:bf [ether] on eth-vf1.3073 [sysadmin-vm:0_RP0:~]$ssh 10.0.2.2 Last login: Wed Jun 12 06:10:13 2024 from 10.0.2.15 Copy file from sysadmin or host to xr-vm # We can see xr-vm and xr-vm linux kernel will use same file system, so if we can copy file to xr-vm linux kernel, then we can find it at xr-vm.\nRP/0/RSP0/CPU0:9904-E_eXR#admin sysadmin-vm:0_RSP0# [sysadmin-vm:0_RSP0:~]$chvrf 0 ssh my_host [host:~]$ [host:~]$ cd /var/ [host:/var]$ cd log/ [host:/var/log]$ tar zcvf test.tar * \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; tar all file and named test.tar [host:/var/log]$ ls -l test.tar -rw-r--r-- 1 root root 28656788 Jul 1 08:23 test.tar [host:/var/log]$ [sysadmin-vm:0_RSP0:~]$sftp my_host sftp\u0026gt; cd /var/log sftp\u0026gt; get test.tar Fetching /var/log/test.tar to test.tar /var/log/test.tar 0% 0 0.0KB/s --:-- ETA /var/log/test.tar 100% 27MB 27.3MB/s 00:00 sftp\u0026gt; sftp\u0026gt; sftp\u0026gt; exit sftp\u0026gt; exit [sysadmin-vm:0_RSP0:~]$ls asr9k_idprom_dump default-sdr--1.20190626-204550.core.host.0_0.kdump lost+found test.tar tmp_staging cisco_support dumper showtech tftpboot Or use below method:\nRP/0/RSP0/CPU0:9904-E_eXR#admin Mon Jul 1 04:21:27.469 CDT xuxing connected from 127.0.0.1 using console on 9904-E_eXR sysadmin-vm:0_RSP0# copy harddisk:/test.tar location 0/RSP0 harddisk:/test.tar location 0/RSP0/CPU0/VM1 ","date":"4 October 2019","externalUrl":null,"permalink":"/blog/copy-file-between-host-xr/","section":"Blog","summary":"This article will introduction how to copy file beteew sysadmin-vm/xr-vm/host at IOS XR 64bit system.","title":"How to copy file from sysadmin or HOST to xr-vm in IOX 64bit system","type":"blog"},{"content":"思科的 IOS XE 系统搞的比较少，就遇到两次升级的案例，做个小抄记录下升级步骤。\n升级 IOS XE 软件 # ## 拷贝系统文件 ASR1006#copy ftp://10.75.49.254/ASR1K/asr1000rpx86-universalk9.16.07.01.SPA.bin bootflash: Destination filename [asr1000rpx86-universalk9.16.07.01.SPA.bin]? Accessing tftp://10.75.49.254/ASR1K/asr1000rpx86-universalk9.16.07.01.SPA.bin... ## 更改Boot选项 ASR1006(config)#no boot system ASR1006(config)#boot system bootflash:asr1000rpx86-universalk9.16.07.01.SPA.bin ASR1006#reload ## Reload ASR1006#reload System configuration has been modified. Save? [yes/no]: yes Building configuration... [OK] 升级 standby RP(RMA) # Insert standby RP Copy boot image to RMA RP\n# copy bootflash:asr1000rpx86-universalk9.16.09.02.SPA.bin stby-bootflash: Redundancy switchover:\n#redundancy force-switchover 如果 RMA 的引擎无法启动卡再 rommon,请使用以下命令 boot\nrommon 1 \u0026gt; boot usb1:\nCPLD 升级 # https://software.cisco.com/download/home/286308009/type/283425232/release/16.8.1\nCPLD\nF340.26.09-ASR1009-X-1#upgrade hw-programmable CPLD filename botflash:asr1000-hw-programmables.16.08.01.SPA.pkg r1\nStart service Upgrade CPLD on Route-Processor 1 from current version 16082219 to 17042115 (Y)es/(N)o/(C)ontinue? [Y]\nROMMON 升级 # https://software.cisco.com/download/home/286308009/type/282046486/release/16.3(2r)\nF340.26.09-ASR1009-X-1#upgrade rom-monitor filename bootflash:asr1000-rommon.163-2r.pkg r1 Platform is ASR. Verifying the code signature of the ROMMON package... Upgrade rom-monitor on Route-Processor 1 Target copying rom-monitor image file File size : //tmp/rommon_upgrade/latest.bin File size is : 7995392 FIPS File size is : 7995392 ROMMON Image Type : X86 File /tmp/rommon_upgrade/latest.bin is a FIPS ROMMON image 131072+0 records in 131072+0 records out 131072 bytes (131 kB, 128 KiB) copied, 0.396487 s, 331 kB/s 131072+0 records in 131072+0 records out 131072 bytes (131 kB, 128 KiB) copied, 0.404461 s, 324 kB/s Checking upgrade image... 7995392+0 records in 15616+0 records out 7995392 bytes (8.0 MB, 7.6 MiB) copied, 4.31173 s, 1.9 MB/s Upgrade image MD5 signature is 1d6f0b837d06cecf1777a459203f2c24 Burning upgrade partition... 7995392+0 records in 7995392+0 records out 7995392 bytes (8.0 MB, 7.6 MiB) copied, 148.807 s, 53.7 kB/s Checking upgrade partition... 7995392+0 records in 7995392+0 records out 7995392 bytes (8.0 MB, 7.6 MiB) copied, 18.8892 s, 423 kB/s Copying ROMMON environment 131072+0 records in 131072+0 records out 131072 bytes (131 kB, 128 KiB) copied, 2.4187 s, 54.2 kB/s 131072+0 records in 131072+0 records out 131072 bytes (131 kB, 128 KiB) copied, 2.43248 s, 53.9 kB/s 131072+0 records in 131072+0 records out 131072 bytes (131 kB, 128 KiB) copied, 2.40029 s, 54.6 kB/s Upgrade flash partition MD5 signature is 1d6f0b837d06cecf1777a459203f2c24 ROMMON upgrade complete. To make the new ROMMON permanent, you must restart the RP. F340.26.09-ASR1009-X-1#hw-module slot R1 reload ","date":"4 October 2019","externalUrl":null,"permalink":"/blog/ios-xe-software-upgrade/","section":"Blog","summary":"思科的 IOS XE 系统搞的比较少，就遇到两次升级的案例，做个小抄记录下升级步骤。","title":"IOS XE software upgrade","type":"blog"},{"content":"在虚拟机中安装 Linux 无法 DHCP 获取地址，搜了点资料设置成功了，记下来好找资料。\n设置静态 ip # vi /etc/network/interfaces # The primary network interface auto eth0 #表示让网卡开机自动挂载eth0 iface eth0 inet static address 192.168.2.1 gateway 192.168.2.254 netmask 255.255.255.0 /etc/init.d/networking restart or service networking restart # Centos** vi /etc/sysconfig/network-scripts/ifcfg-eth0 DEVICE=eth0 BOOTPROTO=none HWADDR=00:0C:29:1D:86:BD NM_CONTROLLED=yes ONBOOT=yes TYPE=Ethernet UUID=da0d1da0-568a-45cf-a93f-66a30a4870e7 IPADDR=192.168.1.12 NETMASK=255.255.255.0 GATEWAY=192.168.1.1 IPV6INIT=no USERCTL=no 设置 DNS # vi /etc/resolvconf/resolv.conf.d/base #添加 nameserver 8.8.8.8 nameserver 8.8.4.4 resolvconf -u # Centos vi /etc/resolv.conf nameserver 168.95.1.1 nameserver 8.8.8.8 ","date":"4 October 2019","externalUrl":null,"permalink":"/blog/linux-setup-ip-dns/","section":"Blog","summary":"在虚拟机中安装 Linux 无法 DHCP 获取地址，搜了点资料设置成功了，记下来好找资料。","title":"Linux 设置静态IP以及DNS","type":"blog"},{"content":"This artical will recording some commonly used OIDs, like memory usege,interface counters.\n写在最前面 # 对于 OID 着类查询，其实没有什么很好的方法，最主要的就是多 Google 一下，多尝试用工具 get 几个值看一下.请搜索 snmpwalk 这个小工具，windows 和 linux 版本都有.Linux 如何安装参考如下:\n[root@localhost ~]# yum install net-snmp-utils 你可能需要的几个网址:\n查 OID 意思的网址 http://cric.grenoble.cnrs.fr/Administrateurs/Outils/MIBS/?oid=1.3.6.1.2.1.138.1.10.1.1\nhttp://snmp.cloudapps.cisco.com/Support/SNMP/do/BrowseOID.do?local=en \u0026laquo;\u0026lt; CISCO 官方的网址\n有关 cisco 产品所支持的 MIB 库. ftp://ftp.cisco.com/pub/mibs/supportlists/\n#show snmp mib object-name | inc \u0026lt;oid\u0026gt; \u0026lt;\u0026lt;查看某个oid在9k上是否支持 接口相关的 OID # ifAdminStatus 1.3.6.1.2.1.2.2.1.7 \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; 端口管理状态 up/down ifOperStatus 1.3.6.1.2.1.2.2.1.8 \u0026lt;\u0026lt;\u0026lt;\u0026lt; 端口运行状态 up/down MAC 1.3.6.1.2.1.2.2.1.6 \u0026lt;\u0026lt;\u0026lt;\u0026lt; 端口mac地址 ifInOctets 1.3.6.1.2.1.2.2.1.10 \u0026lt;\u0026lt;\u0026lt;\u0026lt;端口如方向流量字节总数 ifHCInOctets \u0026lt;\u0026lt;\u0026lt;\u0026lt; 接口字节总数 64bit ， 建议使用这个 32bit 的有点问题 ifHCOutOctets ifOutOctets 1.3.6.1.2.1.2.2.1.16 \u0026lt;\u0026lt;\u0026lt;\u0026lt;端口出方向字节总数 ifSpeed 1.3.6.1.2.1.2.2.1.5 \u0026lt;\u0026lt;\u0026lt;\u0026lt;端口带宽 ifDescr 1.3.6.1.2.1.2.2.1.2 \u0026lt;\u0026lt;\u0026lt;\u0026lt;端口名称 ifxAlias 1.3.6.1.2.1.31.1.1.1.18 \u0026lt;\u0026lt;\u0026lt;\u0026lt;端口别名/即端口description Show interface 下的 last link flap 时间 # RP/0/RP0/CPU0:CORE6-ASR9922-A#show int hundredGigE 0/0/0/6 | in flapped Tue Nov 27 21:07:00.288 UTC Last link flapped 01:07:40 We need following OID 1.3.6.1.2.1.2.2.1.2 ifDescr \u0026lt;\u0026lt;\u0026lt; get interface name and ifindex 1.3.6.1.2.1.2.2.1.9 ifLastChange \u0026lt;\u0026lt;\u0026lt; get the time of sysUpTime when interface state change 1.3.6.1.2.1.1.3.0 sysUpTimeInstance \u0026lt;\u0026lt;\u0026lt; get sysUpTime So Last link flapped time should be ( sysUpTimeInstance – ifLastChange ) For example: [root@xuxing ~]# snmpwalk -v 2c -c cisco 10.75.49.13 1.3.6.1.2.1.2.2.1.2 | grep 0/0/0/6 IF-MIB::ifDescr.104 = STRING: HundredGigE0/0/0/6 [root@xuxing ~]# snmpwalk -v 2c -c cisco 10.75.49.13 1.3.6.1.2.1.2.2.1.9.104 IF-MIB::ifLastChange.104 = Timeticks: (9460) 0:01:34.60 \u0026lt;\u0026lt;\u0026lt; [root@xuxing ~]# snmpwalk -v 2c -c cisco 10.75.49.13 1.3.6.1.2.1.1.3.0 DISMAN-EVENT-MIB::sysUpTimeInstance = Timeticks: (419819) 1:09:58.19 \u0026lt;\u0026lt;\u0026lt; 1:09:58:19 - 0:01:34:60 = 1:08:24:00 same as above output Show interface 下的 CRC 计数 # RP/0/RSP0/CPU0:ASR9006-F# show int tenGigE 1/0/0/1 | in CRC Tue Dec 18 18:55:53.560 UTC 559851 input errors, 55 CRC, 0 frame, 0 overrun, 0 ignored, 0 abort RP/0/RSP0/CPU0:ASR9006-F# we need following OID 1.3.6.1.2.1.2.2.1.2 ifDescr 1.3.6.1.2.1.10.7.11.1.2 dot3HCStatsFCSErrors [root@xuxing ~]# snmpwalk -v 2c -c cisco 10.75.49.35 1.3.6.1.2.1.2.2.1.2 | grep TenGigE1/0/0/1 \u0026lt;\u0026lt;\u0026lt; get ifindex and ifname IF-MIB::ifDescr.375 = STRING: TenGigE1/0/0/1 [root@xuxing ~]# snmpwalk -v 2c -c cisco 10.75.49.35 1.3.6.1.2.1.10.7.11.1.2.375 \u0026lt;\u0026lt;\u0026lt;get CRC counter EtherLike-MIB::dot3HCStatsFCSErrors.375 = Counter64: 55 监控板卡的 memory 使用情况 # *if the LC memeory smaller than 4G,you can use below OID to check the memeory usage * ciscoMemoryPoolUsed: 1.3.6.1.4.1.9.9.48.1.1.1.5 ciscoMemoryPoolFree: 1.3.6.1.4.1.9.9.48.1.1.1.6 *if the LC memeory bigger than 4G, use below OID* cempMemPoolHCUsed: 1.3.6.1.4.1.9.9.221.1.1.1.1.18 \u0026lt;\u0026lt;\u0026lt; memory LC used cempMemPoolHCFree: 1.3.6.1.4.1.9.9.221.1.1.1.1.20 \u0026lt;\u0026lt;\u0026lt; memory free For example: 1.\tGet the memory used. [root@localhost ~]# snmpwalk -v 2c -c cisco 10.75.49.54 1.3.6.1.4.1.9.9.221.1.1.1.1.18 SNMPv2-SMI::enterprises.9.9.221.1.1.1.1.18.18788073.1 = Counter64: 2836322328 SNMPv2-SMI::enterprises.9.9.221.1.1.1.1.18.18788073.2 = Counter64: 134217728 SNMPv2-SMI::enterprises.9.9.221.1.1.1.1.18.18788073.3 = Counter64: 74158304 SNMPv2-SMI::enterprises.9.9.221.1.1.1.1.18.52690955.1 = Counter64: 2167614624 SNMPv2-SMI::enterprises.9.9.221.1.1.1.1.18.52690955.2 = Counter64: 134217728 SNMPv2-SMI::enterprises.9.9.221.1.1.1.1.18.52690955.3 = Counter64: 73829464 2.\tGet the memory free. [root@localhost ~]# snmpwalk -v 2c -c cisco 10.75.49.54 1.3.6.1.4.1.9.9.221.1.1.1.1.20 SNMPv2-SMI::enterprises.9.9.221.1.1.1.1.20.18788073.1 = Counter64: 5544935424 SNMPv2-SMI::enterprises.9.9.221.1.1.1.1.20.18788073.2 = Counter64: 0 SNMPv2-SMI::enterprises.9.9.221.1.1.1.1.20.18788073.3 = Counter64: 0 SNMPv2-SMI::enterprises.9.9.221.1.1.1.1.20.52690955.1 = Counter64: 6213971968 SNMPv2-SMI::enterprises.9.9.221.1.1.1.1.20.52690955.2 = Counter64: 0 SNMPv2-SMI::enterprises.9.9.221.1.1.1.1.20.52690955.3 = Counter64: 0 3.\tGet the LC type. [root@localhost ~]# snmpwalk -v 2c -c cisco 10.75.49.54 1.3.6.1.2.1.47.1.1.1.1.7 | grep 18788073 SNMPv2-SMI::mib-2.47.1.1.1.1.7.18788073 = STRING: \u0026#34;module 0/0/CPU0\u0026#34; [root@localhost ~]# [root@localhost ~]# [root@localhost ~]# snmpwalk -v 2c -c cisco 10.75.49.54 1.3.6.1.2.1.47.1.1.1.1.7 | grep 52690955 SNMPv2-SMI::mib-2.47.1.1.1.1.7.52690955 = STRING: \u0026#34;module 0/RSP0/CPU0\u0026#34; [root@localhost ~]# RP/0/RSP0/CPU0:ASR9001-B#show memory summary location all Thu Apr 4 05:28:16.085 UTC node: node0_0_CPU0 ------------------------------------------------------------------ Physical Memory: 8192M total Application Memory : 7992M (5288M available) Image: 70M (bootram: 70M) Reserved: 128M, IOMem: 0, flashfsys: 0 Total shared window: 128M node: node0_RSP0_CPU0 ------------------------------------------------------------------ Physical Memory: 8192M total (5923M available) Application Memory : 7993M (5923M available) Image: 70M (bootram: 70M) Reserved: 128M, IOMem: 0, flashfsys: 0 Total shared window: 41M 监控板卡的 CPU 利用率 # \u0026gt;1.3.6.1.4.1.9.9.109.1.1.1.1.7 cpmCPUTotal1minRev \u0026lt;\u0026lt;\u0026lt;1min \u0026gt;1.3.6.1.4.1.9.9.109.1.1.1.1.8 cpmCPUTotal5minRev \u0026lt;\u0026lt;\u0026lt;5min [root@localhost ~]# snmpwalk -v 2c -c cisco 10.75.39.20 1.3.6.1.4.1.9.9.109.1.1.1.1 SNMPv2-SMI::enterprises.9.9.109.1.1.1.1.2.2 = INTEGER: 52690955 \u0026lt;\u0026lt;\u0026lt; this is card type SNMPv2-SMI::enterprises.9.9.109.1.1.1.1.2.18 = INTEGER: 26932192 SNMPv2-SMI::enterprises.9.9.109.1.1.1.1.2.2082 = INTEGER: 18788073 SNMPv2-SMI::enterprises.9.9.109.1.1.1.1.2.2098 = INTEGER: 8695772 SNMPv2-SMI::enterprises.9.9.109.1.1.1.1.7.2 = Gauge32: 2 \u0026lt;\u0026lt;\u0026lt;\u0026lt; SNMPv2-SMI::enterprises.9.9.109.1.1.1.1.7.18 = Gauge32: 1 SNMPv2-SMI::enterprises.9.9.109.1.1.1.1.7.2082 = Gauge32: 2 SNMPv2-SMI::enterprises.9.9.109.1.1.1.1.7.2098 = Gauge32: 4 SNMPv2-SMI::enterprises.9.9.109.1.1.1.1.8.2 = Gauge32: 2 \u0026lt;\u0026lt;\u0026lt;\u0026lt; SNMPv2-SMI::enterprises.9.9.109.1.1.1.1.8.18 = Gauge32: 1 SNMPv2-SMI::enterprises.9.9.109.1.1.1.1.8.2082 = Gauge32: 2 SNMPv2-SMI::enterprises.9.9.109.1.1.1.1.8.2098 = Gauge32: 4 [root@localhost ~]# snmpwalk -v 2c -c cisco 10.75.39.20 1.3.6.1.2.1.47.1.1.1.1.7 | grep 52690955 SNMPv2-SMI::mib-2.47.1.1.1.1.7.52690955 = STRING: \u0026#34;module 0/RSP0/CPU0\u0026#34; \u0026lt;\u0026lt;\u0026lt;\u0026lt; [root@localhost ~]# Fan Speed # [root@xuxing ~]# snmpwalk -v 2c -c public 10.75.49.9 1.3.6.1.2.1.47.1.1.1.1.7 | grep speed \u0026lt;\u0026lt;\u0026lt;get sensor SNMPv2-SMI::mib-2.47.1.1.1.1.7.6869781 = STRING: \u0026#34;speed 0/FT1/SP\u0026#34; [root@xuxing ~]# [root@xuxing ~]# snmpwalk -v 2c -c public 10.75.49.9 1.3.6.1.2.1.47.1.1.1.1.4.6869781 \u0026lt;\u0026lt;\u0026lt;获得这个传感器name的ID SNMPv2-SMI::mib-2.47.1.1.1.1.4.6869781 = INTEGER: 18859810 [root@xuxing ~]# [root@xuxing ~]# snmpwalk -v 2c -c public 10.75.49.9 1.3.6.1.2.1.47.1.1.1.1.7.18859810 \u0026lt;\u0026lt;\u0026lt;使用上面的传感器id获得name为小风扇fan2 FT1 SNMPv2-SMI::mib-2.47.1.1.1.1.7.18859810 = STRING: \u0026#34;fan2 0/FT1/SP\u0026#34; [root@xuxing ~]# snmpwalk -v 2c -c public 10.75.49.9 1.3.6.1.4.1.9.9.91.1.1.1.1.4.6869781 \u0026lt;\u0026lt;\u0026lt;获得转速 SNMPv2-SMI::enterprises.9.9.91.1.1.1.1.4.6869781 = INTEGER: 4440 Fan State # [root@xuxing ~]# snmpwalk -v 2c -c public 10.75.49.9 1.3.6.1.2.1.47.1.1.1.1.7 | grep fantray SNMPv2-SMI::mib-2.47.1.1.1.1.7.25315280 = STRING: \u0026#34;fantray 0/FT1/SP\u0026#34; SNMPv2-SMI::mib-2.47.1.1.1.1.7.59316821 = STRING: \u0026#34;fantray 0/FT0/SP\u0026#34; [root@xuxing ~]# [root@xuxing ~]# [root@xuxing ~]# [root@xuxing ~]# snmpwalk -v 2c -c public 10.75.49.9 1.3.6.1.4.1.9.9.117.1.4.1.1.1.25315280 \u0026lt;\u0026lt;\u0026lt;\u0026lt;获得FAN tray的状态，2表示是正常的 SNMPv2-SMI::enterprises.9.9.117.1.4.1.1.1.25315280 = INTEGER: 2 [root@xuxing ~]# snmpwalk -v 2c -c public 10.75.49.9 1.3.6.1.4.1.9.9.117.1.4.1.1.1.59316821 SNMPv2-SMI::enterprises.9.9.117.1.4.1.1.1.59316821 = INTEGER: 2 [root@xuxing ~]# Power moudle state # [root@xuxing ~]# snmpwalk -v 2c -c public 10.75.49.9 1.3.6.1.2.1.47.1.1.1.1.7 | grep power-module SNMPv2-SMI::mib-2.47.1.1.1.1.7.36029366 = STRING: \u0026#34;power-module 0/PS1/M3/SP\u0026#34; SNMPv2-SMI::mib-2.47.1.1.1.1.7.39915627 = STRING: \u0026#34;power-module 0/PS0/M3/SP\u0026#34; SNMPv2-SMI::mib-2.47.1.1.1.1.7.65324228 = STRING: \u0026#34;power-module 0/PS1/M0/SP\u0026#34; SNMPv2-SMI::mib-2.47.1.1.1.1.7.66531208 = STRING: \u0026#34;power-module 0/PS0/M0/SP\u0026#34; [root@xuxing ~]# snmpwalk -v 2c -c public 10.75.49.9 1.3.6.1.4.1.9.9.117.1.1.2.1.2.36029366 \u0026lt;\u0026lt;\u0026lt;获得Power module的状态，2表示正常的 SNMPv2-SMI::enterprises.9.9.117.1.1.2.1.2.36029366 = INTEGER: 2 [root@xuxing ~]# snmpwalk -v 2c -c public 10.75.49.9 1.3.6.1.4.1.9.9.117.1.1.2.1.2.39915627 SNMPv2-SMI::enterprises.9.9.117.1.1.2.1.2.39915627 = INTEGER: 2 [root@xuxing ~]# Temperatures # [root@xuxing ~]# snmpwalk -v 2c -c public 10.75.49.9 1.3.6.1.2.1.47.1.1.1.1.7 | grep temperature | grep 0/RSP0/CPU0 \u0026lt;\u0026lt;\u0026lt;取得温度传感器对应的值 SNMPv2-SMI::mib-2.47.1.1.1.1.7.12004356 = STRING: \u0026#34;temperature 0/RSP0/CPU0\u0026#34; SNMPv2-SMI::mib-2.47.1.1.1.1.7.12005976 = STRING: \u0026#34;temperature 0/RSP0/CPU0\u0026#34; SNMPv2-SMI::mib-2.47.1.1.1.1.7.28781969 = STRING: \u0026#34;temperature 0/RSP0/CPU0\u0026#34; SNMPv2-SMI::mib-2.47.1.1.1.1.7.28783653 = STRING: \u0026#34;temperature 0/RSP0/CPU0\u0026#34; SNMPv2-SMI::mib-2.47.1.1.1.1.7.45559678 = STRING: \u0026#34;temperature 0/RSP0/CPU0\u0026#34; SNMPv2-SMI::mib-2.47.1.1.1.1.7.45561266 = STRING: \u0026#34;temperature 0/RSP0/CPU0\u0026#34; SNMPv2-SMI::mib-2.47.1.1.1.1.7.62337227 = STRING: \u0026#34;temperature 0/RSP0/CPU0\u0026#34; [root@xuxing ~]# [root@xuxing ~]# [root@xuxing ~]# [root@xuxing ~]# snmpwalk -v 2c -c public 10.75.49.9 1.3.6.1.2.1.47.1.1.1.1.4.12004356 \u0026lt;\u0026lt;\u0026lt;根据传感器的值获得name对应的ID SNMPv2-SMI::mib-2.47.1.1.1.1.4.12004356 = INTEGER: 38557239 [root@xuxing ~]# snmpwalk -v 2c -c public 10.75.49.9 1.3.6.1.2.1.47.1.1.1.1.2.38557239 SNMPv2-SMI::mib-2.47.1.1.1.1.2.38557239 = STRING: \u0026#34;RSP Card host \u0026#34; [root@xuxing ~]# snmpwalk -v 2c -c public 10.75.49.9 1.3.6.1.4.1.9.9.91.1.1.1.1.4.12004356 \u0026lt;\u0026lt;\u0026lt;获得传感器下对应的CPU温度 SNMPv2-SMI::enterprises.9.9.91.1.1.1.1.4.12004356 = INTEGER: 340 [root@xuxing ~]# 0/RSP0/* host die_CPU 34.0 \u0026lt;\u0026lt;\u0026lt;\u0026lt; 对应这个温度. host die_FabArbiter0 35.0 host die_FIA 38.0 host die_PCH 41.0 host die_DIMM0 33.0 host die_DIMM1 33.0 TIPs # - 请添加SystemOwner的权限，要不然一些Fan speed之类的传感器的OID获得不到。 \u0026gt;snmp-server community cisco RW SystemOwner - 请安装mgbl的PIE，要不然一些板卡，风扇的OID会获得不到。 \u0026gt;disk0:asr9k-mgbl-px-6.3.3 ","date":"4 October 2019","externalUrl":null,"permalink":"/blog/some-commonly-used-oids/","section":"Blog","summary":"This artical will recording some commonly used OIDs, like memory usege,interface counters.","title":"Some commonly used OIDs","type":"blog"},{"content":"最近接触了一个案例，其中包含很多的 SR 方面的知识，所以想趁着熟悉记录下来。具体包括了以下的内容：Policy SR-TE、Interface SR-TE、BGP EPE、TE BSID 等。\nSR Interface SR TE TE BSID BGP EPE Policy SR TE # 写在最前面\n首先先介绍一下这个环境。\n1. AS9929 使能 SR，并建立 PE1 和 PE2 之间的 tunnel 隧道.\n2. CE 与 PE 之间使能 BGP EPE,为 CE 与 PE 之间的链路分配标签.\n3. CE 与 CE 之间起 Policy 的 SR TE, 其中 segment list 为\u0026lt;EPE label,BSID,EPE label\u0026gt;.\nSR # 从一年前接触 SP 这一块开始就听到有人提及到 Segment routing 这项技术，与相对于传统的 LDP 标签分发方式，SR 意味着你可以在你的网络中少配置一种路由协议，不用考虑 IGP 于 LDP 互操新问题；SR TE 相对于 RSVP TE 更是优点多多，例如原生的支持 ECMP，例如 TI-LFA 等。所以运营商在测并部署 SR， 并将原有的 RSVP TE 迁移到 SR TE 中来。 SR 的配置其实很简单，例如在 ISIS 中使能 SR，可以参考以下配置:\nRP/0/RSP0/CPU0:PE1#show run router isis xx Tue Aug 13 05:46:44.186 UTC router isis xx is-type level-2-only net 49.0000.0000.0002.00 address-family ipv4 unicast metric-style wide \u0026lt;\u0026lt;\u0026lt;\u0026lt; 必须是wide模式，以为只有在wide模式下才有SR相关的TLV mpls traffic-eng level-2-only mpls traffic-eng router-id Loopback1 mpls traffic-eng igp-intact segment-routing mpls sr-prefer \u0026lt;\u0026lt;\u0026lt;\u0026lt; 只需要在AFI下配置该命令，sr-prefer参数是为了在LDP共存网络使用SR标签转发 ! interface Loopback1 address-family ipv4 unicast prefix-sid absolute 16002 \u0026lt;\u0026lt;\u0026lt;\u0026lt; 为每一个设备loopback接口配置prefix sid，absolute 或者index形式 ! Interface SR-TE # 配置方法可以参考 RSVP TE 的配置，唯一特殊的是需要添加 segment-routing 关键字，如下 ：\nRP/0/RSP0/CPU0:PE1#show run int tunnel-te 1 Tue Aug 13 05:50:54.801 UTC interface tunnel-te1 bandwidth 102400 ipv4 unnumbered Loopback1 logging events all destination 3.3.3.3 binding-sid mpls label 4004 \u0026lt;\u0026lt;\u0026lt; BSID path-option 100 explicit name test segment-routing \u0026lt;\u0026lt;\u0026lt;\u0026lt; ! RP/0/RSP0/CPU0:PE1#show run explicit-path Tue Aug 13 05:50:59.592 UTC explicit-path name test \u0026lt;\u0026lt;\u0026lt;\u0026lt;显示路径会包含到达目标节点路径上的prefix-sid index 10 next-label 16004 index 20 next-label 16113 TE BSID # BSID 的概念其实是用来固定一个 TE tunel 的标签的，如果一个 TE tunel down 了， 而在其 up 起来后为之分配的标签改变了，那么如果我们手写的静态路径用到这个 label，就会失效。通过 BSID 为一个 tunnel 分配固定的标签就可以解决这个问题。\nBGP EPE # EPE 主要是用于多 CE 接入多 PE 时，选择何种 CE 或者 PE 转发路径，例如我们规划流量从某一个 PE 抓发，那么在写静态路径时可以将 CE 与 PE 之间链路的 EPE 标签写进转发路径中去。如图所示，CE 与 PE 之间使能了 EPE feature.\nRP/0/RSP0/CPU0:PE1#show run router bgp 9919 neighbor 200.1.12.1 Tue Aug 13 06:06:33.362 UTC router bgp 9919 neighbor 200.1.12.1 remote-as 100 egress-engineering \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; address-family ipv4 unicast route-policy pass in route-policy pass out ! RP/0/RSP0/CPU0:PE1#show bgp egress-engineering Tue Aug 13 06:06:50.991 UTC Egress Engineering Peer Set: 200.1.12.1/32 (1363f018) Nexthop: 200.1.12.1 Version: 2, rn_version: 2 Flags: 0x00000006 Local ASN: 9919 Remote ASN: 100 Local RID: 2.2.2.1 Remote RID: 114.112.50.60 First Hop: 200.1.12.1 NHID: 2 IFH: 0x6001000 Label: 24002, Refcount: 3 \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; rpc_set: 144c92a4 RP/0/RSP0/CPU0:ASR9910-A# Policy SR-TE # CE 上配置 Policy 的 SE-TE，目的节点为对端 CE:\nRP/0/RSP0/CPU0:CE1#show run segment-routing Tue Aug 13 12:59:31.627 UTC segment-routing global-block 16000 23999 traffic-eng segment-list to_QD_CC index 10 mpls label 24021 \u0026lt;\u0026lt;\u0026lt;EPE label index 20 mpls label 4004 \u0026lt;\u0026lt;\u0026lt;BSID index 30 mpls label 24007 \u0026lt;\u0026lt;\u0026lt;EPE label ! policy SRTE_to_QDCC color 888 end-point ipv4 5.5.5.5 candidate-paths preference 100 explicit segment-list to_QD_CC ! 将流量引入该 TE 隧道, 从该 BGP 邻居学来的路由都回被引入到 TE tunel 中 。\nrouter bgp 100 neighbor 5.5.5.5 remote-as 65535 ebgp-multihop 10 update-source Loopback2 address-family vpnv4 unicast route-policy pass-all in route-policy set_color out \u0026lt;\u0026lt;\u0026lt;\u0026lt; next-hop-unchanged ! RP/0/RSP0/CPU0:CE1#show run extcommunity-set opaque color_888 Tue Aug 13 13:03:04.740 UTC extcommunity-set opaque color_888 \u0026lt;\u0026lt;\u0026lt;\u0026lt; 888 end-set ! RP/0/RSP0/CPU0:ASR9001-D-R1#show run route-policy set_color Tue Aug 13 13:01:31.096 UTC route-policy set_color set extcommunity color color_888 \u0026lt;\u0026lt;\u0026lt;\u0026lt; end-policy ! 验证联通性. # CE 与 PE 之间的互联链路属于 vrf SZ_CC, CE 与 PE 之间路由协议为 BGP，PE1 与 PE2 之间的起 VPNv4 BGP 邻居关系, 以传递 CE 之间的环回口地址。\nRP/0/RSP0/CPU0:CE1#show bgp ipv4 unicast summary Tue Aug 13 13:08:15.030 UTC BGP router identifier 114.112.50.60, local AS number 100 BGP generic scan interval 60 secs Non-stop routing is enabled BGP table state: Active Table ID: 0xe0000000 RD version: 195 BGP main routing table version 195 BGP NSR Initial initsync version 6 (Reached) BGP NSR/ISSU Sync-Group versions 0/0 BGP scan interval 60 secs BGP is operating in STANDALONE mode. Process RcvTblVer bRIB/RIB LabelVer ImportVer SendTblVer StandbyVer Speaker 195 195 195 195 195 0 Neighbor Spk AS MsgRcvd MsgSent TblVer InQ OutQ Up/Down St/PfxRcd 100.1.12.2 0 9919 7836 7813 195 0 0 5d07h 4 RP/0/RSP0/CPU0:CE1#show bgp ipv4 unicast Tue Aug 13 13:08:23.432 UTC BGP router identifier 114.112.50.60, local AS number 100 BGP generic scan interval 60 secs Non-stop routing is enabled BGP table state: Active Table ID: 0xe0000000 RD version: 195 BGP main routing table version 195 BGP NSR Initial initsync version 6 (Reached) BGP NSR/ISSU Sync-Group versions 0/0 BGP scan interval 60 secs Status codes: s suppressed, d damped, h history, * valid, \u0026gt; best i - internal, r RIB-failure, S stale, N Nexthop-discard Origin codes: i - IGP, e - EGP, ? - incomplete Network Next Hop Metric LocPrf Weight Path *\u0026gt; 1.1.1.1/32 0.0.0.0 0 32768 ? *\u0026gt; 5.5.5.5/32 100.1.12.2 0 9919 65535 ? CE 与 CE 之间使用换回地址建立 VPNv4 的邻居关系以传递次级 CE 的 VPN 路由:\nRP/0/RSP0/CPU0:CE1#show bgp vpnv4 unicast summary Tue Aug 13 13:11:02.556 UTC BGP router identifier 114.112.50.60, local AS number 100 BGP generic scan interval 60 secs Non-stop routing is enabled BGP table state: Active Table ID: 0x0 RD version: 0 BGP main routing table version 96 BGP NSR Initial initsync version 7 (Reached) BGP NSR/ISSU Sync-Group versions 0/0 BGP scan interval 60 secs BGP is operating in STANDALONE mode. Process RcvTblVer bRIB/RIB LabelVer ImportVer SendTblVer StandbyVer Speaker 96 96 96 96 96 0 Neighbor Spk AS MsgRcvd MsgSent TblVer InQ OutQ Up/Down St/PfxRcd 5.5.5.5 0 65535 3747 3792 96 0 0 04:44:16 1 RP/0/RSP0/CPU0:CE1# RP/0/RSP0/CPU0:ASR9001-D-R1#show bgp vpnv4 unicast Tue Aug 13 13:11:05.518 UTC BGP router identifier 114.112.50.60, local AS number 100 BGP generic scan interval 60 secs Non-stop routing is enabled BGP table state: Active Table ID: 0x0 RD version: 0 BGP main routing table version 96 BGP NSR Initial initsync version 7 (Reached) BGP NSR/ISSU Sync-Group versions 0/0 BGP scan interval 60 secs Status codes: s suppressed, d damped, h history, * valid, \u0026gt; best i - internal, r RIB-failure, S stale, N Nexthop-discard Origin codes: i - IGP, e - EGP, ? - incomplete Network Next Hop Metric LocPrf Weight Path Route Distinguisher: 5.5.5.5:0 *\u0026gt; 33.33.33.33/32 5.5.5.5 C:888 0 0 65535 ? Route Distinguisher: 114.112.50.60:1 (default for vrf Metro) *\u0026gt; 22.22.22.22/32 0.0.0.0 0 32768 ? *\u0026gt; 33.33.33.33/32 5.5.5.5 C:888 0 0 65535 ? Processed 4 prefixes, 4 paths 次级 CE 流量通过 Policy SR TE 的 segment list 转发到对端 CE：\nRP/0/RSP0/CPU0:CE1#traceroute vrf Metro 33.33.33.33 source 22.22.22.22 Tue Aug 13 13:13:01.548 UTC Type escape sequence to abort. Tracing the route to 33.33.33.33 1 200.1.12.2 [MPLS: Labels 4004/24007/24000 Exp 0] 3 msec 1 msec 1 msec 2 10.1.24.4 [MPLS: Labels 16113/24007/24000 Exp 0] 1 msec 1 msec 1 msec 3 10.1.34.3 [MPLS: Labels 24007/24000 Exp 0] 1 msec 1 msec 1 msec 4 200.1.35.5 3 msec * 2 msec RP/0/RSP0/CPU0:CE1# RP/0/RSP0/CPU0:CE1#traceroute vrf Metro 33.33.33.33 source 22.22.22.22 Tue Aug 13 13:13:01.548 UTC Type escape sequence to abort. Tracing the route to 33.33.33.33 1 200.1.12.2 [MPLS: Labels 4004/24007/24000 Exp 0] 3 msec 1 msec 1 msec 2 10.1.24.4 [MPLS: Labels 16113/24007/24000 Exp 0] 1 msec 1 msec 1 msec 3 10.1.34.3 [MPLS: Labels 24007/24000 Exp 0] 1 msec 1 msec 1 msec 4 200.1.35.5 3 msec * 2 msec RP/0/RSP0/CPU0:ASR9001-D-R1# RP/0/RSP0/CPU0:ASR9001-D-R1# RP/0/RSP0/CPU0:ASR9001-D-R1#show cef vrf Metro 33.33.33.33 Tue Aug 13 13:13:31.357 UTC 33.33.33.33/32, version 37, internal 0x5000001 0x0 (ptr 0x9de49df4) [1], 0x0 (0x0), 0x208 (0x9e27c344) Updated Aug 13 08:26:51.380 Prefix Len 32, traffic index 0, precedence n/a, priority 3 via local-label 24022, 3 dependencies, recursive, bgp-ext [flags 0x6020] path-idx 0 NHID 0x0 [0x9e35ed88 0x0] recursion-via-label next hop VRF - \u0026#39;default\u0026#39;, table - 0xe0000000 next hop via 24022/0/21 next hop srte_c_888_e labels imposed {ImplNull 24000} RP/0/RSP0/CPU0:CE1#show segment-routing traffic-eng policy Tue Aug 13 13:14:01.437 UTC SR-TE policy database --------------------- Color: 888, End-point: 5.5.5.5 Name: srte_c_888_ep_5.5.5.5 Status: Admin: up Operational: up for 5d06h (since Aug 8 06:47:23.502) Candidate-paths: Preference: 100 (configuration) (active) Name: SRTE_to_QDCC Requested BSID: dynamic Explicit: segment-list to_QD_CC (valid) Weight: 1, Metric Type: TE 24021 4004 24007 Attributes: Binding SID: 24022 Forward Class: 0 Steering BGP disabled: no IPv6 caps enable: yes RP/0/RSP0/CPU0:CE1#show bgp vrf Metro 33.33.33.33/32 detail Tue Aug 13 13:14:54.055 UTC BGP routing table entry for 33.33.33.33/32, Route Distinguisher: 114.112.50.60:1 Versions: Process bRIB/RIB SendTblVer Speaker 96 96 Flags: 0x00001001+0x00000000; Last Modified: Aug 13 08:26:50.892 for 04:48:03 Paths: (1 available, best #1) Not advertised to any peer Path #1: Received by speaker 0 Flags: 0x4000000005060001, import: 0x80 Not advertised to any peer 65535 5.5.5.5 C:888 (bsid:24022) from 5.5.5.5 (5.5.5.5) Received Label 24000 Origin incomplete, metric 0, localpref 100, valid, external, best, group-best, import-candidate, imported Received Path ID 0, Local Path ID 1, version 96 Extended community: Color:888 RT:3001:3001 Origin-AS validity: not-found SR policy color 888, up, not-registered, bsid 24022 Source AFI: VPNv4 Unicast, Source VRF: default, Source Route Distinguisher: 5.5.5.5:0 ","date":"4 October 2019","externalUrl":null,"permalink":"/blog/sr-te-example/","section":"Blog","summary":"最近接触了一个案例，其中包含很多的 SR 方面的知识，所以想趁着熟悉记录下来。具体包括了以下的内容：Policy SR-TE、Interface SR-TE、BGP EPE、TE BSID 等。","title":"SR TE 配置案例","type":"blog"},{"content":"这篇文章主要是为了介绍一下 wireshark 自带的小工具 text2pcap，这个小工具可以帮助我们将 16 进制的文件转换为 pcap 文件，让我们可以直接在 wireshark 中打开。\n转换过程 # 打开 wireshark 的安装目录,在安装目录下新建一个 txt 文档，如下图所示:\n将 16 进制的数据按下图格式进行整合，注意前 6 个字节一定要对应 MAC 地址，要不然转换会出错:\n打开 CMD 命令行，进入 wireshark 安装的根目录，进行转换.如下：\nMicrosoft Windows [版本 10.0.17134.407] (c) 2018 Microsoft Corporation。保留所有权利。 C:\\Users\\xuxing\u0026gt;D: D:\\\u0026gt;cd D:\\Wireshark D:\\Wireshark\u0026gt; D:\\Wireshark\u0026gt; D:\\Wireshark\u0026gt;text2pcap.exe 12_19.txt 12_19.pcap Input from: 12_19.txt Output to: 12_19.pcap Output format: PCAP Wrote packet of 64 bytes. Read 1 potential packet, wrote 1 packet (104 bytes). 再次查看 wireshark 安装的根目录,包含刚刚所转换的文件了:\n参考以下文档:\nhttps://www.wireshark.org/docs/man-pages/text2pcap.html\n","date":"4 October 2019","externalUrl":null,"permalink":"/blog/wireshark-tools-text2pcap/","section":"Blog","summary":"这篇文章主要是为了介绍一下 wireshark 自带的小工具 text2pcap，这个小工具可以帮助我们将 16 进制的文件转换为 pcap 文件，让我们可以直接在 wireshark 中打开。","title":"Wireshark tools -- text2pcap","type":"blog"},{"content":"最近遇到一个 case，需要使用 windows 抓交换机 span 过来的流量，但是无论交换机怎么配置，windows 上 wireshark 抓到的报文总是没有 VLAN tag，让我一度怀疑交换机的配置是否出了问题，查了一些资料，发现需要修改下注册表，才能改变网卡的模式，让其捕获报文后不主动去掉 VLAN tag。\nTOPO # IXIA(VLAN)\u0026mdash;\u0026mdash;\u0026ndash;(Trunk)Switch(default)\u0026mdash;\u0026mdash;\u0026ndash;PC\nIXIA 打封装 VLAN tag 的报文，到达交换机的 trunk 口，SPAN 的配置如下，将 trunk 接口的流量 span 到连接 PC 的接口，连接 PC 的接口配置默认即可。\n交换机配置 # WS3850-C#show run | section monitor monitor session 66 source interface GigabitEthernet0/0 monitor session 66 destination interface Gi1/0/1 encapsulation dot1q Windows 配置 # 找到需要 capture 数据包的网卡，例如我需要抓以太网的网卡上的流量，我的网卡是 Intel（R） 1219-LM\n打开注册表\n找到以下的路径，由于该路径下有很多文件夹，每个文件夹对应 PC 上的各个网卡，所以我们需要一个一个打开找到 DriverDesc 描述的是我们需要的网卡，例如我这边对应 0006 这个文件夹。\nHKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Control\\Class\\{4d36e972-e325-11ce-bfc1-08002be10318}\\ 新建两个 DWORD 项，name 和 date 如下图所示：\n效果如下: # 重启电脑后再进行抓包，就会发现 VLAN tag 不会被网卡移除了.\n","date":"4 October 2019","externalUrl":null,"permalink":"/blog/windows-capture-packet-with-vlan/","section":"Blog","summary":"最近遇到一个 case，需要使用 windows 抓交换机 span 过来的流量，但是无论交换机怎么配置，windows 上 wireshark 抓到的报文总是没有 VLAN tag，让我一度怀疑交换机的配置是否出了问题，查了一些资料，发现需要修改下注册表，才能改变网卡的模式，让其捕获报文后不主动去掉 VLAN tag。","title":"使用windows抓取带有VLAN标记的报文","type":"blog"},{"content":"记录一下在centos搭建SFTP server.\nStep 1:创建新用户 # [root@localhost ~]# adduser guest [root@localhost ~]# passwd guest Step 2:为文件传输创建目录 # [root@localhost ~]# mkdir -p /var/sftp/uploads [root@localhost ~]# chown root:root /var/sftp \u0026lt;\u0026lt;\u0026lt; 设置所有者为root [root@localhost ~]# chmod 755 /var/sftp \u0026lt;\u0026lt;\u0026lt; 授予同一目录的root写权限，并为其他用户提供只读和执行权限 [root@localhost ~]# chown guest:guest /var/sftp/uploads \u0026lt;\u0026lt;\u0026lt;将uploads目录的所有权更改为guest Step 3:限制对一个目录的访问 # [root@localhost ~]# vi /etc/ssh/sshd_config Match User guest ForceCommand internal-sftp PasswordAuthentication yes ChrootDirectory /var/sftp PermitTunnel no AllowAgentForwarding no AllowTcpForwarding no X11Forwarding no [root@localhost ~]# systemctl restart sshd https://www.digitalocean.com/community/tutorials/how-to-enable-sftp-without-shell-access-on-centos-7\n","date":"4 October 2019","externalUrl":null,"permalink":"/blog/centos7-sftp/","section":"Blog","summary":"记录一下在centos搭建SFTP server.","title":"如何在CentOS 7上启用没有Shell访问权限的SFTP","type":"blog"},{"content":"详细记录一下如何使用 Turboboot 的方式升级一台 ASR9000.\n安装前的准备 # - 格式为 FAT32 的 U 盘一个\n- cisco 官网下载有 turboboot 字样的安装文件\nUSB 安装步骤如下 # 对于 ASR9001，USB 插进去后显示为 disk1;对于 CRS，USB 插入进去后为 disk2.\n使用如下的命令重启设备，会自动进入 rommon 模式，或者直接断电重新加电，CTRL+C 进入 rommon.\nadmin config-register 0x0 admin reload location all 以下是使用 USB boot 一台设备时候的配置,\nrommon 15 \u0026gt; unset BOOT \u0026lt;\u0026lt;\u0026lt; 取消参数BOOT的值 rommon 16 \u0026gt; TURBOBOOT=on,disk0,format rommon 17 \u0026gt; sync \u0026lt;\u0026lt;\u0026lt;保存 rommon 18 \u0026gt; set \u0026lt;\u0026lt;\u0026lt;查看rommon的配置 PS1=rommon ! \u0026gt; ?=0 TURBOBOOT=on,disk0,format rommon 19 \u0026gt; rommon 19 \u0026gt; rommon 19 \u0026gt; boot usb:asr9k-mini-px.vm-6.2.3 \u0026lt;\u0026lt;\u0026lt;相对于普通的install方式升级的文件，可以看到多了vm字样 Beginning Media boot: **** check image validation **** .......BIOS CODE SIGN ENTRY ... Image ASR9K-Tomahawk verified successfully boot_disk2 - Launching image. TFTP 配置如下 # rommon1\u0026gt;IP_ADDRESS=10.75.49.45 rommon2\u0026gt;IP_SUBNET_MASK=255.255.255.0 rommon3\u0026gt;TFTP_SERVER=10.75.49.254 rommon4\u0026gt;DEFAULT_GATWAY=10.75.49.1 rommon5\u0026gt;TFTP_RETRY_COUNT=4 rommon6\u0026gt;TFTP_TIMEOUT=60 rommon7\u0026gt;TFTP_CHECKSUM=1 rommon8\u0026gt;priv rommon9\u0026gt;diswd rommon10\u0026gt;unset BOOT rommon11\u0026gt;TURBOBOOT=on,disk0,format rommon12\u0026gt;sync rommon13\u0026gt;boot tftp://10.75.49.254/asr9k-mini-px.vm-6.2.3 命令 # #more nvram:classic-rommon-var 可以查看turboboot设置的信息 #Show bootvar 查看设备是如何去boot的 ","date":"4 October 2019","externalUrl":null,"permalink":"/blog/turboboot-upgrade-asr9000/","section":"Blog","summary":"详细记录一下如何使用 Turboboot 的方式升级一台 ASR9000.","title":"如何用Turboboot的方式升级ASR9000","type":"blog"},{"content":"NotePad++是平常最主要的看 log 软件，最近在安装的时候采用的不是系统按照，直接下载的 zib packet 然后解压缩，导致我在打开一些 log 文件时找不到 notepad++这个软件，通过将其添加到注册表中解决了这个问题。\n导入注册表 # 将以下的内容保存在记事本中， 后缀改成 .reg。保存后双击点开就导入注册表\nWindows Registry Editor Version 5.00 [HKEY_CLASSES_ROOT*shellNotePad++] @=\u0026#34;NotePad++\u0026#34; \u0026#34;Icon\u0026#34;=\u0026#34;D:\\Software\\Notepad++\\notepad++.exe\u0026#34; [HKEY_CLASSES_ROOT*shellNotePad++Command] @=\u0026#34;\u0026#34;D:\\Software\\Notepad++\\notepad++.exe\u0026#34; \u0026#34;%1\u0026#34;\u0026#34; 删除注册表 # 如果需要删除改注册表，可以保存以下内容，双击打开即可。\nWindows Registry Editor Version 5.00 [-HKEY_CLASSES_ROOT*shellNotePad++] 效果图 # ","date":"4 October 2019","externalUrl":null,"permalink":"/blog/notepad-setup/","section":"Blog","summary":"NotePad++是平常最主要的看 log 软件，最近在安装的时候采用的不是系统按照，直接下载的 zib packet 然后解压缩，导致我在打开一些 log 文件时找不到 notepad++这个软件，通过将其添加到注册表中解决了这个问题。","title":"添加NotePad++注册表","type":"blog"}]